[2024-07-30 10:16:36 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:16:36 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13792 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:16:36 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:16:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:16:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:16:37 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:16:37 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1756 ms[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@47391543[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:16:38 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:16:39 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:16:39 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 10:16:39 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:16:39 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 18 msec}[0;39m
[2024-07-30 10:16:39 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 19 msec}[0;39m
[2024-07-30 10:16:39 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 22 msec}[0;39m
[2024-07-30 10:16:39 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 20 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 21 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 18 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 17 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 17 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 19 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 6 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 22 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 34 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 3 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:16:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 10:16:40 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:16:41 [33mWARN [0;39m restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] [36mException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); Reason: Failed to create query for method public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); At least 2 parameter(s) provided but only 1 parameter(s) present in query[0;39m
[2024-07-30 10:16:41 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:16:41 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:16:41 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:16:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStopping service [Tomcat][0;39m
[2024-07-30 10:16:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [36m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m
[2024-07-30 10:16:41 [31mERROR[0;39m restartedMain] [org.springframework.boot.SpringApplication] [36mApplication run failed[0;39m
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); Reason: Failed to create query for method public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); At least 2 parameter(s) provided but only 1 parameter(s) present in query
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.green.greengram.GreengramApplication.main(GreengramApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); Reason: Failed to create query for method public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); At least 2 parameter(s) provided but only 1 parameter(s) present in query
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); Reason: Failed to create query for method public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); At least 2 parameter(s) provided but only 1 parameter(s) present in query
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); Reason: Failed to create query for method public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); At least 2 parameter(s) provided but only 1 parameter(s) present in query
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 49 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.green.greengram.feedcomment.FeedCommentRepository.findTop3ByFeedOrderByFeedCommentId(com.green.greengram.entity.Feed,int); At least 2 parameter(s) provided but only 1 parameter(s) present in query
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 61 common frames omitted
Caused by: java.lang.IllegalArgumentException: At least 2 parameter(s) provided but only 1 parameter(s) present in query
	at org.springframework.util.Assert.isTrue(Assert.java:129)
	at org.springframework.data.jpa.repository.query.QueryParameterSetterFactory$CriteriaQueryParameterSetterFactory.create(QueryParameterSetterFactory.java:296)
	at org.springframework.data.jpa.repository.query.ParameterBinderFactory.createQueryParameterSetter(ParameterBinderFactory.java:146)
	at org.springframework.data.jpa.repository.query.ParameterBinderFactory.createSetters(ParameterBinderFactory.java:135)
	at org.springframework.data.jpa.repository.query.ParameterBinderFactory.createSetters(ParameterBinderFactory.java:127)
	at org.springframework.data.jpa.repository.query.ParameterBinderFactory.createCriteriaBinder(ParameterBinderFactory.java:73)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.getBinder(PartTreeJpaQuery.java:345)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:223)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:365)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:102)
	... 65 common frames omitted
[2024-07-30 10:17:09 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:17:09 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14000 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:17:09 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:17:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:17:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:17:10 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:17:10 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1490 ms[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4cdac11b[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:17:11 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:17:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:17:12 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 19 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 20 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 18 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 18 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 7 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 9 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 20 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 37 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:17:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:17:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:17:13 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:17:13 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:17:13 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:17:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:17:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:17:14 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@17753b3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@356ee332, org.springframework.security.web.context.SecurityContextHolderFilter@37345d29, org.springframework.security.web.header.HeaderWriterFilter@6519308f, org.springframework.web.filter.CorsFilter@1127948d, org.springframework.security.web.authentication.logout.LogoutFilter@39a242d, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@5df44555, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@6150cbc1, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3d5c5945, com.green.greengram.security.jwt.JwtAuthenticationFilter@6e39dc31, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37a1877e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e48b691, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7690119c, org.springframework.security.web.session.SessionManagementFilter@7a7a0fe6, org.springframework.security.web.access.ExceptionTranslationFilter@21b6f8d4, org.springframework.security.web.access.intercept.AuthorizationFilter@73fece75][0;39m
[2024-07-30 10:17:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:17:14 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:17:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:17:14 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.615 seconds (process running for 5.996)[0;39m
[2024-07-30 10:17:15 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:17:15 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:17:15 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:20:02 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 10:20:02 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:20:02 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:20:02 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:20:02 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:20:02 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14000 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:20:02 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 20 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 563 ms[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4deb4c1b[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:20:03 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 13 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 13 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 12 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 13 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 18 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 14 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 11 msec}[0;39m
[2024-07-30 10:20:03 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 10 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 27 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 6 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 15 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:20:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 10:20:04 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:20:04 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:20:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:20:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:20:05 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@17d96e79, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29c62ac9, org.springframework.security.web.context.SecurityContextHolderFilter@53318bf1, org.springframework.security.web.header.HeaderWriterFilter@7661dc3e, org.springframework.web.filter.CorsFilter@7ae55187, org.springframework.security.web.authentication.logout.LogoutFilter@2422527a, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@58377663, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@100d7ad2, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@d753dfa, com.green.greengram.security.jwt.JwtAuthenticationFilter@3b69d900, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6bea6e2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@486973c6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7efa09c8, org.springframework.security.web.session.SessionManagementFilter@614db444, org.springframework.security.web.access.ExceptionTranslationFilter@4b3fd503, org.springframework.security.web.access.intercept.AuthorizationFilter@5cf2b303][0;39m
[2024-07-30 10:20:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:20:05 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:20:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:20:05 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.28 seconds (process running for 176.348)[0;39m
[2024-07-30 10:20:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 10:20:23 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:20:23 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 10:20:23 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 10:24:20 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:24:20 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14832 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:24:20 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:24:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:24:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:24:20 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 41 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1487 ms[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@60f69e79[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:24:21 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:24:22 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:24:22 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:24:22 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:24:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:24:22 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:24:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 17 msec}[0;39m
[2024-07-30 10:24:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 10:24:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 10:24:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 17 msec}[0;39m
[2024-07-30 10:24:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 15 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 19 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 18 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 10 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 12 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 12 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 10 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 20 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 36 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 38 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 35 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 53 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 5 msec}[0;39m
[2024-07-30 10:24:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:24:23 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:24:24 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:24:24 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:24:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:24:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:24:24 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@742ab0cf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1bba3581, org.springframework.security.web.context.SecurityContextHolderFilter@326ea351, org.springframework.security.web.header.HeaderWriterFilter@22aeafd5, org.springframework.web.filter.CorsFilter@37162ac8, org.springframework.security.web.authentication.logout.LogoutFilter@78737ce3, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@277584b9, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@655af9ee, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5b389b9d, com.green.greengram.security.jwt.JwtAuthenticationFilter@1ca7a7ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@620cfff7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@211716ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5141ff45, org.springframework.security.web.session.SessionManagementFilter@90f5449, org.springframework.security.web.access.ExceptionTranslationFilter@3efcc6d5, org.springframework.security.web.access.intercept.AuthorizationFilter@76eae889][0;39m
[2024-07-30 10:24:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:24:25 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:24:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:24:25 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.537 seconds (process running for 5.918)[0;39m
[2024-07-30 10:24:25 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:24:25 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:24:25 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/index.html[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/index.css[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui-bundle.js[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui.css[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui-standalone-preset.js[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-initializer.js[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /v3/api-docs/swagger-config[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /v3/api-docs[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:28 [32mINFO [0;39m http-nio-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 222 ms[0;39m
[2024-07-30 10:25:39 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-30 10:25:39 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 10:25:39 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic1, upw=1212, providerType=null)[0;39m
[2024-07-30 10:25:39 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.provider_type=4 and u1_0.uid='mic1'
 {executed in 1 msec}[0;39m
[2024-07-30 10:25:39 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:25:39 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ur1_0.user_roles_id,ur1_0.role,ur1_0.role_cd,ur1_0.user_id from user_role ur1_0 where ur1_0.user_id=1
 {executed in 1 msec}[0;39m
[2024-07-30 10:25:39 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select sc1_0.sub_code_id,sc1_0.description,sc1_0.main_code_id,mci1_0.main_code_id,mci1_0.cd_name,mci1_0.description,sc1_0.val from sub_code sc1_0 join main_code mci1_0 on mci1_0.main_code_id=sc1_0.main_code_id where sc1_0.sub_code_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:25:39 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|------------|-------------|-------------|--------|------------|----------|
|sub_code_id |description |main_code_id |main_code_id |cd_name |description |val       |
|------------|------------|-------------|-------------|--------|------------|----------|
|1           |일반 사용자      |1            |1            |role    |권한          |ROLE_USER |
|------------|------------|-------------|-------------|--------|------------|----------|
[0;39m
[2024-07-30 10:25:39 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------------|----------|--------|--------|
|user_roles_id |role      |role_cd |user_id |
|--------------|----------|--------|--------|
|1             |ROLE_USER |1       |1       |
|--------------|----------|--------|--------|
[0;39m
[2024-07-30 10:25:47 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:25:47 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:25:47 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id limit 2997,999
 {executed in 0 msec}[0;39m
[2024-07-30 10:25:47 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|-----------|--------|
|feed_comment_id |comment |created_at |feed_id |updated_at |user_id |
|----------------|--------|-----------|--------|-----------|--------|
|----------------|--------|-----------|--------|-----------|--------|
[0;39m
[2024-07-30 10:25:47 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select count(fc1_0.feed_comment_id) from feed_comment fc1_0 where fc1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:25:47 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------|
|count(fc1_0.feed_comment_id) |
|-----------------------------|
|5                            |
|-----------------------------|
[0;39m
[2024-07-30 10:25:49 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:25:49 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:25:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=2 order by fc1_0.feed_comment_id limit 2997,999
 {executed in 1 msec}[0;39m
[2024-07-30 10:25:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|-----------|--------|
|feed_comment_id |comment |created_at |feed_id |updated_at |user_id |
|----------------|--------|-----------|--------|-----------|--------|
|----------------|--------|-----------|--------|-----------|--------|
[0;39m
[2024-07-30 10:25:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select count(fc1_0.feed_comment_id) from feed_comment fc1_0 where fc1_0.feed_id=2
 {executed in 1 msec}[0;39m
[2024-07-30 10:25:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------|
|count(fc1_0.feed_comment_id) |
|-----------------------------|
|2                            |
|-----------------------------|
[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14832 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:27:12 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 20 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 455 ms[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6d586446[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 18 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 12 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 21 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 8 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 20 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 12 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 18 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 12 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 19 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 12 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 11 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 15 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 23 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 15 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 32 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 32 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 38 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 15 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 10:27:13 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:27:14 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e4fafb5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12acfde7, org.springframework.security.web.context.SecurityContextHolderFilter@15583e52, org.springframework.security.web.header.HeaderWriterFilter@5e38ddab, org.springframework.web.filter.CorsFilter@17f34eee, org.springframework.security.web.authentication.logout.LogoutFilter@23b75e2d, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@26679698, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@432a3894, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@318f0fab, com.green.greengram.security.jwt.JwtAuthenticationFilter@475a1293, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ad8dd3f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d14cbb7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63370de, org.springframework.security.web.session.SessionManagementFilter@2c685f12, org.springframework.security.web.access.ExceptionTranslationFilter@58197016, org.springframework.security.web.access.intercept.AuthorizationFilter@2ab5d62e][0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.08 seconds (process running for 175.252)[0;39m
[2024-07-30 10:27:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 10:28:01 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:28:01 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 10:28:01 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 10:28:03 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:28:03 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13108 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:28:03 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:28:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:28:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:28:04 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:28:04 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 45 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1528 ms[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6784afe[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:28:05 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:28:06 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:28:06 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 14 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 12 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 12 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 13 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 12 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 10:28:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 17 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 27 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 14 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:28:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:28:07 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:28:07 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:28:08 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:28:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:28:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:28:08 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@439ed66e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44fe005d, org.springframework.security.web.context.SecurityContextHolderFilter@7b5bfa68, org.springframework.security.web.header.HeaderWriterFilter@79cfebb6, org.springframework.web.filter.CorsFilter@35b211f9, org.springframework.security.web.authentication.logout.LogoutFilter@4ec9199f, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@4b6d0fc5, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@765afb9b, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@41b34ba0, com.green.greengram.security.jwt.JwtAuthenticationFilter@7e7c2d42, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a1199a1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@662e54c2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f77d34, org.springframework.security.web.session.SessionManagementFilter@2ebc6f1, org.springframework.security.web.access.ExceptionTranslationFilter@3babfdbf, org.springframework.security.web.access.intercept.AuthorizationFilter@189f97e5][0;39m
[2024-07-30 10:28:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:28:09 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:28:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:28:09 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.547 seconds (process running for 5.939)[0;39m
[2024-07-30 10:28:09 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:28:09 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:28:09 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 10:28:15 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:28:15 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:28:15 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id limit 0,999
 {executed in 0 msec}[0;39m
[2024-07-30 10:28:15 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:28:15 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:28:15 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:28:15 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:28:15 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |1       |
|2               |2번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|3               |3번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|4               |4번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|5               |5번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:28:15 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
java.lang.IndexOutOfBoundsException: toIndex = 999
	at java.base/java.util.AbstractList.subListRangeCheck(AbstractList.java:507)
	at java.base/java.util.ArrayList.subList(ArrayList.java:1108)
	at java.base/java.util.Collections$UnmodifiableRandomAccessList.subList(Collections.java:1439)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 10:28:15 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [java.lang.IndexOutOfBoundsException: toIndex = 999][0;39m
[2024-07-30 10:29:06 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:29:06 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:29:06 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:31:45 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:31:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 15124 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:31:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:31:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:31:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 41 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:31:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1481 ms[0;39m
[2024-07-30 10:31:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:31:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@681d71c2[0;39m
[2024-07-30 10:31:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:31:47 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:31:47 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:31:47 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:31:47 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:31:48 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 16 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 10 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 10 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 20 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 19 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 38 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 1 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 10:31:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:31:49 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:31:49 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:31:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:31:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3bdbbd1d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d573577, org.springframework.security.web.context.SecurityContextHolderFilter@59cc2642, org.springframework.security.web.header.HeaderWriterFilter@589ea88d, org.springframework.web.filter.CorsFilter@515c9700, org.springframework.security.web.authentication.logout.LogoutFilter@15463b5b, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7c0110d7, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@189f97e5, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@52b256e1, com.green.greengram.security.jwt.JwtAuthenticationFilter@60b81e82, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56a05910, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73390041, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77dd543a, org.springframework.security.web.session.SessionManagementFilter@6f5a8a5b, org.springframework.security.web.access.ExceptionTranslationFilter@a11e786, org.springframework.security.web.access.intercept.AuthorizationFilter@59dedfdb][0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.471 seconds (process running for 5.856)[0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:31:50 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:32:02 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:32:02 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:32:02 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:32:04 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:32:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14484 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:32:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:32:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:32:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 48 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:32:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1535 ms[0;39m
[2024-07-30 10:32:06 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:32:06 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3bbb8797[0;39m
[2024-07-30 10:32:06 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:32:06 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:32:06 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:32:06 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:32:06 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:32:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 10:32:07 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 13 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 16 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 20 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 20 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 44 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:32:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 10:32:07 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:32:08 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:32:08 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:32:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@49690c15, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@417efbe6, org.springframework.security.web.context.SecurityContextHolderFilter@15b38658, org.springframework.security.web.header.HeaderWriterFilter@5e9478bc, org.springframework.web.filter.CorsFilter@3c218bb4, org.springframework.security.web.authentication.logout.LogoutFilter@28c05ca0, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@2ef59cea, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@6a619a1d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5141ff45, com.green.greengram.security.jwt.JwtAuthenticationFilter@1dc81899, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a437715, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b6cb5b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@497202c2, org.springframework.security.web.session.SessionManagementFilter@620cfff7, org.springframework.security.web.access.ExceptionTranslationFilter@4149c15d, org.springframework.security.web.access.intercept.AuthorizationFilter@61f9bbe0][0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.606 seconds (process running for 5.97)[0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:32:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:32:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:32:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:32:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id limit 0,999
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 1 msec}[0;39m
[2024-07-30 10:32:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:32:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:32:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |1       |
|2               |2번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|3               |3번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|4               |4번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|5               |5번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:32:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:32:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:32:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=2 order by fc1_0.feed_comment_id limit 0,999
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |2         |2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:32:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=3
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm      |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
|3       |2024-07-15 10:10:42.0 |사용자_관리자 |null|4             |mic3 |2024-07-15 10:14:42.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:32:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|6               |1번째     |2024-07-30 10:10:21.0 |2       |2024-07-30 10:10:20.0 |3       |
|7               |2번째     |2024-07-30 10:10:21.0 |2       |2024-07-30 10:10:20.0 |3       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:32:21 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:32:21 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:32:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id limit 0,999
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:32:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:32:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:32:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |1       |
|2               |2번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|3               |3번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|4               |4번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|5               |5번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:32:54 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:32:54 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:32:54 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:34:27 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:34:27 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 8992 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:34:27 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:34:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:34:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:34:28 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:34:28 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 44 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:34:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:34:28 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:34:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:34:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1551 ms[0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@492792ee[0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:34:29 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:34:29 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:34:30 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 18 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 24 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 20 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 16 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 21 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 14 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 22 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:34:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 10 msec}[0;39m
[2024-07-30 10:34:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 10:34:31 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:34:31 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:34:31 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ec3b91a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4959008a, org.springframework.security.web.context.SecurityContextHolderFilter@ecbeeb9, org.springframework.security.web.header.HeaderWriterFilter@1a665d80, org.springframework.web.filter.CorsFilter@355e991a, org.springframework.security.web.authentication.logout.LogoutFilter@25521955, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@4900b510, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1cdc864e, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5eefdbd2, com.green.greengram.security.jwt.JwtAuthenticationFilter@3f5ec05e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38e401ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5aee1fa8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2351db32, org.springframework.security.web.session.SessionManagementFilter@544755ba, org.springframework.security.web.access.ExceptionTranslationFilter@730134bc, org.springframework.security.web.access.intercept.AuthorizationFilter@3704eeb1][0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.569 seconds (process running for 5.948)[0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:34:32 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 10:34:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:34:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:34:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id
 {executed in 1 msec}[0;39m
[2024-07-30 10:34:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 1 msec}[0;39m
[2024-07-30 10:34:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:34:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:34:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:34:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |1       |
|2               |2번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|3               |3번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|4               |4번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|5               |5번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:34:52 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:34:52 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:34:52 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:34:54 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:34:54 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 6776 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:34:54 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:34:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:34:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:34:55 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:34:55 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1465 ms[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3bbb8797[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:34:56 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:34:56 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:34:57 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 27 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 16 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 20 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 18 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 15 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 18 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 21 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 21 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 6 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 10:34:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 4 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:34:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 10:34:58 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:34:58 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:34:58 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:34:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:34:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:34:59 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6a619a1d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@742ab0cf, org.springframework.security.web.context.SecurityContextHolderFilter@2dcac23b, org.springframework.security.web.header.HeaderWriterFilter@4c7c4c06, org.springframework.web.filter.CorsFilter@1bba3581, org.springframework.security.web.authentication.logout.LogoutFilter@47fdc26e, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@2ef59cea, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@348b7b48, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@699f9ac9, com.green.greengram.security.jwt.JwtAuthenticationFilter@1dc81899, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25bfa43a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7951f3aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37162ac8, org.springframework.security.web.session.SessionManagementFilter@3b20a299, org.springframework.security.web.access.ExceptionTranslationFilter@3356c481, org.springframework.security.web.access.intercept.AuthorizationFilter@2b074c84][0;39m
[2024-07-30 10:34:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:34:59 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:34:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:34:59 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.463 seconds (process running for 5.855)[0;39m
[2024-07-30 10:35:00 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:35:00 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:35:00 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 4 ms[0;39m
[2024-07-30 10:35:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:35:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:35:03 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id
 {executed in 1 msec}[0;39m
[2024-07-30 10:35:03 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:35:03 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:35:03 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:35:03 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:35:03 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |1       |
|2               |2번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|3               |3번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|4               |4번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|5               |5번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 6776 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 17 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 481 ms[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@474c3148[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:36:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:36:08 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:36:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 25 msec}[0;39m
[2024-07-30 10:36:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 13 msec}[0;39m
[2024-07-30 10:36:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 10:36:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 5 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 27 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 22 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 3 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 19 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 5 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 35 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 37 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 29 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:09 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:36:09 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:36:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:36:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:36:10 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2d5d3dbf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32eb9d94, org.springframework.security.web.context.SecurityContextHolderFilter@517bd3c, org.springframework.security.web.header.HeaderWriterFilter@1efa0d43, org.springframework.web.filter.CorsFilter@113bbc03, org.springframework.security.web.authentication.logout.LogoutFilter@43258f2d, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@20d08c7d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@543b7862, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4ef00bca, com.green.greengram.security.jwt.JwtAuthenticationFilter@4d9d5627, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d7a9f7d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3fce5373, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7bf0f59b, org.springframework.security.web.session.SessionManagementFilter@f1c43d3, org.springframework.security.web.access.ExceptionTranslationFilter@1b183858, org.springframework.security.web.access.intercept.AuthorizationFilter@549160ca][0;39m
[2024-07-30 10:36:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:36:10 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:36:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:36:10 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.119 seconds (process running for 76.273)[0;39m
[2024-07-30 10:36:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 10:36:12 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:36:12 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 10:36:12 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 10:36:13 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:36:13 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 4668 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:36:13 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:36:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:36:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:36:14 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:36:14 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1584 ms[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@b72ed17[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:36:15 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:36:16 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:36:16 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 13 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 19 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 21 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 10:36:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 12 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 6 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 20 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 27 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 4 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:36:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:36:17 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:36:17 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:36:18 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:36:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:36:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:36:18 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6bbd29f0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24b6139c, org.springframework.security.web.context.SecurityContextHolderFilter@927f3ad, org.springframework.security.web.header.HeaderWriterFilter@320b94c9, org.springframework.web.filter.CorsFilter@35757ad6, org.springframework.security.web.authentication.logout.LogoutFilter@7c11616b, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@4ed5a2a0, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@b492646, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@b2cae9e, com.green.greengram.security.jwt.JwtAuthenticationFilter@13040153, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76376f06, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@269725ac, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38cdfa6a, org.springframework.security.web.session.SessionManagementFilter@2a73b249, org.springframework.security.web.access.ExceptionTranslationFilter@57a9740, org.springframework.security.web.access.intercept.AuthorizationFilter@6790e871][0;39m
[2024-07-30 10:36:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:36:19 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:36:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:36:19 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.679 seconds (process running for 6.074)[0;39m
[2024-07-30 10:36:19 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:36:19 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:36:19 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 5 ms[0;39m
[2024-07-30 10:36:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:36:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:36:22 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id
 {executed in 1 msec}[0;39m
[2024-07-30 10:36:22 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 1 msec}[0;39m
[2024-07-30 10:36:22 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:36:22 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 1 msec}[0;39m
[2024-07-30 10:36:22 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:36:22 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |1       |
|2               |2번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|3               |3번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|4               |4번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|5               |5번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:36:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:36:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:36:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=2 order by fc1_0.feed_comment_id
 {executed in 0 msec}[0;39m
[2024-07-30 10:36:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=2
 {executed in 1 msec}[0;39m
[2024-07-30 10:36:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |2         |2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:36:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=3
 {executed in 0 msec}[0;39m
[2024-07-30 10:36:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm      |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
|3       |2024-07-15 10:10:42.0 |사용자_관리자 |null|4             |mic3 |2024-07-15 10:14:42.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:36:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|6               |1번째     |2024-07-30 10:10:21.0 |2       |2024-07-30 10:10:20.0 |3       |
|7               |2번째     |2024-07-30 10:10:21.0 |2       |2024-07-30 10:10:20.0 |3       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:36:50 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:36:50 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:36:50 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:36:52 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:36:52 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 4924 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:36:52 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:36:52 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:36:52 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 41 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:36:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1463 ms[0;39m
[2024-07-30 10:36:54 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:36:54 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@a2b5e33[0;39m
[2024-07-30 10:36:54 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:36:54 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:36:54 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:36:54 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:36:54 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:36:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:36:55 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 12 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 22 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 21 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 18 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 24 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 23 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 36 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:36:55 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 10:36:55 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:36:56 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:36:56 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:36:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2690b101, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b21e84d, org.springframework.security.web.context.SecurityContextHolderFilter@3960c4c9, org.springframework.security.web.header.HeaderWriterFilter@13a158c0, org.springframework.web.filter.CorsFilter@57aa387f, org.springframework.security.web.authentication.logout.LogoutFilter@36a68e8d, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@43320c72, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@511d97b8, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@62c5e3f6, com.green.greengram.security.jwt.JwtAuthenticationFilter@29deac62, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2000b915, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26cf0801, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72516e9b, org.springframework.security.web.session.SessionManagementFilter@1fa30e2a, org.springframework.security.web.access.ExceptionTranslationFilter@438425bc, org.springframework.security.web.access.intercept.AuthorizationFilter@4cca02d2][0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.452 seconds (process running for 5.835)[0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:36:57 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 10:37:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:37:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:37:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=2 order by fc1_0.feed_comment_id
 {executed in 0 msec}[0;39m
[2024-07-30 10:37:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:37:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |2         |2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:37:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=3
 {executed in 0 msec}[0;39m
[2024-07-30 10:37:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm      |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
|3       |2024-07-15 10:10:42.0 |사용자_관리자 |null|4             |mic3 |2024-07-15 10:14:42.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|--------|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:37:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|6               |1번째     |2024-07-30 10:10:21.0 |2       |2024-07-30 10:10:20.0 |3       |
|7               |2번째     |2024-07-30 10:10:21.0 |2       |2024-07-30 10:10:20.0 |3       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:37:02 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:37:02 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:37:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc1_0.feed_comment_id,fc1_0.comment,fc1_0.created_at,fc1_0.feed_id,fc1_0.updated_at,fc1_0.user_id from feed_comment fc1_0 where fc1_0.feed_id=1 order by fc1_0.feed_comment_id
 {executed in 0 msec}[0;39m
[2024-07-30 10:37:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:37:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:37:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 1 msec}[0;39m
[2024-07-30 10:37:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:37:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|----------------------|--------|----------------------|--------|
|feed_comment_id |comment |created_at            |feed_id |updated_at            |user_id |
|----------------|--------|----------------------|--------|----------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |1       |
|2               |2번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|3               |3번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|4               |4번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|5               |5번째     |2024-07-30 10:10:21.0 |1       |2024-07-30 10:10:20.0 |2       |
|----------------|--------|----------------------|--------|----------------------|--------|
[0;39m
[2024-07-30 10:37:07 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:37:07 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:37:07 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:45:55 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:45:55 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14636 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:45:55 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:45:55 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:45:55 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 39 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:45:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1486 ms[0;39m
[2024-07-30 10:45:57 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:45:57 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@588fc154[0;39m
[2024-07-30 10:45:57 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:45:57 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:45:57 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:45:57 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:45:57 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:45:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:45:58 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 20 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 20 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 21 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 40 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 17 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 13 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 12 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 12 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 10 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 10:45:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:45:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 10:45:59 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:45:59 [33mWARN [0;39m restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] [36mException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); Reason: Failed to create query for method public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); No property 'commentLimit3' found for type 'Feed'; Traversed path: FeedComment.feed[0;39m
[2024-07-30 10:45:59 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:45:59 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:45:59 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:45:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStopping service [Tomcat][0;39m
[2024-07-30 10:45:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [36m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m
[2024-07-30 10:45:59 [31mERROR[0;39m restartedMain] [org.springframework.boot.SpringApplication] [36mApplication run failed[0;39m
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); Reason: Failed to create query for method public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); No property 'commentLimit3' found for type 'Feed'; Traversed path: FeedComment.feed
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.green.greengram.GreengramApplication.main(GreengramApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); Reason: Failed to create query for method public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); No property 'commentLimit3' found for type 'Feed'; Traversed path: FeedComment.feed
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentRepository' defined in com.green.greengram.feedcomment.FeedCommentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); Reason: Failed to create query for method public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); No property 'commentLimit3' found for type 'Feed'; Traversed path: FeedComment.feed
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); Reason: Failed to create query for method public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); No property 'commentLimit3' found for type 'Feed'; Traversed path: FeedComment.feed
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 49 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.green.greengram.feedcomment.FeedCommentRepository.findAllByFeedCommentLimit3AndInfinity(com.green.greengram.entity.Feed,org.springframework.data.domain.Pageable); No property 'commentLimit3' found for type 'Feed'; Traversed path: FeedComment.feed
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 61 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'commentLimit3' found for type 'Feed'; Traversed path: FeedComment.feed
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:443)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:419)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:453)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:476)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:476)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:419)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:372)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:354)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:100)
	... 65 common frames omitted
[2024-07-30 10:47:21 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:47:21 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 8564 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:47:21 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:47:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:47:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:47:22 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:47:22 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 43 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1795 ms[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5e139f9[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:47:23 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:47:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:47:24 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 17 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 13 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 16 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 21 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 22 msec}[0;39m
[2024-07-30 10:47:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:47:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 10:47:25 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:47:25 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:47:26 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:47:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:47:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:47:26 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6876fa7c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@414f510d, org.springframework.security.web.context.SecurityContextHolderFilter@285521cf, org.springframework.security.web.header.HeaderWriterFilter@301169c8, org.springframework.web.filter.CorsFilter@fd962e3, org.springframework.security.web.authentication.logout.LogoutFilter@2065b533, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@2af08afe, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@582fa326, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@49c2f776, com.green.greengram.security.jwt.JwtAuthenticationFilter@75b08d50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47979b49, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@453790d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ef44e88, org.springframework.security.web.session.SessionManagementFilter@10a6ddb9, org.springframework.security.web.access.ExceptionTranslationFilter@2e39482, org.springframework.security.web.access.intercept.AuthorizationFilter@46040672][0;39m
[2024-07-30 10:47:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:47:27 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:47:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:47:27 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 6.154 seconds (process running for 6.952)[0;39m
[2024-07-30 10:47:27 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:47:27 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:47:27 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 3 ms[0;39m
[2024-07-30 10:47:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:47:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:47:30 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.hibernate.sql.exec.internal.JdbcParameterBindingsImpl.<init>(JdbcParameterBindingsImpl.java:78)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:126)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
[2024-07-30 10:47:30 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`][0;39m
[2024-07-30 10:48:56 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:48:56 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:48:56 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:48:58 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:48:58 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14860 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:48:58 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:48:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:48:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:48:59 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:48:59 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 44 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1649 ms[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@15bb4d4[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:49:00 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:49:01 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:01 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 6 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 22 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 22 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 15 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:02 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:49:02 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:49:03 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:49:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:49:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:49:03 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@55e0314a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62326c21, org.springframework.security.web.context.SecurityContextHolderFilter@68f2fb08, org.springframework.security.web.header.HeaderWriterFilter@2a48ab16, org.springframework.web.filter.CorsFilter@7bbcfa02, org.springframework.security.web.authentication.logout.LogoutFilter@32ce0ea, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@737e7363, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@645614a5, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5bb253e, com.green.greengram.security.jwt.JwtAuthenticationFilter@15a627a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42462dbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27864d0f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@385a1a9, org.springframework.security.web.session.SessionManagementFilter@7a2702c7, org.springframework.security.web.access.ExceptionTranslationFilter@47327b72, org.springframework.security.web.access.intercept.AuthorizationFilter@712b062][0;39m
[2024-07-30 10:49:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:49:04 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:49:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:49:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.91 seconds (process running for 6.392)[0;39m
[2024-07-30 10:49:04 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:49:04 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:49:04 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:49:07 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:49:07 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:49:07 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.hibernate.sql.exec.internal.JdbcParameterBindingsImpl.<init>(JdbcParameterBindingsImpl.java:78)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:126)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
[2024-07-30 10:49:07 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`][0;39m
[2024-07-30 10:49:37 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:49:37 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:49:37 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:49:39 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:49:39 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13684 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:49:39 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:49:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:49:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:49:40 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:49:40 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 43 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1628 ms[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2093bade[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:49:41 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:49:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:49:42 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 14 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 17 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 20 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 20 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 21 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 13 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 10 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 9 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 6 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 10:49:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 36 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 34 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 28 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:49:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 10:49:43 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:49:43 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:49:44 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:49:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:49:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:49:44 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@260a304, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e21205a, org.springframework.security.web.context.SecurityContextHolderFilter@3abd4772, org.springframework.security.web.header.HeaderWriterFilter@3e28e26d, org.springframework.web.filter.CorsFilter@529350f5, org.springframework.security.web.authentication.logout.LogoutFilter@6b58687f, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@fbda9bd, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@25f71ada, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1863d1fe, com.green.greengram.security.jwt.JwtAuthenticationFilter@732d0171, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@17937fdc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c829d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66189284, org.springframework.security.web.session.SessionManagementFilter@2190a3c6, org.springframework.security.web.access.ExceptionTranslationFilter@3e8453c4, org.springframework.security.web.access.intercept.AuthorizationFilter@6ea28695][0;39m
[2024-07-30 10:49:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:49:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:49:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:49:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.973 seconds (process running for 6.422)[0;39m
[2024-07-30 10:49:45 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:49:45 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:49:45 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:49:47 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:49:47 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:49:47 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy186.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.hibernate.sql.exec.internal.JdbcParameterBindingsImpl.<init>(JdbcParameterBindingsImpl.java:78)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:126)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
[2024-07-30 10:49:47 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`][0;39m
[2024-07-30 10:50:39 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:50:39 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:50:39 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:50:42 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:50:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 11680 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:50:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:50:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:50:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 46 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:50:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1626 ms[0;39m
[2024-07-30 10:50:44 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:50:44 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2b47e7fe[0;39m
[2024-07-30 10:50:44 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:50:44 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:50:44 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:50:44 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:50:44 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:50:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:50:45 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 13 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 17 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 22 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 24 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 15 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 17 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 21 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 20 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 9 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 10 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 22 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:50:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:50:45 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:50:46 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:50:46 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:50:47 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2e05f4d7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52b95929, org.springframework.security.web.context.SecurityContextHolderFilter@38ca7f1c, org.springframework.security.web.header.HeaderWriterFilter@4aed79e0, org.springframework.web.filter.CorsFilter@6f49dc91, org.springframework.security.web.authentication.logout.LogoutFilter@2b25d301, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@681c395e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1e07503b, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@e3713e8, com.green.greengram.security.jwt.JwtAuthenticationFilter@4a5f0c21, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a0957c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d10a345, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30a15660, org.springframework.security.web.session.SessionManagementFilter@756967d6, org.springframework.security.web.access.ExceptionTranslationFilter@61a6f108, org.springframework.security.web.access.intercept.AuthorizationFilter@13e14f98][0;39m
[2024-07-30 10:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:50:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:50:47 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 6.008 seconds (process running for 6.458)[0;39m
[2024-07-30 10:50:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:50:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:50:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:50:51 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:50:51 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:50:51 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`
	at org.hibernate.sql.exec.internal.JdbcParameterBindingsImpl.<init>(JdbcParameterBindingsImpl.java:78)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:126)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
[2024-07-30 10:50:51 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve NativeQuery parameter type : `org.hibernate.query.internal.QueryParameterNamedImpl@b3ccff78`][0;39m
[2024-07-30 10:53:36 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:53:36 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:53:36 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:54:06 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:54:06 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 2008 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:54:06 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:54:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:54:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:54:07 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:54:07 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1516 ms[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@23df8149[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:54:08 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:54:09 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:54:09 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 14 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 12 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 17 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 12 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 12 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 10:54:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 19 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 21 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 36 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 34 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 10:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:54:10 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:54:10 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:54:11 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:54:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:54:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:54:11 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@335599f1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@765afb9b, org.springframework.security.web.context.SecurityContextHolderFilter@444d2cdd, org.springframework.security.web.header.HeaderWriterFilter@7ae24fc5, org.springframework.web.filter.CorsFilter@6d2bfa91, org.springframework.security.web.authentication.logout.LogoutFilter@59dedfdb, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@6c5e0f65, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2e0dea77, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@8f25217, com.green.greengram.security.jwt.JwtAuthenticationFilter@726e3631, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79cfebb6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1352e0dc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f917618, org.springframework.security.web.session.SessionManagementFilter@5b59e771, org.springframework.security.web.access.ExceptionTranslationFilter@729bdb83, org.springframework.security.web.access.intercept.AuthorizationFilter@5c6df113][0;39m
[2024-07-30 10:54:12 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:54:12 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:54:12 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:54:12 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.615 seconds (process running for 6.009)[0;39m
[2024-07-30 10:54:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:54:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:54:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 10:54:16 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:54:16 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:54:16 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, f.feed_id, u.user_id, u.nm, u.pic from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_comment_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 1 msec}[0;39m
[2024-07-30 10:54:16 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m1. ResultSet.findColumn(comment)[0;39m
java.sql.SQLException: Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]
	at org.mariadb.jdbc.client.result.Result.findColumn(Result.java:1740)
	at net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy.findColumn(ResultSetSpy.java:2482)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.findColumn(HikariProxyResultSet.java)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:65)
	at org.hibernate.query.results.ResultsHelper.lambda$resolveSqlExpression$0(ResultsHelper.java:63)
	at org.hibernate.query.results.DomainResultCreationStateImpl.resolveSqlExpression(DomainResultCreationStateImpl.java:278)
	at org.hibernate.query.results.ResultsHelper.resolveSqlExpression(ResultsHelper.java:57)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:97)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:37)
	at org.hibernate.query.results.DomainResultCreationStateImpl.lambda$createFetchableConsumer$3(DomainResultCreationStateImpl.java:539)
	at org.hibernate.metamodel.mapping.internal.ImmutableAttributeMappingList.forEach(ImmutableAttributeMappingList.java:44)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitFetchables(AbstractEntityPersister.java:6134)
	at org.hibernate.query.results.DomainResultCreationStateImpl.visitFetches(DomainResultCreationStateImpl.java:454)
	at org.hibernate.sql.results.graph.AbstractFetchParent.afterInitialize(AbstractFetchParent.java:30)
	at org.hibernate.sql.results.graph.entity.AbstractEntityResultGraphNode.afterInitialize(AbstractEntityResultGraphNode.java:69)
	at org.hibernate.persister.entity.AbstractEntityPersister.createDomainResult(AbstractEntityPersister.java:1319)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:129)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:30)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:229)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 10:54:16 [33mWARN [0;39m http-nio-8080-exec-1] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 0, SQLState: null[0;39m
[2024-07-30 10:54:16 [31mERROR[0;39m http-nio-8080-exec-1] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mUnknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm][0;39m
[2024-07-30 10:54:16 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------|---|----|
|feed_comment_id |feed_id |user_id |nm |pic |
|----------------|--------|--------|---|----|
|----------------|--------|--------|---|----|
[0;39m
[2024-07-30 10:54:16 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.orm.jpa.JpaSystemException: Unable to find column position by name: comment [Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]] [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to find column position by name: comment [Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:70)
	at org.hibernate.query.results.ResultsHelper.lambda$resolveSqlExpression$0(ResultsHelper.java:63)
	at org.hibernate.query.results.DomainResultCreationStateImpl.resolveSqlExpression(DomainResultCreationStateImpl.java:278)
	at org.hibernate.query.results.ResultsHelper.resolveSqlExpression(ResultsHelper.java:57)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:97)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:37)
	at org.hibernate.query.results.DomainResultCreationStateImpl.lambda$createFetchableConsumer$3(DomainResultCreationStateImpl.java:539)
	at org.hibernate.metamodel.mapping.internal.ImmutableAttributeMappingList.forEach(ImmutableAttributeMappingList.java:44)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitFetchables(AbstractEntityPersister.java:6134)
	at org.hibernate.query.results.DomainResultCreationStateImpl.visitFetches(DomainResultCreationStateImpl.java:454)
	at org.hibernate.sql.results.graph.AbstractFetchParent.afterInitialize(AbstractFetchParent.java:30)
	at org.hibernate.sql.results.graph.entity.AbstractEntityResultGraphNode.afterInitialize(AbstractEntityResultGraphNode.java:69)
	at org.hibernate.persister.entity.AbstractEntityPersister.createDomainResult(AbstractEntityPersister.java:1319)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:129)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:30)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:229)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLException: Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]
	at org.mariadb.jdbc.client.result.Result.findColumn(Result.java:1740)
	at net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy.findColumn(ResultSetSpy.java:2482)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.findColumn(HikariProxyResultSet.java)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:65)
	... 204 common frames omitted
[2024-07-30 10:54:16 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.orm.jpa.JpaSystemException: Unable to find column position by name: comment [Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]] [n/a]][0;39m
[2024-07-30 10:55:28 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:55:28 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:55:28 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:55:30 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:55:30 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13988 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:55:30 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:55:30 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:55:30 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:55:31 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:55:31 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1537 ms[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@73925144[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:55:32 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:55:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:55:33 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 16 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 18 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 23 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 19 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 10 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:55:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 10:55:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:55:34 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:55:34 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:55:34 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:55:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:55:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:55:35 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@718a8a83, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2690b101, org.springframework.security.web.context.SecurityContextHolderFilter@1fa30e2a, org.springframework.security.web.header.HeaderWriterFilter@69bd613b, org.springframework.web.filter.CorsFilter@2b21e84d, org.springframework.security.web.authentication.logout.LogoutFilter@4d6393a9, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@e05ca8e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5f59a2af, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5fd80fe2, com.green.greengram.security.jwt.JwtAuthenticationFilter@74319ba2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44999025, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17e9c2df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57aa387f, org.springframework.security.web.session.SessionManagementFilter@1449657b, org.springframework.security.web.access.ExceptionTranslationFilter@c4ee395, org.springframework.security.web.access.intercept.AuthorizationFilter@54c1b7d9][0;39m
[2024-07-30 10:55:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:55:35 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:55:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:55:35 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.535 seconds (process running for 5.935)[0;39m
[2024-07-30 10:55:36 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:55:36 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:55:36 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:55:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:55:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:55:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, f.feed_id, u.user_id, u.nm, u.pic from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 0 msec}[0;39m
[2024-07-30 10:55:38 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m1. ResultSet.findColumn(comment)[0;39m
java.sql.SQLException: Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]
	at org.mariadb.jdbc.client.result.Result.findColumn(Result.java:1740)
	at net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy.findColumn(ResultSetSpy.java:2482)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.findColumn(HikariProxyResultSet.java)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:65)
	at org.hibernate.query.results.ResultsHelper.lambda$resolveSqlExpression$0(ResultsHelper.java:63)
	at org.hibernate.query.results.DomainResultCreationStateImpl.resolveSqlExpression(DomainResultCreationStateImpl.java:278)
	at org.hibernate.query.results.ResultsHelper.resolveSqlExpression(ResultsHelper.java:57)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:97)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:37)
	at org.hibernate.query.results.DomainResultCreationStateImpl.lambda$createFetchableConsumer$3(DomainResultCreationStateImpl.java:539)
	at org.hibernate.metamodel.mapping.internal.ImmutableAttributeMappingList.forEach(ImmutableAttributeMappingList.java:44)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitFetchables(AbstractEntityPersister.java:6134)
	at org.hibernate.query.results.DomainResultCreationStateImpl.visitFetches(DomainResultCreationStateImpl.java:454)
	at org.hibernate.sql.results.graph.AbstractFetchParent.afterInitialize(AbstractFetchParent.java:30)
	at org.hibernate.sql.results.graph.entity.AbstractEntityResultGraphNode.afterInitialize(AbstractEntityResultGraphNode.java:69)
	at org.hibernate.persister.entity.AbstractEntityPersister.createDomainResult(AbstractEntityPersister.java:1319)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:129)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:30)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:229)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 10:55:38 [33mWARN [0;39m http-nio-8080-exec-1] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 0, SQLState: null[0;39m
[2024-07-30 10:55:38 [31mERROR[0;39m http-nio-8080-exec-1] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mUnknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm][0;39m
[2024-07-30 10:55:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------|---|----|
|feed_comment_id |feed_id |user_id |nm |pic |
|----------------|--------|--------|---|----|
|----------------|--------|--------|---|----|
[0;39m
[2024-07-30 10:55:38 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.orm.jpa.JpaSystemException: Unable to find column position by name: comment [Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]] [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to find column position by name: comment [Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:70)
	at org.hibernate.query.results.ResultsHelper.lambda$resolveSqlExpression$0(ResultsHelper.java:63)
	at org.hibernate.query.results.DomainResultCreationStateImpl.resolveSqlExpression(DomainResultCreationStateImpl.java:278)
	at org.hibernate.query.results.ResultsHelper.resolveSqlExpression(ResultsHelper.java:57)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:97)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:37)
	at org.hibernate.query.results.DomainResultCreationStateImpl.lambda$createFetchableConsumer$3(DomainResultCreationStateImpl.java:539)
	at org.hibernate.metamodel.mapping.internal.ImmutableAttributeMappingList.forEach(ImmutableAttributeMappingList.java:44)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitFetchables(AbstractEntityPersister.java:6134)
	at org.hibernate.query.results.DomainResultCreationStateImpl.visitFetches(DomainResultCreationStateImpl.java:454)
	at org.hibernate.sql.results.graph.AbstractFetchParent.afterInitialize(AbstractFetchParent.java:30)
	at org.hibernate.sql.results.graph.entity.AbstractEntityResultGraphNode.afterInitialize(AbstractEntityResultGraphNode.java:69)
	at org.hibernate.persister.entity.AbstractEntityPersister.createDomainResult(AbstractEntityPersister.java:1319)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:129)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:30)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:229)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLException: Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]
	at org.mariadb.jdbc.client.result.Result.findColumn(Result.java:1740)
	at net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy.findColumn(ResultSetSpy.java:2482)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.findColumn(HikariProxyResultSet.java)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:65)
	... 204 common frames omitted
[2024-07-30 10:55:38 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.orm.jpa.JpaSystemException: Unable to find column position by name: comment [Unknown label 'comment'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, fc.feed_comment_id, pic, u.nm, feed_id, nm]] [n/a]][0;39m
[2024-07-30 10:56:28 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:56:28 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:56:28 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:56:30 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:56:30 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 1112 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:56:30 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:56:30 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:56:30 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:56:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1493 ms[0;39m
[2024-07-30 10:56:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:56:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3bed5729[0;39m
[2024-07-30 10:56:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:56:32 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:56:32 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:56:32 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:56:32 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:56:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:56:33 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 18 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 0 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 10:56:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 10:56:33 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:56:34 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:56:34 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:56:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1815018b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76682fde, org.springframework.security.web.context.SecurityContextHolderFilter@7268da60, org.springframework.security.web.header.HeaderWriterFilter@50cce1c2, org.springframework.web.filter.CorsFilter@1e10ac11, org.springframework.security.web.authentication.logout.LogoutFilter@1882751b, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7b52eac, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@6b19b9, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@385b54a6, com.green.greengram.security.jwt.JwtAuthenticationFilter@9ba6320, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37b35696, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@210ca218, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d34026a, org.springframework.security.web.session.SessionManagementFilter@22d60f42, org.springframework.security.web.access.ExceptionTranslationFilter@4265e55a, org.springframework.security.web.access.intercept.AuthorizationFilter@5cc87bb2][0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.485 seconds (process running for 5.874)[0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:56:35 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 10:56:39 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:56:39 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:56:39 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mCustomException - handlerException: {}[0;39m
com.green.greengram.exception.CustomException: null
	at com.green.greengram.security.jwt.JwtAuthenticationEntryPoint.commence(JwtAuthenticationEntryPoint.java:30)
	at org.springframework.security.web.access.ExceptionTranslationFilter.sendStartAuthentication(ExceptionTranslationFilter.java:219)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleAccessDeniedException(ExceptionTranslationFilter.java:197)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleSpringSecurityException(ExceptionTranslationFilter.java:178)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:147)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 10:56:39 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [com.green.greengram.exception.CustomException][0;39m
[2024-07-30 10:56:43 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-30 10:56:43 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDI3MzksImV4cCI6MTcyMjMwNDUzOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.CyejU6_vP7SB3NO1ua00nvo3nBJ4b3Y-tDtKX7AGiD28rG0DgRQTXi-rQC_TkRi8COn_eCN5W4mhASHq5AQ0Ug[0;39m
[2024-07-30 10:56:43 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic1, upw=1212, providerType=null)[0;39m
[2024-07-30 10:56:43 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.provider_type=4 and u1_0.uid='mic1'
 {executed in 1 msec}[0;39m
[2024-07-30 10:56:43 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:56:44 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ur1_0.user_roles_id,ur1_0.role,ur1_0.role_cd,ur1_0.user_id from user_role ur1_0 where ur1_0.user_id=1
 {executed in 1 msec}[0;39m
[2024-07-30 10:56:44 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select sc1_0.sub_code_id,sc1_0.description,sc1_0.main_code_id,mci1_0.main_code_id,mci1_0.cd_name,mci1_0.description,sc1_0.val from sub_code sc1_0 join main_code mci1_0 on mci1_0.main_code_id=sc1_0.main_code_id where sc1_0.sub_code_id=1
 {executed in 1 msec}[0;39m
[2024-07-30 10:56:44 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|------------|-------------|-------------|--------|------------|----------|
|sub_code_id |description |main_code_id |main_code_id |cd_name |description |val       |
|------------|------------|-------------|-------------|--------|------------|----------|
|1           |일반 사용자      |1            |1            |role    |권한          |ROLE_USER |
|------------|------------|-------------|-------------|--------|------------|----------|
[0;39m
[2024-07-30 10:56:44 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------------|----------|--------|--------|
|user_roles_id |role      |role_cd |user_id |
|--------------|----------|--------|--------|
|1             |ROLE_USER |1       |1       |
|--------------|----------|--------|--------|
[0;39m
[2024-07-30 10:56:51 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:56:51 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 10:56:51 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, fc.comment, f.feed_id, u.user_id, u.nm, u.pic from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 1 msec}[0;39m
[2024-07-30 10:56:51 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m1. ResultSet.findColumn(created_at)[0;39m
java.sql.SQLException: Unknown label 'created_at'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, comment, fc.feed_comment_id, fc.comment, pic, u.nm, feed_id, nm]
	at org.mariadb.jdbc.client.result.Result.findColumn(Result.java:1740)
	at net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy.findColumn(ResultSetSpy.java:2482)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.findColumn(HikariProxyResultSet.java)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:65)
	at org.hibernate.query.results.ResultsHelper.lambda$resolveSqlExpression$0(ResultsHelper.java:63)
	at org.hibernate.query.results.DomainResultCreationStateImpl.resolveSqlExpression(DomainResultCreationStateImpl.java:278)
	at org.hibernate.query.results.ResultsHelper.resolveSqlExpression(ResultsHelper.java:57)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:97)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:37)
	at org.hibernate.query.results.DomainResultCreationStateImpl.lambda$createFetchableConsumer$3(DomainResultCreationStateImpl.java:539)
	at org.hibernate.metamodel.mapping.internal.ImmutableAttributeMappingList.forEach(ImmutableAttributeMappingList.java:44)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitFetchables(AbstractEntityPersister.java:6134)
	at org.hibernate.query.results.DomainResultCreationStateImpl.visitFetches(DomainResultCreationStateImpl.java:454)
	at org.hibernate.sql.results.graph.AbstractFetchParent.afterInitialize(AbstractFetchParent.java:30)
	at org.hibernate.sql.results.graph.entity.AbstractEntityResultGraphNode.afterInitialize(AbstractEntityResultGraphNode.java:69)
	at org.hibernate.persister.entity.AbstractEntityPersister.createDomainResult(AbstractEntityPersister.java:1319)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:129)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:30)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:229)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 10:56:51 [33mWARN [0;39m http-nio-8080-exec-3] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 0, SQLState: null[0;39m
[2024-07-30 10:56:51 [31mERROR[0;39m http-nio-8080-exec-3] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mUnknown label 'created_at'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, comment, fc.feed_comment_id, fc.comment, pic, u.nm, feed_id, nm][0;39m
[2024-07-30 10:56:51 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|--------|--------|---|----|
|feed_comment_id |comment |feed_id |user_id |nm |pic |
|----------------|--------|--------|--------|---|----|
|----------------|--------|--------|--------|---|----|
[0;39m
[2024-07-30 10:56:51 [31mERROR[0;39m http-nio-8080-exec-3] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.orm.jpa.JpaSystemException: Unable to find column position by name: created_at [Unknown label 'created_at'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, comment, fc.feed_comment_id, fc.comment, pic, u.nm, feed_id, nm]] [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to find column position by name: created_at [Unknown label 'created_at'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, comment, fc.feed_comment_id, fc.comment, pic, u.nm, feed_id, nm]] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:70)
	at org.hibernate.query.results.ResultsHelper.lambda$resolveSqlExpression$0(ResultsHelper.java:63)
	at org.hibernate.query.results.DomainResultCreationStateImpl.resolveSqlExpression(DomainResultCreationStateImpl.java:278)
	at org.hibernate.query.results.ResultsHelper.resolveSqlExpression(ResultsHelper.java:57)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:97)
	at org.hibernate.query.results.implicit.ImplicitFetchBuilderBasic.buildFetch(ImplicitFetchBuilderBasic.java:37)
	at org.hibernate.query.results.DomainResultCreationStateImpl.lambda$createFetchableConsumer$3(DomainResultCreationStateImpl.java:539)
	at org.hibernate.metamodel.mapping.internal.ImmutableAttributeMappingList.forEach(ImmutableAttributeMappingList.java:44)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitFetchables(AbstractEntityPersister.java:6134)
	at org.hibernate.query.results.DomainResultCreationStateImpl.visitFetches(DomainResultCreationStateImpl.java:454)
	at org.hibernate.sql.results.graph.AbstractFetchParent.afterInitialize(AbstractFetchParent.java:30)
	at org.hibernate.sql.results.graph.entity.AbstractEntityResultGraphNode.afterInitialize(AbstractEntityResultGraphNode.java:69)
	at org.hibernate.persister.entity.AbstractEntityPersister.createDomainResult(AbstractEntityPersister.java:1319)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:129)
	at org.hibernate.query.results.dynamic.DynamicResultBuilderEntityCalculated.buildResult(DynamicResultBuilderEntityCalculated.java:30)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:229)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLException: Unknown label 'created_at'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, comment, fc.feed_comment_id, fc.comment, pic, u.nm, feed_id, nm]
	at org.mariadb.jdbc.client.result.Result.findColumn(Result.java:1740)
	at net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy.findColumn(ResultSetSpy.java:2482)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.findColumn(HikariProxyResultSet.java)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.resolveColumnPosition(AbstractResultSetAccess.java:65)
	... 204 common frames omitted
[2024-07-30 10:56:51 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.orm.jpa.JpaSystemException: Unable to find column position by name: created_at [Unknown label 'created_at'. Possible value [u.user_id, feed_comment_id, user_id, u.pic, f.feed_id, comment, fc.feed_comment_id, fc.comment, pic, u.nm, feed_id, nm]] [n/a]][0;39m
[2024-07-30 10:57:14 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:57:14 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:57:14 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:57:16 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 10:57:16 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14132 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:57:16 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:57:16 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 10:57:16 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:57:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1491 ms[0;39m
[2024-07-30 10:57:18 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 10:57:18 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@40533c9[0;39m
[2024-07-30 10:57:18 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 10:57:18 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:57:18 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 10:57:18 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:57:18 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:57:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:57:19 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 21 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 18 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 19 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 18 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 17 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 19 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 23 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 19 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 25 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 34 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 29 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 19 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 4 msec}[0;39m
[2024-07-30 10:57:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 10:57:19 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:57:20 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 10:57:20 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:57:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@118df3a3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7654c886, org.springframework.security.web.context.SecurityContextHolderFilter@25521955, org.springframework.security.web.header.HeaderWriterFilter@434c1438, org.springframework.web.filter.CorsFilter@ca67c38, org.springframework.security.web.authentication.logout.LogoutFilter@21e07ac7, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@58622c28, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@718a8a83, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@72516e9b, com.green.greengram.security.jwt.JwtAuthenticationFilter@a8bf6c5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@128adb95, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5896ab77, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46cf9d9a, org.springframework.security.web.session.SessionManagementFilter@2000b915, org.springframework.security.web.access.ExceptionTranslationFilter@26997adb, org.springframework.security.web.access.intercept.AuthorizationFilter@232d5254][0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.497 seconds (process running for 5.874)[0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 10:57:21 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 10:57:25 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:57:25 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 10:57:25 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, fc.comment, f.feed_id, u.user_id, u.nm, u.pic, fc.created_at, fc.updated_at from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 1 msec}[0;39m
[2024-07-30 10:57:25 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:57:25 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:57:25 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:57:26 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:57:26 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
|feed_comment_id |comment |feed_id |user_id |nm  |pic    |created_at            |updated_at            |
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
|4               |4번째     |1       |2       |관리자 |[null] |2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|5               |5번째     |1       |2       |관리자 |[null] |2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
[0;39m
[2024-07-30 10:57:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:57:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 10:57:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, fc.comment, f.feed_id, u.user_id, u.nm, u.pic, fc.created_at, fc.updated_at from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 2 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 0 msec}[0;39m
[2024-07-30 10:57:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------|--------|---|----|-----------|-----------|
|feed_comment_id |comment |feed_id |user_id |nm |pic |created_at |updated_at |
|----------------|--------|--------|--------|---|----|-----------|-----------|
|----------------|--------|--------|--------|---|----|-----------|-----------|
[0;39m
[2024-07-30 10:57:32 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 10:57:32 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 10:57:32 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, fc.comment, f.feed_id, u.user_id, u.nm, u.pic, fc.created_at, fc.updated_at from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 0 msec}[0;39m
[2024-07-30 10:57:32 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 10:57:32 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:57:32 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 10:57:32 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 10:57:32 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
|feed_comment_id |comment |feed_id |user_id |nm  |pic    |created_at            |updated_at            |
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
|4               |4번째     |1       |2       |관리자 |[null] |2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|5               |5번째     |1       |2       |관리자 |[null] |2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
[0;39m
[2024-07-30 10:58:07 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 10:58:07 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:58:07 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:58:07 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 10:58:07 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 10:58:07 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14132 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 10:58:07 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 17 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 463 ms[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@21e0cf96[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:08 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 4 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 32 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 12 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 25 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 6 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 15 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 10:58:09 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:58:09 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 10:58:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 10:58:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 10:58:09 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@43a12dec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6de11803, org.springframework.security.web.context.SecurityContextHolderFilter@3d4cb668, org.springframework.security.web.header.HeaderWriterFilter@79da08cf, org.springframework.web.filter.CorsFilter@4d65090a, org.springframework.security.web.authentication.logout.LogoutFilter@10770cdc, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7c29c069, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@6a31de36, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@12df00a8, com.green.greengram.security.jwt.JwtAuthenticationFilter@668704f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@213fa0e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d970988, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36a03d5, org.springframework.security.web.session.SessionManagementFilter@71827303, org.springframework.security.web.access.ExceptionTranslationFilter@2e360069, org.springframework.security.web.access.intercept.AuthorizationFilter@4f3e0a30][0;39m
[2024-07-30 10:58:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 10:58:10 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 10:58:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 10:58:10 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.126 seconds (process running for 54.521)[0;39m
[2024-07-30 10:58:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 10:58:11 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 10:58:11 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 10:58:11 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 11:00:43 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:00:43 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13208 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:00:43 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:00:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:00:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:00:44 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:00:44 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1460 ms[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6288780f[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:00:45 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:00:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 11:00:46 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 22 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 24 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 18 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 15 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 17 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 19 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 18 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 12 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 20 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:00:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 11:00:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:00:47 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:00:47 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:00:47 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:00:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:00:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:00:48 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5a45d536, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f705541, org.springframework.security.web.context.SecurityContextHolderFilter@3110f2e3, org.springframework.security.web.header.HeaderWriterFilter@503494a5, org.springframework.web.filter.CorsFilter@368cb879, org.springframework.security.web.authentication.logout.LogoutFilter@236cd85, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@60c5c8b2, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@38fa9f46, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3dca629e, com.green.greengram.security.jwt.JwtAuthenticationFilter@7d7f0d55, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76882e58, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13625f22, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4039b13, org.springframework.security.web.session.SessionManagementFilter@35758b23, org.springframework.security.web.access.ExceptionTranslationFilter@5ff6af71, org.springframework.security.web.access.intercept.AuthorizationFilter@3cfd092d][0;39m
[2024-07-30 11:00:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:00:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:00:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:00:48 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.593 seconds (process running for 5.968)[0;39m
[2024-07-30 11:00:49 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:00:49 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:00:49 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 11:00:52 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select *from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 1 msec}[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------|----------------|--------|-----------|--------|--------|-----------|--------|-----------|----------|---------|---------|--------------|-----------|-----------|--------|---|----|----|----|
|created_at |feed_comment_id |feed_id |updated_at |user_id |comment |created_at |feed_id |updated_at |writer_id |location |contents |provider_type |created_at |updated_at |user_id |nm |uid |upw |pic |
|-----------|----------------|--------|-----------|--------|--------|-----------|--------|-----------|----------|---------|---------|--------------|-----------|-----------|--------|---|----|----|----|
|-----------|----------------|--------|-----------|--------|--------|-----------|--------|-----------|----------|---------|---------|--------------|-----------|-----------|--------|---|----|----|----|
[0;39m
[2024-07-30 11:00:52 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.orm.jpa.JpaSystemException: Encountered a duplicated sql alias [created_at] during auto-discovery of a native-sql query
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy185.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.loader.NonUniqueDiscoveredSqlAliasException: Encountered a duplicated sql alias [created_at] during auto-discovery of a native-sql query
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:288)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
[2024-07-30 11:00:52 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.orm.jpa.JpaSystemException: Encountered a duplicated sql alias [created_at] during auto-discovery of a native-sql query][0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13208 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:00:52 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 18 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 476 ms[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@723fd423[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:00:53 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 17 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 20 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 18 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 12 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 12 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 14 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 12 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 10 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 6 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 27 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 11:00:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 4 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 4 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 11:00:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:00:54 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@59bdf9d9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e72997f, org.springframework.security.web.context.SecurityContextHolderFilter@76014a00, org.springframework.security.web.header.HeaderWriterFilter@11e85573, org.springframework.web.filter.CorsFilter@23dcb11, org.springframework.security.web.authentication.logout.LogoutFilter@3a1fb28c, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@5b67f75e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@746e968, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3c6c562c, com.green.greengram.security.jwt.JwtAuthenticationFilter@1251c4c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25a29185, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@edc9f7f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7fec3a8f, org.springframework.security.web.session.SessionManagementFilter@4996c11f, org.springframework.security.web.access.ExceptionTranslationFilter@4177fc7, org.springframework.security.web.access.intercept.AuthorizationFilter@44dda67][0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.107 seconds (process running for 11.977)[0;39m
[2024-07-30 11:00:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 11:00:57 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:00:57 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:00:57 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 11:00:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 11:00:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 11:00:57 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select * from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 0 msec}[0;39m
[2024-07-30 11:00:57 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------|----------------|--------|-----------|--------|--------|-----------|--------|-----------|----------|---------|---------|--------------|-----------|-----------|--------|---|----|----|----|
|created_at |feed_comment_id |feed_id |updated_at |user_id |comment |created_at |feed_id |updated_at |writer_id |location |contents |provider_type |created_at |updated_at |user_id |nm |uid |upw |pic |
|-----------|----------------|--------|-----------|--------|--------|-----------|--------|-----------|----------|---------|---------|--------------|-----------|-----------|--------|---|----|----|----|
|-----------|----------------|--------|-----------|--------|--------|-----------|--------|-----------|----------|---------|---------|--------------|-----------|-----------|--------|---|----|----|----|
[0;39m
[2024-07-30 11:00:57 [31mERROR[0;39m http-nio-8080-exec-1] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.orm.jpa.JpaSystemException: Encountered a duplicated sql alias [created_at] during auto-discovery of a native-sql query
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy224.findAllByFeedCommentLimit3AndInfinity(Unknown Source)
	at com.green.greengram.feedcomment.FeedCommentServiceImpl.getFeedComment(FeedCommentServiceImpl.java:80)
	at com.green.greengram.feedcomment.FeedCommentControllerImpl.getFeedCommentList(FeedCommentControllerImpl.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.loader.NonUniqueDiscoveredSqlAliasException: Encountered a duplicated sql alias [created_at] during auto-discovery of a native-sql query
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:288)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
[2024-07-30 11:00:57 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.orm.jpa.JpaSystemException: Encountered a duplicated sql alias [created_at] during auto-discovery of a native-sql query][0;39m
[2024-07-30 11:01:04 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:01:04 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 11:01:04 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 11:01:06 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:01:06 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13328 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:01:06 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:01:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:01:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:01:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1505 ms[0;39m
[2024-07-30 11:01:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:01:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1b91fbb8[0;39m
[2024-07-30 11:01:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:01:08 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:01:08 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:01:08 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:01:08 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:01:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 11:01:09 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 17 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 21 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 20 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 20 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 19 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 17 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 16 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 30 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 30 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 29 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 11:01:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:01:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 11:01:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 7 msec}[0;39m
[2024-07-30 11:01:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:01:10 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:01:10 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:01:10 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:01:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3d5c5945, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7961ee2b, org.springframework.security.web.context.SecurityContextHolderFilter@2ee011ef, org.springframework.security.web.header.HeaderWriterFilter@21b6f8d4, org.springframework.web.filter.CorsFilter@467bdf7b, org.springframework.security.web.authentication.logout.LogoutFilter@11882c89, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7e7c2d42, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1fe32c10, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3ff30be6, com.green.greengram.security.jwt.JwtAuthenticationFilter@6ba985fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76c2d512, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71b5e423, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30c08db2, org.springframework.security.web.session.SessionManagementFilter@6519308f, org.springframework.security.web.access.ExceptionTranslationFilter@730249f, org.springframework.security.web.access.intercept.AuthorizationFilter@335599f1][0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.608 seconds (process running for 5.993)[0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:01:11 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:01:15 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 11:01:15 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 11:01:15 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, fc.comment, f.feed_id, u.user_id, u.nm, u.pic, fc.created_at, fc.updated_at from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 0 msec}[0;39m
[2024-07-30 11:01:15 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=1
 {executed in 0 msec}[0;39m
[2024-07-30 11:01:15 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|feed_id |contents |created_at            |location |updated_at            |writer_id |user_id |created_at            |nm    |pic                                      |provider_type |uid  |updated_at            |upw                                                          |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
|1       |asdf     |2024-07-25 11:16:37.0 |asdf     |2024-07-25 11:16:37.0 |1         |1       |2024-05-03 18:00:47.0 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |4             |mic1 |2024-07-15 10:14:51.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|---------|----------------------|---------|----------------------|----------|--------|----------------------|------|-----------------------------------------|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 11:01:15 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from user u1_0 where u1_0.user_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 11:01:15 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|user_id |created_at            |nm  |pic |provider_type |uid  |updated_at            |upw                                                          |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
|2       |2024-05-03 18:00:55.0 |관리자 |null|4             |mic2 |2024-07-15 10:14:41.0 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |
|--------|----------------------|----|----|--------------|-----|----------------------|-------------------------------------------------------------|
[0;39m
[2024-07-30 11:01:15 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
|feed_comment_id |comment |feed_id |user_id |nm  |pic    |created_at            |updated_at            |
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
|4               |4번째     |1       |2       |관리자 |[null] |2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|5               |5번째     |1       |2       |관리자 |[null] |2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|----------------|--------|--------|--------|----|-------|----------------------|----------------------|
[0;39m
[2024-07-30 11:09:03 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:09:03 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:09:03 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:12:06 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:12:06 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 5824 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:12:06 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:12:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:12:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:12:07 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:12:07 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 41 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1470 ms[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5ece4c99[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:12:08 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:12:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:12:09 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 13 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 20 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 23 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 17 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 20 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 17 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 17 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 10 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 30 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:12:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 22 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 41 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 40 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 4 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 4 msec}[0;39m
[2024-07-30 11:12:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 5 msec}[0;39m
[2024-07-30 11:12:10 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:12:10 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:12:11 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:12:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:12:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:12:11 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54df033d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e1b03a4, org.springframework.security.web.context.SecurityContextHolderFilter@130bd1c7, org.springframework.security.web.header.HeaderWriterFilter@8f3c9b5, org.springframework.web.filter.CorsFilter@dc3981c, org.springframework.security.web.authentication.logout.LogoutFilter@7b53c4d9, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@3d1ae388, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@656c22fb, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1910082b, com.green.greengram.security.jwt.JwtAuthenticationFilter@458e8c10, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d60546e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13376e91, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62c9cb77, org.springframework.security.web.session.SessionManagementFilter@18615a81, org.springframework.security.web.access.ExceptionTranslationFilter@89a1176, org.springframework.security.web.access.intercept.AuthorizationFilter@e4b20cb][0;39m
[2024-07-30 11:12:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:12:11 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:12:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:12:11 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.584 seconds (process running for 6.048)[0;39m
[2024-07-30 11:12:12 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:12:12 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:12:12 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 11:12:16 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 11:12:16 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 11:12:16 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id, fc.comment, f.feed_id, u.user_id, u.nm, u.pic, fc.created_at, fc.updated_at from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 1 msec}[0;39m
[2024-07-30 11:12:16 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------|--------|----|----|----------------------|----------------------|
|feed_comment_id |comment |feed_id |user_id |nm  |pic |created_at            |updated_at            |
|----------------|--------|--------|--------|----|----|----------------------|----------------------|
|4               |4번째     |1       |2       |관리자 |null|2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|5               |5번째     |1       |2       |관리자 |null|2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|----------------|--------|--------|--------|----|----|----------------------|----------------------|
[0;39m
[2024-07-30 11:14:00 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:14:00 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:14:00 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:14:02 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:14:02 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14564 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:14:02 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:14:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:14:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:14:03 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:14:03 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.[0;39m
[2024-07-30 11:14:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:14:03 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:14:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:14:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1520 ms[0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7931bad1[0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:14:04 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:14:04 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:14:05 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 17 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 17 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 20 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 19 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 19 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 21 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 24 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 19 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 10 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 10 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 29 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 30 msec}[0;39m
[2024-07-30 11:14:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 30 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:14:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 11:14:06 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:14:06 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:14:06 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@26de3da6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e5a3ff5, org.springframework.security.web.context.SecurityContextHolderFilter@36a68e8d, org.springframework.security.web.header.HeaderWriterFilter@283af02, org.springframework.web.filter.CorsFilter@40a808a9, org.springframework.security.web.authentication.logout.LogoutFilter@10fdb6d4, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@712f02fa, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2a770f79, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@57e381b9, com.green.greengram.security.jwt.JwtAuthenticationFilter@d21931, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d4787be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39ba507f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@656c22fb, org.springframework.security.web.session.SessionManagementFilter@4d6393a9, org.springframework.security.web.access.ExceptionTranslationFilter@1c049583, org.springframework.security.web.access.intercept.AuthorizationFilter@60526f99][0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.606 seconds (process running for 6.021)[0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:14:07 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:14:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/comment[0;39m
[2024-07-30 11:14:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDQ2MDQsImV4cCI6MTcyMjMwNjQwNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.1aHNFRUkAO6Yx9cx5rfWV-S48gT5z7V_RculdOXqhkJky0tmVcCO-BghqkqdWKOOVKfvkVjosc0Vs7bY7VCFRg[0;39m
[2024-07-30 11:14:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select fc.feed_comment_id as feedCommentId , fc.comment as comment , u.user_id as writerId , u.nm as writerNm , u.pic as writerPic , fc.created_at as createdAt , fc.updated_at as updatedAt from feed_comment AS fc INNER JOIN feed AS f on fc.feed_id = f.feed_id INNER JOIN user AS u on fc.user_id = u.user_id where fc.feed_id = 1 order by fc.feed_comment_id ASC limit 3, 9999
 {executed in 2 msec}[0;39m
[2024-07-30 11:14:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------|----|----|----------------------|----------------------|
|feed_comment_id |comment |user_id |nm  |pic |created_at            |updated_at            |
|----------------|--------|--------|----|----|----------------------|----------------------|
|4               |4번째     |2       |관리자 |null|2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|5               |5번째     |2       |관리자 |null|2024-07-30 10:10:21.0 |2024-07-30 10:10:20.0 |
|----------------|--------|--------|----|----|----------------------|----------------------|
[0;39m
[2024-07-30 11:30:41 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:30:41 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:30:41 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:43:18 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:43:18 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14456 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:43:18 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:43:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:43:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:43:19 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:43:19 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 45 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1530 ms[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@72bb3ed7[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:43:20 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:43:21 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:43:21 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 17 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 17 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 19 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 20 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 22 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 18 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 18 msec}[0;39m
[2024-07-30 11:43:21 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 20 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 21 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 13 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 13 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 21 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 4 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:43:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 11:43:22 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:43:22 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:43:23 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:43:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:43:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:43:23 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e04be02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6526aeb, org.springframework.security.web.context.SecurityContextHolderFilter@2b074c84, org.springframework.security.web.header.HeaderWriterFilter@5af9da35, org.springframework.web.filter.CorsFilter@4db6fbe, org.springframework.security.web.authentication.logout.LogoutFilter@749f7d62, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@5cc3de0e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@69a074cc, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4a2c1ee, com.green.greengram.security.jwt.JwtAuthenticationFilter@63d20e7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e420c40, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c11616b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f731bc0, org.springframework.security.web.session.SessionManagementFilter@3ec247c2, org.springframework.security.web.access.ExceptionTranslationFilter@6b153127, org.springframework.security.web.access.intercept.AuthorizationFilter@76e068ca][0;39m
[2024-07-30 11:43:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:43:24 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:43:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:43:24 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.562 seconds (process running for 5.945)[0;39m
[2024-07-30 11:43:24 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:43:24 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:43:24 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/index.html[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/index.css[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui.css[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui-bundle.js[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui-standalone-preset.js[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-initializer.js[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /v3/api-docs/swagger-config[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /v3/api-docs[0;39m
[2024-07-30 11:43:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 233 ms[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIyMTUzMDYsImV4cCI6MTcyMjIxNzEwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjF9In0.GiZKhH7Se7c2WZYj4ErQTR9SrI2E_kJkITfEY23Ut4w6jNAyxtUCyrptq2oXDnVZ9QASZPDgwwBwk8N4JGf16g[0;39m
[2024-07-30 11:43:33 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [31mERROR[0;39m http-nio-8080-exec-5] [com.green.greengram.exception.GlobalExceptionHandler] [36mCustomException - handlerException: {}[0;39m
com.green.greengram.exception.CustomException: null
	at com.green.greengram.security.jwt.JwtAuthenticationEntryPoint.commence(JwtAuthenticationEntryPoint.java:30)
	at org.springframework.security.web.access.ExceptionTranslationFilter.sendStartAuthentication(ExceptionTranslationFilter.java:219)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleAccessDeniedException(ExceptionTranslationFilter.java:197)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleSpringSecurityException(ExceptionTranslationFilter.java:178)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:147)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 11:43:33 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [com.green.greengram.exception.CustomException][0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/access-token[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIyMTUzMDYsImV4cCI6MTcyMjIxNzEwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjF9In0.GiZKhH7Se7c2WZYj4ErQTR9SrI2E_kJkITfEY23Ut4w6jNAyxtUCyrptq2oXDnVZ9QASZPDgwwBwk8N4JGf16g[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:43:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 11:43:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 3 msec}[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:43:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 11:43:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:43:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:33 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:43:47 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:43:47 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:43:47 [31mERROR[0;39m http-nio-8080-exec-6] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
java.util.IllegalFormatConversionException: d != com.green.greengram.entity.Feed
	at java.base/java.util.Formatter$FormatSpecifier.failConversion(Formatter.java:4442)
	at java.base/java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2963)
	at java.base/java.util.Formatter$FormatSpecifier.print(Formatter.java:2918)
	at java.base/java.util.Formatter.format(Formatter.java:2689)
	at java.base/java.util.Formatter.format(Formatter.java:2625)
	at java.base/java.lang.String.format(String.java:4145)
	at com.green.greengram.feed.FeedServiceImpl.postFeed(FeedServiceImpl.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedServiceImpl$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedControllerImpl.postFeed(FeedControllerImpl.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 11:43:47 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [java.util.IllegalFormatConversionException: d != com.green.greengram.entity.Feed][0;39m
[2024-07-30 11:44:10 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:44:10 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:44:10 [31mERROR[0;39m http-nio-8080-exec-3] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
java.util.IllegalFormatConversionException: d != com.green.greengram.entity.Feed
	at java.base/java.util.Formatter$FormatSpecifier.failConversion(Formatter.java:4442)
	at java.base/java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2963)
	at java.base/java.util.Formatter$FormatSpecifier.print(Formatter.java:2918)
	at java.base/java.util.Formatter.format(Formatter.java:2689)
	at java.base/java.util.Formatter.format(Formatter.java:2625)
	at java.base/java.lang.String.format(String.java:4145)
	at com.green.greengram.feed.FeedServiceImpl.postFeed(FeedServiceImpl.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedServiceImpl$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedControllerImpl.postFeed(FeedControllerImpl.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 11:44:10 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [java.util.IllegalFormatConversionException: d != com.green.greengram.entity.Feed][0;39m
[2024-07-30 11:45:13 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:45:13 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:45:13 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:45:15 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:45:15 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14080 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:45:15 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:45:15 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:45:15 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:45:16 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:45:16 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 43 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1461 ms[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@49321db5[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:45:17 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 11:45:18 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 25 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 19 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 20 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 21 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 19 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 10 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 11:45:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 14 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 14 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 14 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 13 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 28 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:45:19 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 11:45:19 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:45:19 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:45:20 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:45:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:45:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:45:20 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@530d0773, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@242a91ac, org.springframework.security.web.context.SecurityContextHolderFilter@5064e8d7, org.springframework.security.web.header.HeaderWriterFilter@10fdb6d4, org.springframework.web.filter.CorsFilter@4266be8f, org.springframework.security.web.authentication.logout.LogoutFilter@57aa387f, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@1a9c202f, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3cd91a82, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3dd1767d, com.green.greengram.security.jwt.JwtAuthenticationFilter@712f02fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@293aa288, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53a5ebd0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@587cac0a, org.springframework.security.web.session.SessionManagementFilter@532fd527, org.springframework.security.web.access.ExceptionTranslationFilter@392bcace, org.springframework.security.web.access.intercept.AuthorizationFilter@57e381b9][0;39m
[2024-07-30 11:45:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:45:21 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:45:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:45:21 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.55 seconds (process running for 5.961)[0;39m
[2024-07-30 11:45:21 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:45:21 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:45:21 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:45:23 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:23 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/f16cef75-f020-4fe3-ba94-be6da8a61bbb.png[0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/c732ec73-cadf-4b1f-9651-3b3e01c965d2.png[0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:24 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/f16cef75-f020-4fe3-ba94-be6da8a61bbb.png.][0;39m
[2024-07-30 11:45:24 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/c732ec73-cadf-4b1f-9651-3b3e01c965d2.png.][0;39m
[2024-07-30 11:45:24 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:24 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:26 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 11:45:26 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:45:26 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 11:45:26 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:45:26 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:26 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:26 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|---|----|-----------|---------|---------|------|
|feed_id |user_id |nm |pic |created_at |contents |location |isfav |
|--------|--------|---|----|-----------|---------|---------|------|
|--------|--------|---|----|-----------|---------|---------|------|
[0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/37b91b40-b476-4c60-b696-a2f13e0a8d1c.png[0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:36 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/37b91b40-b476-4c60-b696-a2f13e0a8d1c.png.][0;39m
[2024-07-30 11:45:36 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:36 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:45 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:45:45 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 11:45:45 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 11:45:45 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:45:45 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:45:46 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:46 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:46 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-07-30 11:45:46 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|---|----|-----------|---------|---------|------|
|feed_id |user_id |nm |pic |created_at |contents |location |isfav |
|--------|--------|---|----|-----------|---------|---------|------|
|--------|--------|---|----|-----------|---------|---------|------|
[0;39m
[2024-07-30 11:45:47 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:47 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|---|----|-----------|---------|---------|------|
|feed_id |user_id |nm |pic |created_at |contents |location |isfav |
|--------|--------|---|----|-----------|---------|---------|------|
|--------|--------|---|----|-----------|---------|---------|------|
[0;39m
[2024-07-30 11:45:47 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:45:47 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:45:47 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 60, 20
 {executed in 0 msec}[0;39m
[2024-07-30 11:45:47 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|---|----|-----------|---------|---------|------|
|feed_id |user_id |nm |pic |created_at |contents |location |isfav |
|--------|--------|---|----|-----------|---------|---------|------|
|--------|--------|---|----|-----------|---------|---------|------|
[0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png[0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:11 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:46:11 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png.][0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:46:11 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:46:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 11:46:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:46:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:14 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 11:46:14 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:15 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:46:15 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:46:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 11:46:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:16 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:46:16 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:16 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:46:16 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 11:46:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:28 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:46:28 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:46:28 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.][0;39m
[2024-07-30 11:46:40 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:46:40 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:46:40 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.][0;39m
[2024-07-30 11:46:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:46:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:46:40 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.][0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/0561c2d3-e204-4400-a554-91674468084a.png[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:46:54 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:46:54 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png.][0;39m
[2024-07-30 11:46:54 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/0561c2d3-e204-4400-a554-91674468084a.png.][0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:46:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:47:40 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:47:40 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:47:40 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:47:42 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:47:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 6408 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:47:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:47:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:47:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:47:43 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:47:43 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1477 ms[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@13ce515f[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:47:44 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:47:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:47:45 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 19 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 18 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 17 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 16 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 19 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 17 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 17 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 19 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 20 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 18 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:47:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 11:47:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:47:46 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:47:46 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:47:46 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:47:47 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@12ed37c2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e04be02, org.springframework.security.web.context.SecurityContextHolderFilter@5350650e, org.springframework.security.web.header.HeaderWriterFilter@70f6a896, org.springframework.web.filter.CorsFilter@6526aeb, org.springframework.security.web.authentication.logout.LogoutFilter@6790e871, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@2198c7b1, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@459da7d2, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@6ecedeef, com.green.greengram.security.jwt.JwtAuthenticationFilter@7a7da83e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f30184e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23bcef3a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4db6fbe, org.springframework.security.web.session.SessionManagementFilter@63f3c6a6, org.springframework.security.web.access.ExceptionTranslationFilter@35d3e984, org.springframework.security.web.access.intercept.AuthorizationFilter@62b3f237][0;39m
[2024-07-30 11:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:47:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:47:47 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.506 seconds (process running for 5.871)[0;39m
[2024-07-30 11:47:48 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:47:48 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:47:48 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 6408 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 20 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 499 ms[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@134a964b[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:47:51 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:47:51 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 11:47:52 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 17 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 13 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 12 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 13 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 7 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 12 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 13 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 14 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 14 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 15 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 32 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 37 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 3 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 4 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:47:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 11:47:52 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:47:52 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b2bfbcf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42dda525, org.springframework.security.web.context.SecurityContextHolderFilter@a716eb8, org.springframework.security.web.header.HeaderWriterFilter@ac60be8, org.springframework.web.filter.CorsFilter@4687460d, org.springframework.security.web.authentication.logout.LogoutFilter@2f66811c, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@4420ca79, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4d657a9d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4f25f8c4, com.green.greengram.security.jwt.JwtAuthenticationFilter@63f2eab1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4afe7230, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@337a5dba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bdb6503, org.springframework.security.web.session.SessionManagementFilter@55b7b6aa, org.springframework.security.web.access.ExceptionTranslationFilter@4b55d6df, org.springframework.security.web.access.intercept.AuthorizationFilter@763e6346][0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.161 seconds (process running for 11.566)[0;39m
[2024-07-30 11:47:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 0 ms[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36muser: com.green.greengram.entity.User@7718f7ec[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: com.green.greengram.entity.Feed@401f3cbb[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/f1814e9a-05c6-4699-9ac8-1157b3fefc73.png[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/0561c2d3-e204-4400-a554-91674468084a.png[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:47:57 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png.][0;39m
[2024-07-30 11:47:57 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:47:57 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/f1814e9a-05c6-4699-9ac8-1157b3fefc73.png.][0;39m
[2024-07-30 11:47:57 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/0561c2d3-e204-4400-a554-91674468084a.png.][0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:47:57 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:48:20 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:48:20 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 11:48:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 11:48:23 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:48:23 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13512 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:48:23 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:48:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:48:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:48:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1521 ms[0;39m
[2024-07-30 11:48:25 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:48:25 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79c6745d[0;39m
[2024-07-30 11:48:25 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:48:25 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:48:25 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:48:25 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:48:25 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:48:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:48:26 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 18 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 19 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 21 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 19 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 21 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 20 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 19 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 20 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 20 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 10 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 9 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 10 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 20 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 30 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 28 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 4 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:48:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 11:48:26 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:48:27 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:48:27 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:48:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7abf5a1c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12cd015d, org.springframework.security.web.context.SecurityContextHolderFilter@698c223e, org.springframework.security.web.header.HeaderWriterFilter@53cbba72, org.springframework.web.filter.CorsFilter@4915daec, org.springframework.security.web.authentication.logout.LogoutFilter@7f80d16b, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@67632f66, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@48faa65d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@ac976c9, com.green.greengram.security.jwt.JwtAuthenticationFilter@c7f7b8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a73b249, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4acebfe5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b2cae9e, org.springframework.security.web.session.SessionManagementFilter@731dca12, org.springframework.security.web.access.ExceptionTranslationFilter@7951f3aa, org.springframework.security.web.access.intercept.AuthorizationFilter@3efd337c][0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.551 seconds (process running for 5.93)[0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:48:28 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=0, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/cc71112e-2ae8-404f-ad70-af3a6d0707d6.png[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/0561c2d3-e204-4400-a554-91674468084a.png[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/f1814e9a-05c6-4699-9ac8-1157b3fefc73.png[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:48:40 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/f1814e9a-05c6-4699-9ac8-1157b3fefc73.png.][0;39m
[2024-07-30 11:48:40 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/0561c2d3-e204-4400-a554-91674468084a.png.][0;39m
[2024-07-30 11:48:40 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:48:40 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/e1ba5ee7-8087-4f8a-8a11-d520a9108fb0.png.][0;39m
[2024-07-30 11:48:40 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/cc71112e-2ae8-404f-ad70-af3a6d0707d6.png.][0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:48:40 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:29 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:50:29 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:50:29 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:50:31 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:50:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14944 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:50:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:50:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:50:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:50:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1485 ms[0;39m
[2024-07-30 11:50:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:50:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4071538[0;39m
[2024-07-30 11:50:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:50:33 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:50:33 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:50:33 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:50:33 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:50:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:34 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 150 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 150 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 22 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 16 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 14 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 12 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 6 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 19 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 21 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:50:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:50:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:50:35 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:50:35 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:50:35 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:50:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:50:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:50:36 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f59a2af, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f59b95e, org.springframework.security.web.context.SecurityContextHolderFilter@38e0dfa3, org.springframework.security.web.header.HeaderWriterFilter@690b9453, org.springframework.web.filter.CorsFilter@5ce44e03, org.springframework.security.web.authentication.logout.LogoutFilter@166d75ef, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@59968427, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1ec3b91a, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@2059ad2b, com.green.greengram.security.jwt.JwtAuthenticationFilter@e974b6c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2aeaad96, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@605a99aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@511d97b8, org.springframework.security.web.session.SessionManagementFilter@39b487ec, org.springframework.security.web.access.ExceptionTranslationFilter@6a180f70, org.springframework.security.web.access.intercept.AuthorizationFilter@130bd1c7][0;39m
[2024-07-30 11:50:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:50:36 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:50:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:50:36 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.875 seconds (process running for 6.33)[0;39m
[2024-07-30 11:50:37 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:50:37 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:50:37 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:50:41 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 11:50:41 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 16 msec}[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:50:41 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 11:50:41 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:50:41 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:41 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:50:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:45 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 11:50:45 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:50:45 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:50:45 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:50:45 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:50:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14944 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:50:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 483 ms[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5b1b12a0[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 11:50:46 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 10 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 12 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 12 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 11 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 12 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 14 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 12 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 5 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 21 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 29 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:50:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 29 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 29 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 42 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 30 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 13 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 37 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 8 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 11:50:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:50:47 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@561022f8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ad13a8c, org.springframework.security.web.context.SecurityContextHolderFilter@529b699d, org.springframework.security.web.header.HeaderWriterFilter@a1858ac, org.springframework.web.filter.CorsFilter@312e16a4, org.springframework.security.web.authentication.logout.LogoutFilter@294ee9e0, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7adef61d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@11cd9fe, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@795ccc57, com.green.greengram.security.jwt.JwtAuthenticationFilter@69b47c1c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cbcfaa4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ffdc62e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6fa24d01, org.springframework.security.web.session.SessionManagementFilter@562148a4, org.springframework.security.web.access.ExceptionTranslationFilter@dfded90, org.springframework.security.web.access.intercept.AuthorizationFilter@72d63a89][0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.137 seconds (process running for 17.441)[0;39m
[2024-07-30 11:50:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 0 ms[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=0, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 11:50:52 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=0
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|---------|-----------|---------|-----------|----------|--------|-----------|---|----|--------------|----|-----------|----|
|feed_id |contents |created_at |location |updated_at |writer_id |user_id |created_at |nm |pic |provider_type |uid |updated_at |upw |
|--------|---------|-----------|---------|-----------|----------|--------|-----------|---|----|--------------|----|-----------|----|
|--------|---------|-----------|---------|-----------|----------|--------|-----------|---|----|--------------|----|-----------|----|
[0;39m
[2024-07-30 11:50:52 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 11:50:52.281','asdf','07/30/2024 11:50:52.281',1)
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:52 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 11:50:52.281','asdf','07/30/2024 11:50:52.281',1)
 {executed in 0 msec}[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/a1226fe8-e813-4b38-91ce-067ee3e91049.png[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:50:52 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:50:52 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/a1226fe8-e813-4b38-91ce-067ee3e91049.png.][0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:50:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:51:54 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:51:54 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 11:51:54 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 11:51:56 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:51:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 9764 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:51:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:51:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:51:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:51:57 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:51:57 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 41 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1486 ms[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@13ce515f[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:51:58 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:51:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 11:51:59 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 18 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 18 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 19 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 19 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 18 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 19 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 18 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 12 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 10 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 10 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 24 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 23 msec}[0;39m
[2024-07-30 11:51:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 19 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 29 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 11:52:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:52:00 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:52:00 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:52:01 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:52:01 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:52:01 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:52:01 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5986fa0d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f511339, org.springframework.security.web.context.SecurityContextHolderFilter@23bcef3a, org.springframework.security.web.header.HeaderWriterFilter@3ec247c2, org.springframework.web.filter.CorsFilter@78664a4b, org.springframework.security.web.authentication.logout.LogoutFilter@32c85b1d, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@2198c7b1, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7abf1681, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@344c5e82, com.green.greengram.security.jwt.JwtAuthenticationFilter@7a7da83e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61f9bbe0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29035819, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b5361be, org.springframework.security.web.session.SessionManagementFilter@76eae889, org.springframework.security.web.access.ExceptionTranslationFilter@6c10a062, org.springframework.security.web.access.intercept.AuthorizationFilter@7e6dd56f][0;39m
[2024-07-30 11:52:01 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:52:01 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:52:01 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:52:01 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.524 seconds (process running for 5.913)[0;39m
[2024-07-30 11:52:02 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:52:02 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:52:02 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 11:52:09 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select f1_0.feed_id,f1_0.contents,f1_0.created_at,f1_0.location,f1_0.updated_at,f1_0.writer_id,u1_0.user_id,u1_0.created_at,u1_0.nm,u1_0.pic,u1_0.provider_type,u1_0.uid,u1_0.updated_at,u1_0.upw from feed f1_0 join user u1_0 on u1_0.user_id=f1_0.writer_id where f1_0.feed_id=0
 {executed in 0 msec}[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|-----------|---------|-----------|----------|--------|-----------|---|----|--------------|----|-----------|----|
|feed_id |contents |created_at |location |updated_at |writer_id |user_id |created_at |nm |pic |provider_type |uid |updated_at |upw |
|--------|---------|-----------|---------|-----------|----------|--------|-----------|---|----|--------------|----|-----------|----|
|--------|---------|-----------|---------|-----------|----------|--------|-----------|---|----|--------------|----|-----------|----|
[0;39m
[2024-07-30 11:52:09 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('s','07/30/2024 11:52:09.191','s','07/30/2024 11:52:09.191',1)
 {executed in 1 msec}[0;39m
[2024-07-30 11:52:09 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('s','07/30/2024 11:52:09.191','s','07/30/2024 11:52:09.191',1)
 {executed in 0 msec}[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=0, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=s, location=s)[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/a1226fe8-e813-4b38-91ce-067ee3e91049.png[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/35b23c92-1ccd-45ec-a97b-dfb9a24b4a9f.png[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:09 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/a1226fe8-e813-4b38-91ce-067ee3e91049.png.][0;39m
[2024-07-30 11:52:09 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:52:09 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/35b23c92-1ccd-45ec-a97b-dfb9a24b4a9f.png.][0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:52:09 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:42 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:52:42 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:52:42 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:52:45 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:52:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 8548 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:52:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:52:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:52:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1472 ms[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7451851[0;39m
[2024-07-30 11:52:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:52:47 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:52:47 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:52:47 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:52:47 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:52:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 11:52:47 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 20 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 20 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 18 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 19 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 18 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 16 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 16 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 18 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 17 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 10 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 22 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 21 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 28 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 27 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:52:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 11:52:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:52:49 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:52:49 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:52:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:52:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:52:49 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ce4a637, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e864469, org.springframework.security.web.context.SecurityContextHolderFilter@32c85b1d, org.springframework.security.web.header.HeaderWriterFilter@3c017176, org.springframework.web.filter.CorsFilter@598907b1, org.springframework.security.web.authentication.logout.LogoutFilter@b492646, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@5267114b, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@11111871, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@25f62c50, com.green.greengram.security.jwt.JwtAuthenticationFilter@277584b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a1e06e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27ed347f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49cedcf5, org.springframework.security.web.session.SessionManagementFilter@2bf37da7, org.springframework.security.web.access.ExceptionTranslationFilter@2bb24d96, org.springframework.security.web.access.intercept.AuthorizationFilter@459da7d2][0;39m
[2024-07-30 11:52:50 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:52:50 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:52:50 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:52:50 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.47 seconds (process running for 5.856)[0;39m
[2024-07-30 11:52:50 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:52:50 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:52:50 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 9 ms[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:52:53 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 11:52:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:52:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 11:52:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:52:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:53 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:52:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 11:52:57 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 11:52:57.685','asdf','07/30/2024 11:52:57.685',1)
 {executed in 1 msec}[0;39m
[2024-07-30 11:52:57 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 11:52:57.685','asdf','07/30/2024 11:52:57.685',1)
 {executed in 0 msec}[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/d2ae5d1e-a0e8-4ee3-b303-d59aed1eb9fa.png[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:52:57 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:52:57 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/d2ae5d1e-a0e8-4ee3-b303-d59aed1eb9fa.png.][0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:52:57 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:02 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:54:02 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:54:02 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:54:04 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 11:54:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 3164 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:54:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:54:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 11:54:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 11:54:05 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:54:05 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 44 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:54:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:54:05 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:54:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:54:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1525 ms[0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79c6745d[0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:54:06 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:54:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:54:07 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 18 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 20 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 20 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 20 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 18 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 18 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 20 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 19 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 41 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 28 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 39 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 35 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 11:54:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 11:54:08 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 11:54:08 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:54:08 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 11:54:08 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@38cdfa6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a3db62a, org.springframework.security.web.context.SecurityContextHolderFilter@7d18bd0f, org.springframework.security.web.header.HeaderWriterFilter@4ca35b4d, org.springframework.web.filter.CorsFilter@2e837802, org.springframework.security.web.authentication.logout.LogoutFilter@22ef52a5, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@67632f66, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7abf5a1c, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@16db23f8, com.green.greengram.security.jwt.JwtAuthenticationFilter@c7f7b8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40bb4627, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c87c665, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@303e14ce, org.springframework.security.web.session.SessionManagementFilter@22e6e9f9, org.springframework.security.web.access.ExceptionTranslationFilter@7639e979, org.springframework.security.web.access.intercept.AuthorizationFilter@749f7d62][0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.565 seconds (process running for 5.963)[0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 11:54:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 11:54:15 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:54:15 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:54:16 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.][0;39m
[2024-07-30 11:54:23 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:54:23 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:54:23 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.][0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:54:26 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 11:54:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:54:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 11:54:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 11:54:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:26 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:54:26 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 11:54:33 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 11:54:33.473','aasdf','07/30/2024 11:54:33.473',1)
 {executed in 0 msec}[0;39m
[2024-07-30 11:54:33 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 11:54:33.473','aasdf','07/30/2024 11:54:33.473',1)
 {executed in 0 msec}[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=aasdf)[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FAILED toString()][0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/4216effe-ef91-4c7b-9c0d-f55fe183df37.png[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:54:33 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 11:54:33 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/4216effe-ef91-4c7b-9c0d-f55fe183df37.png.][0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 11:54:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 11:58:23 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)[0;39m
[2024-07-30 11:58:23 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:58:23 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:58:23 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 11:58:23 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 11:58:23 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 3164 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 11:58:23 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 499 ms[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@d61ca9b[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 7 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 7 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 22 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 15 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 22 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 35 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 11 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 31 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 31 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 38 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 11:58:25 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:58:25 [33mWARN [0;39m restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] [36mException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'[0;39m
[2024-07-30 11:58:25 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 11:58:25 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 11:58:25 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 11:58:25 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStopping service [Tomcat][0;39m
[2024-07-30 11:58:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [36m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m
[2024-07-30 11:58:25 [31mERROR[0;39m restartedMain] [org.springframework.boot.SpringApplication] [36mApplication run failed[0;39m
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.green.greengram.GreengramApplication.main(GreengramApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:179)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:147)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:94)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 61 common frames omitted
[2024-07-30 12:01:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 3164 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:01:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 467 ms[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Starting...[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1fa5ea55[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Start completed.[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
21. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:01:32 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 10 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 16 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed
 {executed in 0 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_comment
 {executed in 18 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists sub_code
 {executed in 4 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user
 {executed in 0 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user_role
 {executed in 17 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user_follow
 {executed in 0 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 21 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 4 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 19 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 19 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 35 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 33 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:01:32 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 34 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 10 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 37 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 12 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 39 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 35 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 4 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:01:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 12:01:33 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:01:33 [33mWARN [0;39m restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] [36mException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'[0;39m
[2024-07-30 12:01:33 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:01:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown initiated...[0;39m
[2024-07-30 12:01:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown completed.[0;39m
[2024-07-30 12:01:33 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStopping service [Tomcat][0;39m
[2024-07-30 12:01:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [36m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m
[2024-07-30 12:01:33 [31mERROR[0;39m restartedMain] [org.springframework.boot.SpringApplication] [36mApplication run failed[0;39m
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.green.greengram.GreengramApplication.main(GreengramApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:179)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:147)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:94)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 61 common frames omitted
[2024-07-30 12:04:07 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:04:07 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 2972 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:04:07 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:04:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:04:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:04:08 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:04:08 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 41 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1522 ms[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2685bde0[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:04:09 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:04:09 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:10 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 6 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:04:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:11 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:04:11 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:04:11 [33mWARN [0;39m restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] [36mException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'[0;39m
[2024-07-30 12:04:11 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:04:11 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:04:11 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:04:11 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStopping service [Tomcat][0;39m
[2024-07-30 12:04:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [36m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m
[2024-07-30 12:04:11 [31mERROR[0;39m restartedMain] [org.springframework.boot.SpringApplication] [36mApplication run failed[0;39m
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedControllerImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.green.greengram.GreengramApplication.main(GreengramApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedServiceImpl' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\feed\FeedServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedPicsRepository' defined in com.green.greengram.feed.FeedPicsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List); Reason: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract void com.green.greengram.feed.FeedPicsRepository.saveFeedPics(long,java.util.List) but parameter 'Optional[feedPics]' not found in annotated query ' insert into feed_pics (feed_id, pic) values ( :feedId, :pic)'
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:179)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:147)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:94)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 61 common frames omitted
[2024-07-30 12:04:33 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:04:33 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13596 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:04:33 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:04:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:04:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:04:34 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:04:34 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 43 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1616 ms[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@13925c26[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:04:35 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:04:36 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:36 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 12 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 10 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 25 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 21 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:04:37 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:04:37 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:04:37 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:04:38 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:04:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:04:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:04:38 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28a26602, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@459da7d2, org.springframework.security.web.context.SecurityContextHolderFilter@70f6a896, org.springframework.security.web.header.HeaderWriterFilter@76376f06, org.springframework.web.filter.CorsFilter@69a074cc, org.springframework.security.web.authentication.logout.LogoutFilter@4ab86a02, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7983aa61, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2e837802, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@55aed54, com.green.greengram.security.jwt.JwtAuthenticationFilter@72d8b8cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21d09f71, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ec247c2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7deca90b, org.springframework.security.web.session.SessionManagementFilter@37e5b5b5, org.springframework.security.web.access.ExceptionTranslationFilter@4acebfe5, org.springframework.security.web.access.intercept.AuthorizationFilter@2ec6027c][0;39m
[2024-07-30 12:04:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:04:39 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:04:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:04:39 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.664 seconds (process running for 6.04)[0;39m
[2024-07-30 12:04:39 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:04:39 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:04:39 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 12:04:42 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)[0;39m
[2024-07-30 12:04:42 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:04:42 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:04:42 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:04:42 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13596 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 478 ms[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1c2c7a66[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 12:04:43 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 12 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 12 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 13 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 12 msec}[0;39m
[2024-07-30 12:04:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 13 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 14 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 13 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 13 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:04:44 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:04:44 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:04:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:04:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:04:44 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ebda617, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36e20658, org.springframework.security.web.context.SecurityContextHolderFilter@56d3d4c4, org.springframework.security.web.header.HeaderWriterFilter@73c6ef24, org.springframework.web.filter.CorsFilter@acb99c0, org.springframework.security.web.authentication.logout.LogoutFilter@1b9c6717, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@46c7cbb0, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@458d1397, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@6b268f72, com.green.greengram.security.jwt.JwtAuthenticationFilter@6ef95d4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13aac31c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45350b46, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b1878a0, org.springframework.security.web.session.SessionManagementFilter@26efdaca, org.springframework.security.web.access.ExceptionTranslationFilter@333c15ee, org.springframework.security.web.access.intercept.AuthorizationFilter@379074c0][0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.131 seconds (process running for 12.087)[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:04:45 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:04:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:04:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:04:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:04:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:45 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:04:45 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:04:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:04:51.075','asdf','07/30/2024 12:04:51.075',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:04:51.075','asdf','07/30/2024 12:04:51.075',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:04:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:04:51.089',3,'6c54a20d-4b22-4087-a296-ae0f5b16d978.png')
 {executed in 1 msec}[0;39m
[2024-07-30 12:04:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:04:51.089',3,'6c54a20d-4b22-4087-a296-ae0f5b16d978.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FAILED toString()][0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/6c54a20d-4b22-4087-a296-ae0f5b16d978.png[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:04:51 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/6c54a20d-4b22-4087-a296-ae0f5b16d978.png.][0;39m
[2024-07-30 12:04:51 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:04:51 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:17 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:05:17 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 12:05:17 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 12:05:20 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:05:20 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 13196 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:05:20 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:05:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:05:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:05:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1492 ms[0;39m
[2024-07-30 12:05:22 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:05:22 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@71dc2df5[0;39m
[2024-07-30 12:05:22 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:05:22 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:05:22 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:05:22 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:05:22 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:05:22 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:05:23 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 18 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 17 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 21 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 19 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 21 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 18 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 17 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 16 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 7 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 13 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 15 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 36 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:05:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:05:23 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:05:24 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:05:24 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:05:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:05:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@587cac0a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63711ee9, org.springframework.security.web.context.SecurityContextHolderFilter@5eefdbd2, org.springframework.security.web.header.HeaderWriterFilter@64ba4479, org.springframework.web.filter.CorsFilter@132654da, org.springframework.security.web.authentication.logout.LogoutFilter@752d3899, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@6e121ed0, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@492868d0, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4937dcf2, com.green.greengram.security.jwt.JwtAuthenticationFilter@4feb0bd7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53a5ebd0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4959008a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64c302f7, org.springframework.security.web.session.SessionManagementFilter@1ef9a16d, org.springframework.security.web.access.ExceptionTranslationFilter@69cb551a, org.springframework.security.web.access.intercept.AuthorizationFilter@a8a5ac2][0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.62 seconds (process running for 6.084)[0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:05:25 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:05:30 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:05:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:05:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:05:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:05:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:30 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:05:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:05:59 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:05:59 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:05:59 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.][0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:06:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:06:15.663','asdf','07/30/2024 12:06:15.663',1)
 {executed in 1 msec}[0;39m
[2024-07-30 12:06:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:06:15.663','asdf','07/30/2024 12:06:15.663',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:06:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:06:15.678',3,'b30ce2f2-549c-45e8-b385-c60834343b44.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:06:15.678',3,'b30ce2f2-549c-45e8-b385-c60834343b44.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [com.green.greengram.entity.FeedPics@747fc1bb][0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/b30ce2f2-549c-45e8-b385-c60834343b44.png[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:15 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/b30ce2f2-549c-45e8-b385-c60834343b44.png.][0;39m
[2024-07-30 12:06:15 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:06:15 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:06:30 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:06:15.663118 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b30ce2f2-549c-45e8-b385-c60834343b44.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/b30ce2f2-549c-45e8-b385-c60834343b44.png[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:06:30 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/b30ce2f2-549c-45e8-b385-c60834343b44.png.][0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:06:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:31 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:07:31 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:07:31 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:07:32 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:07:32 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 7648 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:07:32 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:07:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:07:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:07:33 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:07:33 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1484 ms[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@23ee3204[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:07:34 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:07:34 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:07:35 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 14 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 13 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 14 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 10 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 10 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 11 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 20 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 26 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:07:35 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 27 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 29 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:07:36 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:07:36 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:07:36 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:07:36 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:07:37 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:07:37 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:07:37 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@26569fff, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b256e93, org.springframework.security.web.context.SecurityContextHolderFilter@435d8331, org.springframework.security.web.header.HeaderWriterFilter@322c5dc, org.springframework.web.filter.CorsFilter@2c436ce, org.springframework.security.web.authentication.logout.LogoutFilter@721cbe13, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@473f48d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@118df3a3, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@38217e0b, com.green.greengram.security.jwt.JwtAuthenticationFilter@2c26e0fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@283af02, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@518297c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58fd74c3, org.springframework.security.web.session.SessionManagementFilter@4ae0880, org.springframework.security.web.access.ExceptionTranslationFilter@17e9c2df, org.springframework.security.web.access.intercept.AuthorizationFilter@5064e8d7][0;39m
[2024-07-30 12:07:37 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:07:37 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:07:37 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:07:37 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.506 seconds (process running for 5.901)[0;39m
[2024-07-30 12:07:38 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:07:38 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:07:38 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:07:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:07:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:07:41 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:07:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:07:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:07:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:07:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:41 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:07:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:07:44 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:07:44.646','asdf','07/30/2024 12:07:44.646',1)
 {executed in 1 msec}[0;39m
[2024-07-30 12:07:44 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:07:44.646','asdf','07/30/2024 12:07:44.646',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:07:44 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:07:44.662',3,'7f49829a-9adf-441c-80c2-46df50536141.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:07:44 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:07:44.662',3,'7f49829a-9adf-441c-80c2-46df50536141.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [com.green.greengram.entity.FeedPics@2684f140][0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/7f49829a-9adf-441c-80c2-46df50536141.png[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:07:44 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/7f49829a-9adf-441c-80c2-46df50536141.png.][0;39m
[2024-07-30 12:07:44 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:07:44 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:12 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:08:12 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:08:12 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:08:14 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:08:14 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 12992 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:08:14 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:08:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:08:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:08:15 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:08:15 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 44 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1509 ms[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@73925144[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:08:16 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:08:16 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 12:08:17 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 14 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 18 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 21 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 21 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 17 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 18 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 18 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 19 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 6 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 6 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:08:17 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 18 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:08:18 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:08:18 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:08:18 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:08:19 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:08:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:08:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:08:19 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@295efd84, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d04168b, org.springframework.security.web.context.SecurityContextHolderFilter@7c2a0836, org.springframework.security.web.header.HeaderWriterFilter@130bd1c7, org.springframework.web.filter.CorsFilter@8aaaab3, org.springframework.security.web.authentication.logout.LogoutFilter@2059ad2b, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@e05ca8e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2e1b03a4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@38d3d6ab, com.green.greengram.security.jwt.JwtAuthenticationFilter@74319ba2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@392bcace, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69cb551a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15d35691, org.springframework.security.web.session.SessionManagementFilter@721cbe13, org.springframework.security.web.access.ExceptionTranslationFilter@39ba507f, org.springframework.security.web.access.intercept.AuthorizationFilter@a9e12d6][0;39m
[2024-07-30 12:08:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:08:19 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:08:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:08:19 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.557 seconds (process running for 5.959)[0;39m
[2024-07-30 12:08:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:08:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:08:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 5 ms[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:08:23 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:08:23 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:08:23 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:08:23 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:08:23 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:23 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:08:23 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:08:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:08:27.744','aasdf','07/30/2024 12:08:27.744',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:08:27.744','aasdf','07/30/2024 12:08:27.744',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=aasdf)[0;39m
[2024-07-30 12:08:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:08:27.759',3,'7a73e2e1-0590-4aa4-a400-710aa51e1c97.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:08:27.759',3,'7a73e2e1-0590-4aa4-a400-710aa51e1c97.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [com.green.greengram.entity.FeedPics@7a869c59][0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:27 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png.][0;39m
[2024-07-30 12:08:27 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:08:27 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:08:36 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:08:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:08:27.744515 |asdf     |aasdf    |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a73e2e1-0590-4aa4-a400-710aa51e1c97.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:08:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:08:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:08:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:08:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:08:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:08:36 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:08:36 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png.][0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:08:36 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:12:06 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:12:12 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:08:27.744515 |asdf     |aasdf    |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:12:12 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a73e2e1-0590-4aa4-a400-710aa51e1c97.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:12:12 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:12:12 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:12:12 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:12:12 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:12:12 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png.][0;39m
[2024-07-30 12:12:12 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:12:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:12:14 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:12:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:08:27.744515 |asdf     |aasdf    |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:12:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a73e2e1-0590-4aa4-a400-710aa51e1c97.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:12:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:12:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:12:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:12:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:14 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:12:14 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/7a73e2e1-0590-4aa4-a400-710aa51e1c97.png.][0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:12:14 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:12:35 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:12:35 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:12:35 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ff1_0.feed_favorite_id,ff1_0.created_at,ff1_0.feed_id,ff1_0.user_id from feed_favorite ff1_0 where ff1_0.user_id=1 and ff1_0.feed_id=3
 {executed in 0 msec}[0;39m
[2024-07-30 12:12:35 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------|-----------|--------|--------|
|feed_favorite_id |created_at |feed_id |user_id |
|-----------------|-----------|--------|--------|
|-----------------|-----------|--------|--------|
[0;39m
[2024-07-30 12:12:35 [33mWARN [0;39m http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1054-42S22: Unknown column 'creatad_at' in 'field list'[0;39m
[2024-07-30 12:12:35 [31mERROR[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( 1, 3, now() )
 {FAILED after 0 msec}[0;39m
java.sql.SQLSyntaxErrorException: (conn=454) Unknown column 'creatad_at' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:12:35 [33mWARN [0;39m http-nio-8080-exec-8] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 1054, SQLState: 42S22[0;39m
[2024-07-30 12:12:35 [31mERROR[0;39m http-nio-8080-exec-8] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36m(conn=454) Unknown column 'creatad_at' in 'field list'[0;39m
[2024-07-30 12:12:35 [31mERROR[0;39m http-nio-8080-exec-8] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=454) Unknown column 'creatad_at' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 193 common frames omitted
[2024-07-30 12:12:35 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]; SQL [n/a]][0;39m
[2024-07-30 12:12:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:12:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:12:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ff1_0.feed_favorite_id,ff1_0.created_at,ff1_0.feed_id,ff1_0.user_id from feed_favorite ff1_0 where ff1_0.user_id=1 and ff1_0.feed_id=3
 {executed in 1 msec}[0;39m
[2024-07-30 12:12:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------|-----------|--------|--------|
|feed_favorite_id |created_at |feed_id |user_id |
|-----------------|-----------|--------|--------|
|-----------------|-----------|--------|--------|
[0;39m
[2024-07-30 12:12:53 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1054-42S22: Unknown column 'creatad_at' in 'field list'[0;39m
[2024-07-30 12:12:53 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( 1, 3, now() )
 {FAILED after 0 msec}[0;39m
java.sql.SQLSyntaxErrorException: (conn=454) Unknown column 'creatad_at' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:12:53 [33mWARN [0;39m http-nio-8080-exec-3] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 1054, SQLState: 42S22[0;39m
[2024-07-30 12:12:53 [31mERROR[0;39m http-nio-8080-exec-3] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36m(conn=454) Unknown column 'creatad_at' in 'field list'[0;39m
[2024-07-30 12:12:53 [31mERROR[0;39m http-nio-8080-exec-3] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=454) Unknown column 'creatad_at' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 193 common frames omitted
[2024-07-30 12:12:53 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]; SQL [n/a]][0;39m
[2024-07-30 12:13:41 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:13:41 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:13:41 [31mERROR[0;39m http-nio-8080-exec-5] [com.green.greengram.exception.GlobalExceptionHandler] [36mCustomException - handlerException: {}[0;39m
com.green.greengram.exception.CustomException: null
	at com.green.greengram.security.jwt.JwtAuthenticationEntryPoint.commence(JwtAuthenticationEntryPoint.java:30)
	at org.springframework.security.web.access.ExceptionTranslationFilter.sendStartAuthentication(ExceptionTranslationFilter.java:219)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleAccessDeniedException(ExceptionTranslationFilter.java:197)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleSpringSecurityException(ExceptionTranslationFilter.java:178)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:147)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:13:41 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [com.green.greengram.exception.CustomException][0;39m
[2024-07-30 12:13:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/access-token[0;39m
[2024-07-30 12:13:41 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDc0MTMsImV4cCI6MTcyMjMwOTIxMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.znie152wsOVmAG7n8v7k-Uuy54CTXZ3ok49n38elTr4oeReNUaTmffbsUEBb19_EVJybE7CGXRABKNG4kTM2gQ[0;39m
[2024-07-30 12:13:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:13:41 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:13:41 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ff1_0.feed_favorite_id,ff1_0.created_at,ff1_0.feed_id,ff1_0.user_id from feed_favorite ff1_0 where ff1_0.user_id=1 and ff1_0.feed_id=3
 {executed in 0 msec}[0;39m
[2024-07-30 12:13:41 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------|-----------|--------|--------|
|feed_favorite_id |created_at |feed_id |user_id |
|-----------------|-----------|--------|--------|
|-----------------|-----------|--------|--------|
[0;39m
[2024-07-30 12:13:41 [33mWARN [0;39m http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1054-42S22: Unknown column 'creatad_at' in 'field list'[0;39m
[2024-07-30 12:13:41 [31mERROR[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( 1, 3, now() )
 {FAILED after 0 msec}[0;39m
java.sql.SQLSyntaxErrorException: (conn=454) Unknown column 'creatad_at' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:13:41 [33mWARN [0;39m http-nio-8080-exec-10] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 1054, SQLState: 42S22[0;39m
[2024-07-30 12:13:41 [31mERROR[0;39m http-nio-8080-exec-10] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36m(conn=454) Unknown column 'creatad_at' in 'field list'[0;39m
[2024-07-30 12:13:41 [31mERROR[0;39m http-nio-8080-exec-10] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=454) Unknown column 'creatad_at' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 193 common frames omitted
[2024-07-30 12:13:41 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, creatad_at ) VALUES ( ?, ?, now() ) ] [(conn=454) Unknown column 'creatad_at' in 'field list'] [n/a]; SQL [n/a]][0;39m
[2024-07-30 12:14:06 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:14:06 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:14:06 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:14:08 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:14:08 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 9788 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:14:08 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:14:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:14:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:14:09 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:14:09 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1484 ms[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6e262a16[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:14:10 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:14:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:11 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 17 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 21 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 15 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 25 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 24 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:14:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:14:12 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 12:14:12 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:14:12 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:14:12 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:14:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:14:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:14:13 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3dfe9d3b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e8d705, org.springframework.security.web.context.SecurityContextHolderFilter@5b389b9d, org.springframework.security.web.header.HeaderWriterFilter@2bf37da7, org.springframework.web.filter.CorsFilter@32ddf48b, org.springframework.security.web.authentication.logout.LogoutFilter@717e5581, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@71b0356a, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@68aa93c3, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4ce4a637, com.green.greengram.security.jwt.JwtAuthenticationFilter@26901627, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24610c22, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bba3581, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43eb761d, org.springframework.security.web.session.SessionManagementFilter@348b7b48, org.springframework.security.web.access.ExceptionTranslationFilter@3c017176, org.springframework.security.web.access.intercept.AuthorizationFilter@1c1e9480][0;39m
[2024-07-30 12:14:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:14:13 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:14:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:14:13 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.471 seconds (process running for 5.847)[0;39m
[2024-07-30 12:14:14 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:14:14 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:14:14 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:14:17 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:14:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 3 msec}[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:14:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:14:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:14:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:17 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:14:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:14:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:14:18 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ff1_0.feed_favorite_id,ff1_0.created_at,ff1_0.feed_id,ff1_0.user_id from feed_favorite ff1_0 where ff1_0.user_id=1 and ff1_0.feed_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:18 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------|-----------|--------|--------|
|feed_favorite_id |created_at |feed_id |user_id |
|-----------------|-----------|--------|--------|
|-----------------|-----------|--------|--------|
[0;39m
[2024-07-30 12:14:18 [33mWARN [0;39m http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1364-HY000: Field 'created_at' doesn't have a default value[0;39m
[2024-07-30 12:14:18 [31mERROR[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. insert into feed_favorite (feed_id, user_id ) VALUES ( 1, 2 )
 {FAILED after 2 msec}[0;39m
java.sql.SQLException: (conn=464) Field 'created_at' doesn't have a default value
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:306)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:14:18 [33mWARN [0;39m http-nio-8080-exec-10] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 1364, SQLState: HY000[0;39m
[2024-07-30 12:14:18 [31mERROR[0;39m http-nio-8080-exec-10] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36m(conn=464) Field 'created_at' doesn't have a default value[0;39m
[2024-07-30 12:14:18 [31mERROR[0;39m http-nio-8080-exec-10] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.orm.jpa.JpaSystemException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id ) VALUES ( ?, ? ) ] [(conn=464) Field 'created_at' doesn't have a default value] [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id ) VALUES ( ?, ? ) ] [(conn=464) Field 'created_at' doesn't have a default value] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLException: (conn=464) Field 'created_at' doesn't have a default value
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:306)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 193 common frames omitted
[2024-07-30 12:14:18 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.orm.jpa.JpaSystemException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id ) VALUES ( ?, ? ) ] [(conn=464) Field 'created_at' doesn't have a default value] [n/a]][0;39m
[2024-07-30 12:14:35 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:14:35 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:14:35 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:14:38 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:14:38 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 12040 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:14:38 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:14:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:14:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:14:38 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:14:38 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1502 ms[0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@71dc2df5[0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:14:39 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:14:40 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:14:40 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:40 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 18 msec}[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 14 msec}[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 14 msec}[0;39m
[2024-07-30 12:14:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 15 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 19 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 23 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 18 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 6 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 18 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 19 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 43 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:14:41 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:14:41 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:14:41 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:14:42 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:14:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:14:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:14:42 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@492868d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3dd1767d, org.springframework.security.web.context.SecurityContextHolderFilter@190c052c, org.springframework.security.web.header.HeaderWriterFilter@156c0bed, org.springframework.web.filter.CorsFilter@5a05f028, org.springframework.security.web.authentication.logout.LogoutFilter@3982883b, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@6e121ed0, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4bbf2b72, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@261efeea, com.green.greengram.security.jwt.JwtAuthenticationFilter@4feb0bd7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cdc864e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5064e8d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43d342b0, org.springframework.security.web.session.SessionManagementFilter@64b429f9, org.springframework.security.web.access.ExceptionTranslationFilter@7c9b8bbd, org.springframework.security.web.access.intercept.AuthorizationFilter@2c436ce][0;39m
[2024-07-30 12:14:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:14:43 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:14:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:14:43 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.533 seconds (process running for 5.914)[0;39m
[2024-07-30 12:14:43 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:14:43 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:14:43 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 4 ms[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:14:48 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:14:48 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:14:48 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:14:48 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:14:48 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:48 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:14:48 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:14:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:14:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:14:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ff1_0.feed_favorite_id,ff1_0.created_at,ff1_0.feed_id,ff1_0.user_id from feed_favorite ff1_0 where ff1_0.user_id=1 and ff1_0.feed_id=2
 {executed in 1 msec}[0;39m
[2024-07-30 12:14:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------|-----------|--------|--------|
|feed_favorite_id |created_at |feed_id |user_id |
|-----------------|-----------|--------|--------|
|-----------------|-----------|--------|--------|
[0;39m
[2024-07-30 12:14:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( 1, 2, now() )
 {executed in 2 msec}[0;39m
[2024-07-30 12:14:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|
|
|
|
[0;39m
[2024-07-30 12:14:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:14:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:14:54 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ff1_0.feed_favorite_id,ff1_0.created_at,ff1_0.feed_id,ff1_0.user_id from feed_favorite ff1_0 where ff1_0.user_id=1 and ff1_0.feed_id=2
 {executed in 1 msec}[0;39m
[2024-07-30 12:14:54 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------|-----------|--------|--------|
|feed_favorite_id |created_at |feed_id |user_id |
|-----------------|-----------|--------|--------|
|-----------------|-----------|--------|--------|
[0;39m
[2024-07-30 12:14:54 [33mWARN [0;39m http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'[0;39m
[2024-07-30 12:14:54 [31mERROR[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( 1, 2, now() )
 {FAILED after 3 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:14:54 [33mWARN [0;39m http-nio-8080-exec-6] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 1062, SQLState: 23000[0;39m
[2024-07-30 12:14:54 [31mERROR[0;39m http-nio-8080-exec-6] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36m(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'[0;39m
[2024-07-30 12:14:54 [31mERROR[0;39m http-nio-8080-exec-6] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.DataIntegrityViolationException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( ?, ?, now() ) ] [(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'] [n/a]; SQL [n/a]; constraint [UKpupdpvvkcr9e90altsoq9hlwg]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( ?, ?, now() ) ] [(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: (conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 193 common frames omitted
[2024-07-30 12:14:54 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.DataIntegrityViolationException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( ?, ?, now() ) ] [(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'] [n/a]; SQL [n/a]; constraint [UKpupdpvvkcr9e90altsoq9hlwg]][0;39m
[2024-07-30 12:15:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed/favorite[0;39m
[2024-07-30 12:15:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:15:12 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select ff1_0.feed_favorite_id,ff1_0.created_at,ff1_0.feed_id,ff1_0.user_id from feed_favorite ff1_0 where ff1_0.user_id=1 and ff1_0.feed_id=2
 {executed in 0 msec}[0;39m
[2024-07-30 12:15:12 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------|-----------|--------|--------|
|feed_favorite_id |created_at |feed_id |user_id |
|-----------------|-----------|--------|--------|
|-----------------|-----------|--------|--------|
[0;39m
[2024-07-30 12:15:12 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'[0;39m
[2024-07-30 12:15:12 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( 1, 2, now() )
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:15:12 [33mWARN [0;39m http-nio-8080-exec-3] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36mSQL Error: 1062, SQLState: 23000[0;39m
[2024-07-30 12:15:12 [31mERROR[0;39m http-nio-8080-exec-3] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [36m(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'[0;39m
[2024-07-30 12:15:12 [31mERROR[0;39m http-nio-8080-exec-3] [com.green.greengram.exception.GlobalExceptionHandler] [36mException - handlerException: {}[0;39m
org.springframework.dao.DataIntegrityViolationException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( ?, ?, now() ) ] [(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'] [n/a]; SQL [n/a]; constraint [UKpupdpvvkcr9e90altsoq9hlwg]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy191.saveFeedFavorite(Unknown Source)
	at com.green.greengram.feedfavorite.FeedFavoriteServiceImpl.toggleFavorite(FeedFavoriteServiceImpl.java:50)
	at com.green.greengram.feedfavorite.FeedFavoriteControllerImpl.toggleFavorite(FeedFavoriteControllerImpl.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( ?, ?, now() ) ] [(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: (conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:296)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 193 common frames omitted
[2024-07-30 12:15:12 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.dao.DataIntegrityViolationException: JDBC exception executing SQL [ insert into feed_favorite (feed_id, user_id, created_at ) VALUES ( ?, ?, now() ) ] [(conn=474) Duplicate entry '1-2' for key 'UKpupdpvvkcr9e90altsoq9hlwg'] [n/a]; SQL [n/a]; constraint [UKpupdpvvkcr9e90altsoq9hlwg]][0;39m
[2024-07-30 12:17:14 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:17:14 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:17:14 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:18:41 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:18:41 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 9740 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:18:41 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:18:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:18:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:18:42 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:18:42 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 44 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1541 ms[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@517c742e[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:18:43 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:18:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:18:44 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 22 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 17 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 13 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 6 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 20 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:18:44 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:18:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:18:45 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:18:45 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:18:45 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:18:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:18:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:18:46 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3dd1767d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a05f028, org.springframework.security.web.context.SecurityContextHolderFilter@507a4bab, org.springframework.security.web.header.HeaderWriterFilter@392bcace, org.springframework.web.filter.CorsFilter@43d342b0, org.springframework.security.web.authentication.logout.LogoutFilter@e4b20cb, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@487d24ae, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4602dcc0, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@76aac235, com.green.greengram.security.jwt.JwtAuthenticationFilter@141c37f3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ef9a16d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28f2ea63, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4937dcf2, org.springframework.security.web.session.SessionManagementFilter@10fdb6d4, org.springframework.security.web.access.ExceptionTranslationFilter@43ba759b, org.springframework.security.web.access.intercept.AuthorizationFilter@58fd74c3][0;39m
[2024-07-30 12:18:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:18:46 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:18:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:18:46 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.682 seconds (process running for 6.129)[0;39m
[2024-07-30 12:18:47 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:18:47 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:18:47 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:18:50 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:18:50 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:18:50 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:18:50 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:18:50 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:50 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:18:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:18:54 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:18:54.393','asdf','07/30/2024 12:18:54.393',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:18:54 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:18:54.393','asdf','07/30/2024 12:18:54.393',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:18:54 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:18:54.421',3,'0df6132a-320e-4ce1-90d5-b95c80b3f89d.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:18:54 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:18:54.421',3,'0df6132a-320e-4ce1-90d5-b95c80b3f89d.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [com.green.greengram.entity.FeedPics@21756599][0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/0df6132a-320e-4ce1-90d5-b95c80b3f89d.png[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:18:54 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:18:54 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/0df6132a-320e-4ce1-90d5-b95c80b3f89d.png.][0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:18:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 5 class path changes (0 additions, 5 deletions, 0 modifications)[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 9740 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 22 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 465 ms[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@389be583[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:27 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 7 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:27 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 6 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 31 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 7 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:28 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:20:28 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:20:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:20:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:20:28 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2a82365e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b70720c, org.springframework.security.web.context.SecurityContextHolderFilter@3e189157, org.springframework.security.web.header.HeaderWriterFilter@543786e5, org.springframework.web.filter.CorsFilter@6e9e65ba, org.springframework.security.web.authentication.logout.LogoutFilter@793ab4ea, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@253f1d2b, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5e1e5190, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5c2691b2, com.green.greengram.security.jwt.JwtAuthenticationFilter@22bc800c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72bb4bc0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66ece836, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e67868a, org.springframework.security.web.session.SessionManagementFilter@31fb8e4e, org.springframework.security.web.access.ExceptionTranslationFilter@2128e2e7, org.springframework.security.web.access.intercept.AuthorizationFilter@2ad72faf][0;39m
[2024-07-30 12:20:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:20:29 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:20:29 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.036 seconds (process running for 108.553)[0;39m
[2024-07-30 12:20:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 5 class path changes (5 additions, 0 deletions, 0 modifications)[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m Thread-7] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m Thread-7] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m Thread-7] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m Thread-7] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 9740 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:20:30 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 447 ms[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Starting...[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@9988cb0[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Start completed.[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
21. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_comment
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_favorite
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_pics
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists main_code
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists sub_code
 {executed in 6 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user_role
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user_follow
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 6 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 31 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 7 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:31 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:31 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:20:32 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1f14a79f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e55f8c4, org.springframework.security.web.context.SecurityContextHolderFilter@72b97420, org.springframework.security.web.header.HeaderWriterFilter@236aff10, org.springframework.web.filter.CorsFilter@774009f5, org.springframework.security.web.authentication.logout.LogoutFilter@3c361b5e, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@2e6a6aed, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@c8fd719, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@78b2f6d, com.green.greengram.security.jwt.JwtAuthenticationFilter@213527bf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7887ef62, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5142013, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@752d0972, org.springframework.security.web.session.SessionManagementFilter@8e4554, org.springframework.security.web.access.ExceptionTranslationFilter@5d871836, org.springframework.security.web.access.intercept.AuthorizationFilter@2b2c46eb][0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.036 seconds (process running for 112.063)[0;39m
[2024-07-30 12:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 12:20:48 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:20:48 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown initiated...[0;39m
[2024-07-30 12:20:48 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown completed.[0;39m
[2024-07-30 12:20:51 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:20:51 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14056 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:20:51 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:20:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:20:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1589 ms[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@779bad98[0;39m
[2024-07-30 12:20:52 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:20:53 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:20:53 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:20:53 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:20:53 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:20:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 12:20:53 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 13 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 14 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 12 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 20 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:20:54 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 12:20:54 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:20:55 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:20:55 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:20:55 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:20:55 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:20:55 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54df033d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e1b03a4, org.springframework.security.web.context.SecurityContextHolderFilter@130bd1c7, org.springframework.security.web.header.HeaderWriterFilter@8f3c9b5, org.springframework.web.filter.CorsFilter@dc3981c, org.springframework.security.web.authentication.logout.LogoutFilter@7b53c4d9, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@64b2b7d6, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@656c22fb, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1910082b, com.green.greengram.security.jwt.JwtAuthenticationFilter@315a42e6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d60546e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13376e91, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62c9cb77, org.springframework.security.web.session.SessionManagementFilter@18615a81, org.springframework.security.web.access.ExceptionTranslationFilter@89a1176, org.springframework.security.web.access.intercept.AuthorizationFilter@e4b20cb][0;39m
[2024-07-30 12:20:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:20:56 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:20:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:20:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.638 seconds (process running for 6.085)[0;39m
[2024-07-30 12:20:56 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:20:56 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:20:56 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:20:59 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:20:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:20:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:20:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:20:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:20:59 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:20:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:21:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:21:03.678','asdf','07/30/2024 12:21:03.678',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:21:03.678','asdf','07/30/2024 12:21:03.678',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:21:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:21:03.693',3,'801bc453-a555-4b44-a6b9-e6fb2fabc27f.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:21:03.693',3,'801bc453-a555-4b44-a6b9-e6fb2fabc27f.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:21:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:21:03.698',3,'e1004109-c974-4765-9d15-c833523da61c.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:21:03.698',3,'e1004109-c974-4765-9d15-c833523da61c.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=801bc453-a555-4b44-a6b9-e6fb2fabc27f.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=e1004109-c974-4765-9d15-c833523da61c.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mFeedPostRes: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3f21e858, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3baa99bf][0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/e1004109-c974-4765-9d15-c833523da61c.png[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/801bc453-a555-4b44-a6b9-e6fb2fabc27f.png[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:03 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:21:03 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/801bc453-a555-4b44-a6b9-e6fb2fabc27f.png.][0;39m
[2024-07-30 12:21:03 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/e1004109-c974-4765-9d15-c833523da61c.png.][0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:21:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:21:50 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:21:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:21:03.678573 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:21:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|801bc453-a555-4b44-a6b9-e6fb2fabc27f.png |
|e1004109-c974-4765-9d15-c833523da61c.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:21:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:21:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:21:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:21:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:21:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/801bc453-a555-4b44-a6b9-e6fb2fabc27f.png[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/e1004109-c974-4765-9d15-c833523da61c.png[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:21:50 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/e1004109-c974-4765-9d15-c833523da61c.png.][0;39m
[2024-07-30 12:21:50 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/801bc453-a555-4b44-a6b9-e6fb2fabc27f.png.][0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:21:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14056 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:21:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 472 ms[0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@69166c17[0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 18 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 6 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 17 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 21 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 20 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 14 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 4 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 15 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 12:21:52 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:21:53 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@575d2ee1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14158463, org.springframework.security.web.context.SecurityContextHolderFilter@5536cf77, org.springframework.security.web.header.HeaderWriterFilter@6b233690, org.springframework.web.filter.CorsFilter@4d3f6650, org.springframework.security.web.authentication.logout.LogoutFilter@168c88d2, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@46b1f350, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1beeaed4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@2d0e593f, com.green.greengram.security.jwt.JwtAuthenticationFilter@30fa303d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6fb9ed69, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21928017, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@828518a, org.springframework.security.web.session.SessionManagementFilter@188f0deb, org.springframework.security.web.access.ExceptionTranslationFilter@6b3116c5, org.springframework.security.web.access.intercept.AuthorizationFilter@cb26b3][0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.104 seconds (process running for 63.369)[0;39m
[2024-07-30 12:21:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:22:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:22:12.112','asdf','07/30/2024 12:22:12.112',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:22:12.112','asdf','07/30/2024 12:22:12.112',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:22:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:22:12.116',3,'adab6911-82c7-4812-9235-1c4241b2269e.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:22:12.116',3,'adab6911-82c7-4812-9235-1c4241b2269e.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:22:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:22:12.119',3,'89d577a0-8356-4d13-a229-261a3d8e4d1f.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:22:12.119',3,'89d577a0-8356-4d13-a229-261a3d8e4d1f.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=adab6911-82c7-4812-9235-1c4241b2269e.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=89d577a0-8356-4d13-a229-261a3d8e4d1f.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/89d577a0-8356-4d13-a229-261a3d8e4d1f.png[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/adab6911-82c7-4812-9235-1c4241b2269e.png[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:12 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/89d577a0-8356-4d13-a229-261a3d8e4d1f.png.][0;39m
[2024-07-30 12:22:12 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/adab6911-82c7-4812-9235-1c4241b2269e.png.][0;39m
[2024-07-30 12:22:12 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:22:12 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:22:13 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:22:12.112556 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:22:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|adab6911-82c7-4812-9235-1c4241b2269e.png |
|89d577a0-8356-4d13-a229-261a3d8e4d1f.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:22:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:22:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:22:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:22:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:22:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:22:13 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png.][0;39m
[2024-07-30 12:22:13 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png.][0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:22:30 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:22:12.112556 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|adab6911-82c7-4812-9235-1c4241b2269e.png |
|89d577a0-8356-4d13-a229-261a3d8e4d1f.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:22:30 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png.][0;39m
[2024-07-30 12:22:30 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png.][0;39m
[2024-07-30 12:22:30 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:22:30 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:23:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:23:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:17 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:23:17 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:23:55 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:23:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:22:12.112556 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:23:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|adab6911-82c7-4812-9235-1c4241b2269e.png |
|89d577a0-8356-4d13-a229-261a3d8e4d1f.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:23:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:23:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:23:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:23:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:23:55 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png[0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png[0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:23:56 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:23:56 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png.][0;39m
[2024-07-30 12:23:56 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png.][0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:23:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:24:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:24:01.706','asdf','07/30/2024 12:24:01.706',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:24:01.706','asdf','07/30/2024 12:24:01.706',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|4         |
|----------|
[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=4, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:24:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:24:01.714',4,'aa6db28a-42ce-4249-a995-356fde3b0a69.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:24:01.714',4,'aa6db28a-42ce-4249-a995-356fde3b0a69.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:24:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:24:01.716',4,'e99fc0dd-976f-4d0a-a77c-8296b539a791.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:24:01.716',4,'e99fc0dd-976f-4d0a-a77c-8296b539a791.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|4         |
|----------|
[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=3, pic=aa6db28a-42ce-4249-a995-356fde3b0a69.png, feed=Feed(feedId=4, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=4, pic=e99fc0dd-976f-4d0a-a77c-8296b539a791.png, feed=Feed(feedId=4, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/e99fc0dd-976f-4d0a-a77c-8296b539a791.png[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/aa6db28a-42ce-4249-a995-356fde3b0a69.png[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:01 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/e99fc0dd-976f-4d0a-a77c-8296b539a791.png.][0;39m
[2024-07-30 12:24:01 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:24:01 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/aa6db28a-42ce-4249-a995-356fde3b0a69.png.][0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:24:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:24:03 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|4       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:24:01.706024 |asdf     |asdf     |0     |
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:22:12.112556 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|aa6db28a-42ce-4249-a995-356fde3b0a69.png |
|e99fc0dd-976f-4d0a-a77c-8296b539a791.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|adab6911-82c7-4812-9235-1c4241b2269e.png |
|89d577a0-8356-4d13-a229-261a3d8e4d1f.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:24:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/4/aa6db28a-42ce-4249-a995-356fde3b0a69.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/4/e99fc0dd-976f-4d0a-a77c-8296b539a791.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/4/aa6db28a-42ce-4249-a995-356fde3b0a69.png.][0;39m
[2024-07-30 12:24:03 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:24:03 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/4/e99fc0dd-976f-4d0a-a77c-8296b539a791.png.][0;39m
[2024-07-30 12:24:03 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png.][0;39m
[2024-07-30 12:24:03 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png.][0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:24:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:24:10 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:27:31 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|4       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:24:01.706024 |asdf     |asdf     |0     |
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:22:12.112556 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|aa6db28a-42ce-4249-a995-356fde3b0a69.png |
|e99fc0dd-976f-4d0a-a77c-8296b539a791.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 1 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|adab6911-82c7-4812-9235-1c4241b2269e.png |
|89d577a0-8356-4d13-a229-261a3d8e4d1f.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:27:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/4/e99fc0dd-976f-4d0a-a77c-8296b539a791.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/4/aa6db28a-42ce-4249-a995-356fde3b0a69.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:27:31 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:27:31 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/adab6911-82c7-4812-9235-1c4241b2269e.png.][0;39m
[2024-07-30 12:27:31 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/4/e99fc0dd-976f-4d0a-a77c-8296b539a791.png.][0;39m
[2024-07-30 12:27:31 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/4/aa6db28a-42ce-4249-a995-356fde3b0a69.png.][0;39m
[2024-07-30 12:27:31 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/89d577a0-8356-4d13-a229-261a3d8e4d1f.png.][0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:27:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:29:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:29:35.050','asdf','07/30/2024 12:29:35.050',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:29:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:29:35.050','asdf','07/30/2024 12:29:35.050',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|5         |
|----------|
[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=5, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:29:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:29:35.050',5,'f833c09c-2c88-4d27-9e08-da68bb50b9b5.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:29:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:29:35.050',5,'f833c09c-2c88-4d27-9e08-da68bb50b9b5.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|5         |
|----------|
[0;39m
[2024-07-30 12:29:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:29:35.050',5,'2e938d2a-bc5d-46ac-8884-da61ead9855c.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:29:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:29:35.050',5,'2e938d2a-bc5d-46ac-8884-da61ead9855c.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|6         |
|----------|
[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=5, pic=f833c09c-2c88-4d27-9e08-da68bb50b9b5.png, feed=Feed(feedId=5, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=6, pic=2e938d2a-bc5d-46ac-8884-da61ead9855c.png, feed=Feed(feedId=5, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/f833c09c-2c88-4d27-9e08-da68bb50b9b5.png[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/0/2e938d2a-bc5d-46ac-8884-da61ead9855c.png[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:35 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:29:35 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/f833c09c-2c88-4d27-9e08-da68bb50b9b5.png.][0;39m
[2024-07-30 12:29:35 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/0/2e938d2a-bc5d-46ac-8884-da61ead9855c.png.][0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:29:35 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:29:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:44 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:30:44 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 12:30:44 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 12:30:46 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:30:46 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14760 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:30:46 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:30:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:30:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 43 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:30:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1502 ms[0;39m
[2024-07-30 12:30:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:30:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@25e30b4f[0;39m
[2024-07-30 12:30:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:30:48 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:30:48 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:30:48 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:30:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:30:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:30:49 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 16 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 16 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 15 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 17 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 11 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 11 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 10 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 20 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:30:49 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:30:49 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:30:50 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:30:50 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:30:50 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:30:50 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@70ec0762, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ce4a637, org.springframework.security.web.context.SecurityContextHolderFilter@494b586d, org.springframework.security.web.header.HeaderWriterFilter@f2c6e3d, org.springframework.web.filter.CorsFilter@3e864469, org.springframework.security.web.authentication.logout.LogoutFilter@69565aa2, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7a7da83e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5efea651, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3c3d7936, com.green.greengram.security.jwt.JwtAuthenticationFilter@72af3487, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76c15d18, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b389b9d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@598907b1, org.springframework.security.web.session.SessionManagementFilter@749f7d62, org.springframework.security.web.access.ExceptionTranslationFilter@4ab86a02, org.springframework.security.web.access.intercept.AuthorizationFilter@28a26602][0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.506 seconds (process running for 5.897)[0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:30:51 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:30:56 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 16 msec}[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:30:56 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:30:56 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:30:56 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:30:56 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:30:56 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:30:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:31:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:31:02.182','asdf','07/30/2024 12:31:02.182',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:31:02.182','asdf','07/30/2024 12:31:02.182',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:31:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:02.182',3,'4404d11b-f1ba-4367-a410-0244b509d428.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:02.182',3,'4404d11b-f1ba-4367-a410-0244b509d428.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:31:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:02.198',3,'ff639d80-5483-43b9-be6f-49eb5b01eb62.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:02.198',3,'ff639d80-5483-43b9-be6f-49eb5b01eb62.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=4404d11b-f1ba-4367-a410-0244b509d428.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=ff639d80-5483-43b9-be6f-49eb5b01eb62.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/ff639d80-5483-43b9-be6f-49eb5b01eb62.png[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4404d11b-f1ba-4367-a410-0244b509d428.png[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:02 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4404d11b-f1ba-4367-a410-0244b509d428.png.][0;39m
[2024-07-30 12:31:02 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:31:02 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/ff639d80-5483-43b9-be6f-49eb5b01eb62.png.][0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:31:02 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:42 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:31:42 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:31:42 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:31:44 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:31:44 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 6800 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:31:44 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:31:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:31:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:31:45 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:31:45 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 44 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1518 ms[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3f3481d4[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:31:46 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:31:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:47 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 14 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 11 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 14 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 14 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 12 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 13 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 6 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 9 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 6 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:31:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 39 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 38 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 30 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:31:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:31:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:31:48 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:31:48 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:31:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:31:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:31:49 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1448b3aa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@261efeea, org.springframework.security.web.context.SecurityContextHolderFilter@69cb551a, org.springframework.security.web.header.HeaderWriterFilter@13376e91, org.springframework.web.filter.CorsFilter@76aac235, org.springframework.security.web.authentication.logout.LogoutFilter@2f59b95e, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@74c7d20e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@54da1094, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@2d04168b, com.green.greengram.security.jwt.JwtAuthenticationFilter@4407d92b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@232d5254, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@190c052c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ddd3170, org.springframework.security.web.session.SessionManagementFilter@4cca02d2, org.springframework.security.web.access.ExceptionTranslationFilter@d3fd909, org.springframework.security.web.access.intercept.AuthorizationFilter@68619171][0;39m
[2024-07-30 12:31:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:31:49 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:31:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:31:49 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.577 seconds (process running for 5.952)[0;39m
[2024-07-30 12:31:50 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:31:50 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:31:50 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:31:53 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:31:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:31:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:31:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:31:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:53 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:31:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:58 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:31:58 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:31:58 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:31:59 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:31:59.015','asdf','07/30/2024 12:31:59.015',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:59 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:31:59.015','asdf','07/30/2024 12:31:59.015',1)
 {executed in 1 msec}[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:31:59 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:59.030',3,'146a2e24-8574-42e6-a8a9-ad535d2ef30f.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:59 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:59.030',3,'146a2e24-8574-42e6-a8a9-ad535d2ef30f.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:31:59 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:59.033',3,'24657c81-0116-44dd-9ad8-ac4f64321323.png')
 {executed in 1 msec}[0;39m
[2024-07-30 12:31:59 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:31:59.033',3,'24657c81-0116-44dd-9ad8-ac4f64321323.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=146a2e24-8574-42e6-a8a9-ad535d2ef30f.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=24657c81-0116-44dd-9ad8-ac4f64321323.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/146a2e24-8574-42e6-a8a9-ad535d2ef30f.png[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/24657c81-0116-44dd-9ad8-ac4f64321323.png[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:31:59 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/24657c81-0116-44dd-9ad8-ac4f64321323.png.][0;39m
[2024-07-30 12:31:59 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/146a2e24-8574-42e6-a8a9-ad535d2ef30f.png.][0;39m
[2024-07-30 12:31:59 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:31:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:01 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:33:01 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:33:01 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:33:03 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:33:03 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 15232 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:33:03 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:33:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:33:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:33:04 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:33:04 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:33:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1515 ms[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4288c324[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:33:05 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:33:05 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:06 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 14 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 14 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 12 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 12 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 12 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 13 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 13 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 10 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 10 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 22 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 19 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 26 msec}[0;39m
[2024-07-30 12:33:06 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 28 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 27 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:33:07 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 4 msec}[0;39m
[2024-07-30 12:33:07 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:33:07 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:33:07 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:33:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:33:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:33:08 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7fe32937, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a920253, org.springframework.security.web.context.SecurityContextHolderFilter@1ef9a16d, org.springframework.security.web.header.HeaderWriterFilter@e518f57, org.springframework.web.filter.CorsFilter@530d0773, org.springframework.security.web.authentication.logout.LogoutFilter@2690b101, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@75a42360, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@76aac235, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4d7a96be, com.green.greengram.security.jwt.JwtAuthenticationFilter@7b639be3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b53c4d9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16a4e43e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@242a91ac, org.springframework.security.web.session.SessionManagementFilter@190c052c, org.springframework.security.web.access.ExceptionTranslationFilter@4cca02d2, org.springframework.security.web.access.intercept.AuthorizationFilter@3a4e0834][0;39m
[2024-07-30 12:33:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:33:08 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:33:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:33:08 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.596 seconds (process running for 5.975)[0;39m
[2024-07-30 12:33:09 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:33:09 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:33:09 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:33:13 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 16 msec}[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:33:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:33:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:33:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:33:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:13 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:33:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:33:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:33:18.638','asdf','07/30/2024 12:33:18.638',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:33:18.638','asdf','07/30/2024 12:33:18.638',1)
 {executed in 1 msec}[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:33:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:33:18.652',3,'019e6878-0cde-4183-9ec6-5af6b135f48b.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:33:18.652',3,'019e6878-0cde-4183-9ec6-5af6b135f48b.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:33:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:33:18.656',3,'4652423d-b457-4419-b125-f50fc6da9de1.png')
 {executed in 1 msec}[0;39m
[2024-07-30 12:33:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:33:18.656',3,'4652423d-b457-4419-b125-f50fc6da9de1.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=019e6878-0cde-4183-9ec6-5af6b135f48b.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=4652423d-b457-4419-b125-f50fc6da9de1.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:18 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:33:18 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:33:18 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:33:18 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:33:50 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:33:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:33:18.638193 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:33:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|019e6878-0cde-4183-9ec6-5af6b135f48b.png |
|4652423d-b457-4419-b125-f50fc6da9de1.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:33:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:33:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:33:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:33:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:33:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:33:50 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:33:50 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:33:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:33:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:35:42 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png/[0;39m
[2024-07-30 12:35:42 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:35:42 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:35:46 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png[0;39m
[2024-07-30 12:35:46 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:35:46 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:33:18.638193 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:37:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|019e6878-0cde-4183-9ec6-5af6b135f48b.png |
|4652423d-b457-4419-b125-f50fc6da9de1.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:37:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:37:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:37:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:37:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:51 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:37:51 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:37:51 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:51 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:33:18.638193 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:37:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|019e6878-0cde-4183-9ec6-5af6b135f48b.png |
|4652423d-b457-4419-b125-f50fc6da9de1.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:37:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:37:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:37:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:37:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:37:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:54 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:37:54 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:37:54 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:37:56 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:37:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:33:18.638193 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|019e6878-0cde-4183-9ec6-5af6b135f48b.png |
|4652423d-b457-4419-b125-f50fc6da9de1.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:37:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:37:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:37:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:37:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:37:56 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:37:56 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:37:56 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:37:56 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:42 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /[0;39m
[2024-07-30 12:39:42 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:39:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:42 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:39:42 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:33:18.638193 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:39:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|019e6878-0cde-4183-9ec6-5af6b135f48b.png |
|4652423d-b457-4419-b125-f50fc6da9de1.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:39:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:39:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:39:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:39:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:39:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:39:43 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:43 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/4652423d-b457-4419-b125-f50fc6da9de1.png.][0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:39:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:39:48 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:40:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:40:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:40:00 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:40:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:40:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:40:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:40:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:43:56 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:43:56 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:43:56 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:43:57 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:43:57 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 3316 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:43:57 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:43:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:43:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:43:58 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:43:58 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1526 ms[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6369682f[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:43:59 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:43:59 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:00 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 15 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 14 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 12 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 13 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 12 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 15 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 6 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 7 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 8 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 6 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 7 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:44:00 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 17 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 18 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 1 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:44:01 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:44:01 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:44:01 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:44:02 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:44:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:44:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:44:02 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15ebba4b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2294ab14, org.springframework.security.web.context.SecurityContextHolderFilter@509d062, org.springframework.security.web.header.HeaderWriterFilter@5f30184e, org.springframework.web.filter.CorsFilter@686a991f, org.springframework.security.web.authentication.logout.LogoutFilter@2ec6027c, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@47e59254, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@344c5e82, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4f011e36, com.green.greengram.security.jwt.JwtAuthenticationFilter@6d61d2c5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35c21100, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f573cf9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8545b3d, org.springframework.security.web.session.SessionManagementFilter@2578554a, org.springframework.security.web.access.ExceptionTranslationFilter@23bf17c, org.springframework.security.web.access.intercept.AuthorizationFilter@b492646][0;39m
[2024-07-30 12:44:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:44:02 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:44:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:44:02 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.523 seconds (process running for 5.927)[0;39m
[2024-07-30 12:44:03 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:44:03 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:44:03 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 12:44:06 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png[0;39m
[2024-07-30 12:44:06 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:06 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/019e6878-0cde-4183-9ec6-5af6b135f48b.png.][0;39m
[2024-07-30 12:44:06 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:44:06 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/index.html[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui.css[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/index.css[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui-bundle.js[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-ui-standalone-preset.js[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /swagger-ui/swagger-initializer.js[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /v3/api-docs/swagger-config[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /v3/api-docs[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:09 [32mINFO [0;39m http-nio-8080-exec-1] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 231 ms[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:44:10 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [31mERROR[0;39m http-nio-8080-exec-3] [com.green.greengram.exception.GlobalExceptionHandler] [36mCustomException - handlerException: {}[0;39m
com.green.greengram.exception.CustomException: null
	at com.green.greengram.security.jwt.JwtAuthenticationEntryPoint.commence(JwtAuthenticationEntryPoint.java:30)
	at org.springframework.security.web.access.ExceptionTranslationFilter.sendStartAuthentication(ExceptionTranslationFilter.java:219)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleAccessDeniedException(ExceptionTranslationFilter.java:197)
	at org.springframework.security.web.access.ExceptionTranslationFilter.handleSpringSecurityException(ExceptionTranslationFilter.java:178)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:147)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter.doFilterInternal(OAuth2AuthenticationCheckRedirectUriFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-30 12:44:10 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [com.green.greengram.exception.CustomException][0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/access-token[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMDkyMjEsImV4cCI6MTcyMjMxMTAyMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.44VSGA2lxWI5rKmwYrQNeSf60id2z3LVfOBEryaL3wLpoMWTrTTFxVvGBws9yN279CBmrFjjc5iyr4qfZUQNLw[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:44:10 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:44:10 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:44:10 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:44:10 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:44:10 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:10 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:44:10 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:44:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:44:16.453','asdf','07/30/2024 12:44:16.453',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:44:16.453','asdf','07/30/2024 12:44:16.453',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:44:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:44:16.468',3,'18518133-bddf-45e4-a422-b34ca3b11c98.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:44:16.468',3,'18518133-bddf-45e4-a422-b34ca3b11c98.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:44:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:44:16.484',3,'3f2afc79-3528-4310-ad6d-8d79d84087bf.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:44:16.484',3,'3f2afc79-3528-4310-ad6d-8d79d84087bf.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=18518133-bddf-45e4-a422-b34ca3b11c98.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=3f2afc79-3528-4310-ad6d-8d79d84087bf.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/18518133-bddf-45e4-a422-b34ca3b11c98.png[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:16 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:44:16 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/18518133-bddf-45e4-a422-b34ca3b11c98.png.][0;39m
[2024-07-30 12:44:16 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png.][0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:44:16 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:44:17 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:44:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:44:16.453306 |asdf     |asdf     |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|18518133-bddf-45e4-a422-b34ca3b11c98.png |
|3f2afc79-3528-4310-ad6d-8d79d84087bf.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:44:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:44:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:44:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:44:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/18518133-bddf-45e4-a422-b34ca3b11c98.png[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:17 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/18518133-bddf-45e4-a422-b34ca3b11c98.png.][0;39m
[2024-07-30 12:44:17 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:44:17 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png.][0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:44:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:44:19 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:23 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:44:23 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:23 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:44:23 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:23 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:44:23 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png[0;39m
[2024-07-30 12:44:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:31 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png.][0;39m
[2024-07-30 12:44:33 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png[0;39m
[2024-07-30 12:44:33 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:44:33 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/3f2afc79-3528-4310-ad6d-8d79d84087bf.png.][0;39m
[2024-07-30 12:45:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:45:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:45:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:45:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:45:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:45:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:45:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:19 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:45:19 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:45:19 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:45:21 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:45:21 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14884 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:45:21 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:45:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:45:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 42 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1512 ms[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5ef5bad6[0;39m
[2024-07-30 12:45:22 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:45:23 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:45:23 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:45:23 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:45:23 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:45:23 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:23 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 19 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 19 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 18 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 18 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 14 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 14 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 8 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 6 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 31 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:24 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:45:24 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:45:24 [33mWARN [0;39m restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] [36mException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customFileUtils' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\common\CustomFileUtils.class]: Unexpected exception during bean creation[0;39m
[2024-07-30 12:45:24 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:45:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:45:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:45:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStopping service [Tomcat][0;39m
[2024-07-30 12:45:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [36m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m
[2024-07-30 12:45:24 [31mERROR[0;39m restartedMain] [org.springframework.boot.SpringApplication] [36mApplication run failed[0;39m
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customFileUtils' defined in file [D:\2024-01\backEnd\GreengramJpa\build\classes\java\main\com\green\greengram\common\CustomFileUtils.class]: Unexpected exception during bean creation
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.green.greengram.GreengramApplication.main(GreengramApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'file.dir' in value "${file.dir}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:953)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1374)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	... 19 common frames omitted
[2024-07-30 12:45:44 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:45:44 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 14828 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:45:44 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:45:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:45:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 39 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:45:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1501 ms[0;39m
[2024-07-30 12:45:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:45:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3e1d578f[0;39m
[2024-07-30 12:45:46 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:45:46 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:45:46 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:45:46 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:45:46 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:45:46 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 12:45:47 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 17 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 22 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 18 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 17 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 17 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 17 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 17 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 11 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 6 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 7 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 11 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 19 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 19 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:45:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:45:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:45:48 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:45:48 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:45:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@38cdfa6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a3db62a, org.springframework.security.web.context.SecurityContextHolderFilter@40bb4627, org.springframework.security.web.header.HeaderWriterFilter@3f236571, org.springframework.web.filter.CorsFilter@2e837802, org.springframework.security.web.authentication.logout.LogoutFilter@61f9bbe0, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@6feb6b4d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4915daec, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@16db23f8, com.green.greengram.security.jwt.JwtAuthenticationFilter@1f2b5571, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@269725ac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37e5b5b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@303e14ce, org.springframework.security.web.session.SessionManagementFilter@4acebfe5, org.springframework.security.web.access.ExceptionTranslationFilter@731dca12, org.springframework.security.web.access.intercept.AuthorizationFilter@16adaaab][0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.571 seconds (process running for 6.022)[0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:45:49 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:45:54 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:45:54 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:45:54 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:45:54 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:45:54 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:45:54 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:45:54 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:46:01 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:46:01.425','asdfasdf','07/30/2024 12:46:01.425',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:01 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:46:01.425','asdfasdf','07/30/2024 12:46:01.425',1)
 {executed in 1 msec}[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdfasdf)[0;39m
[2024-07-30 12:46:01 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:46:01.440',3,'722f856f-3c47-4c48-b598-19fa2bd4ee4b.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:01 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:46:01.440',3,'722f856f-3c47-4c48-b598-19fa2bd4ee4b.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:46:01 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:46:01.444',3,'2c2d9471-9998-4170-ab90-9245f5e1ab27.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:01 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:46:01.444',3,'2c2d9471-9998-4170-ab90-9245f5e1ab27.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=722f856f-3c47-4c48-b598-19fa2bd4ee4b.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdfasdf)), FeedPics(feedPicId=2, pic=2c2d9471-9998-4170-ab90-9245f5e1ab27.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdfasdf))][0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/2c2d9471-9998-4170-ab90-9245f5e1ab27.png[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/722f856f-3c47-4c48-b598-19fa2bd4ee4b.png[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:01 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/722f856f-3c47-4c48-b598-19fa2bd4ee4b.png.][0;39m
[2024-07-30 12:46:01 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/2c2d9471-9998-4170-ab90-9245f5e1ab27.png.][0;39m
[2024-07-30 12:46:01 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:46:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:46:01.425523 |asdf     |asdfasdf |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:46:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|722f856f-3c47-4c48-b598-19fa2bd4ee4b.png |
|2c2d9471-9998-4170-ab90-9245f5e1ab27.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:46:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:46:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:46:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:46:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:46:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/722f856f-3c47-4c48-b598-19fa2bd4ee4b.png[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/2c2d9471-9998-4170-ab90-9245f5e1ab27.png[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:03 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:46:03 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/722f856f-3c47-4c48-b598-19fa2bd4ee4b.png.][0;39m
[2024-07-30 12:46:03 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/2c2d9471-9998-4170-ab90-9245f5e1ab27.png.][0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:46:03 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:04 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:46:04 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:04 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:46:04 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:04 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:46:04 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:05 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:46:05 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:46:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:07 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:46:07 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:07 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:46:07 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:07 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:46:07 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js.map[0;39m
[2024-07-30 12:46:17 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 5 msec}[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|3       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-30 12:46:01.425523 |asdf     |asdfasdf |0     |
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:46:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|722f856f-3c47-4c48-b598-19fa2bd4ee4b.png |
|2c2d9471-9998-4170-ab90-9245f5e1ab27.png |
|-----------------------------------------|
[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-30 12:46:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:46:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:46:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/2c2d9471-9998-4170-ab90-9245f5e1ab27.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/722f856f-3c47-4c48-b598-19fa2bd4ee4b.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:46:18 [33mWARN [0;39m http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/2c2d9471-9998-4170-ab90-9245f5e1ab27.png.][0;39m
[2024-07-30 12:46:18 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/722f856f-3c47-4c48-b598-19fa2bd4ee4b.png.][0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:46:18 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:47 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:46:47 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:47 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:46:47 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:47 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:46:47 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:46:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:49 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:46:49 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:46:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:58 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:46:58 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:58 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:46:58 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:46:58 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:46:58 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:47:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:47:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:47:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:28 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:47:28 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:28 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:47:28 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:28 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:47:28 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:47:30 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:47:30 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:47:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:47:30 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:38 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:50:38 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:50:38 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:50:39 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:50:39 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 12460 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:50:39 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:50:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:50:39 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 57 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:50:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1867 ms[0;39m
[2024-07-30 12:50:42 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:50:42 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79c6745d[0;39m
[2024-07-30 12:50:42 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:50:42 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:50:42 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:50:42 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:50:42 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:50:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:50:43 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 13 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 13 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 13 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 13 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 12 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 11 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 14 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 13 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 13 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 7 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 6 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 6 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 15 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 15 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 2 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:50:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:50:43 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:50:44 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:50:44 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4025819e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47ee4e85, org.springframework.security.web.context.SecurityContextHolderFilter@35c21100, org.springframework.security.web.header.HeaderWriterFilter@7c11616b, org.springframework.web.filter.CorsFilter@7b708506, org.springframework.security.web.authentication.logout.LogoutFilter@742ab0cf, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@67632f66, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4f011e36, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@78664a4b, com.green.greengram.security.jwt.JwtAuthenticationFilter@c7f7b8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ab86a02, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@689b70ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5157b4e6, org.springframework.security.web.session.SessionManagementFilter@29035819, org.springframework.security.web.access.ExceptionTranslationFilter@76eae889, org.springframework.security.web.access.intercept.AuthorizationFilter@b2cae9e][0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 6.136 seconds (process running for 6.544)[0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:50:45 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 3 ms[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.d34b46c8.js[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.d34b46c8.js.map[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:50:49 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:50:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:50:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo512.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:50:49 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:50:49 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:51:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:51:01.791','asdf','07/30/2024 12:51:01.791',1)
 {executed in 1 msec}[0;39m
[2024-07-30 12:51:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:51:01.791','asdf','07/30/2024 12:51:01.791',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:51:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:51:01.806',3,'2f4ecb96-c833-4993-85d1-42ac627600cf.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:51:01.806',3,'2f4ecb96-c833-4993-85d1-42ac627600cf.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:51:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:51:01.810',3,'2913751d-96ce-43f3-b54c-d5858f4c2057.png')
 {executed in 1 msec}[0;39m
[2024-07-30 12:51:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:51:01.810',3,'2913751d-96ce-43f3-b54c-d5858f4c2057.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=2f4ecb96-c833-4993-85d1-42ac627600cf.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=2913751d-96ce-43f3-b54c-d5858f4c2057.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/2913751d-96ce-43f3-b54c-d5858f4c2057.png[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/2f4ecb96-c833-4993-85d1-42ac627600cf.png[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:01 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:51:01 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/2f4ecb96-c833-4993-85d1-42ac627600cf.png.][0;39m
[2024-07-30 12:51:01 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/2913751d-96ce-43f3-b54c-d5858f4c2057.png.][0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:51:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.d34b46c8.js.map[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:51:05 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 12460 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 28 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 676 ms[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2189f1d[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:51:47 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:51:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-07-30 12:51:48 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 15 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 12 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 13 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 12 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 13 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 12 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 19 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 15 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 12 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed
 {executed in 7 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists main_code
 {executed in 8 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_role
 {executed in 8 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. drop table if exists user_follow
 {executed in 8 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 3 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 13 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 17 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 17 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 17 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 2 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:51:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
11. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:51:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:51:48 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@343329dd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45236944, org.springframework.security.web.context.SecurityContextHolderFilter@5b36e2e7, org.springframework.security.web.header.HeaderWriterFilter@54e523, org.springframework.web.filter.CorsFilter@5dccc8fc, org.springframework.security.web.authentication.logout.LogoutFilter@21984ec6, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@1310a30a, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7bdeb8b4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1c8040aa, com.green.greengram.security.jwt.JwtAuthenticationFilter@6d703041, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f027883, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@586770c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7450964, org.springframework.security.web.session.SessionManagementFilter@104bfe2f, org.springframework.security.web.access.ExceptionTranslationFilter@73979a0e, org.springframework.security.web.access.intercept.AuthorizationFilter@3761e56e][0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.374 seconds (process running for 70.311)[0;39m
[2024-07-30 12:51:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.d34b46c8.js[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css.map[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.d34b46c8.js.map[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:51:50 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:51:50 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:51:50 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:51:50 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:51:50 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:51:50 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m Thread-7] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m Thread-7] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m Thread-7] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m Thread-7] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 12460 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 18 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 478 ms[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Starting...[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@23bcd0af[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Start completed.[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:52:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
21. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:42 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:52:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 34 msec}[0;39m
[2024-07-30 12:52:42 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 25 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 26 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 26 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 27 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 25 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 26 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 23 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 31 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 21 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 33 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed
 {executed in 17 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_comment
 {executed in 14 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_favorite
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists feed_pics
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists main_code
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists sub_code
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user_role
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. drop table if exists user_follow
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 2 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 24 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 22 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 21 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 23 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 19 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 20 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 18 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 6 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 3 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 5 msec}[0;39m
[2024-07-30 12:52:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
21. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 3 msec}[0;39m
[2024-07-30 12:52:43 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:52:44 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@41141feb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9c5f2cc, org.springframework.security.web.context.SecurityContextHolderFilter@6eca8989, org.springframework.security.web.header.HeaderWriterFilter@5537b65e, org.springframework.web.filter.CorsFilter@280732cf, org.springframework.security.web.authentication.logout.LogoutFilter@6fe94ced, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@6e9aeb92, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@262d1bd6, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@21f7c240, com.green.greengram.security.jwt.JwtAuthenticationFilter@7ecf6946, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e479e33, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16ecd72, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47d73e34, org.springframework.security.web.session.SessionManagementFilter@5baf620, org.springframework.security.web.access.ExceptionTranslationFilter@6e5e2cc, org.springframework.security.web.access.intercept.AuthorizationFilter@76281480][0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.365 seconds (process running for 125.391)[0;39m
[2024-07-30 12:52:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m Thread-11] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m Thread-11] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m Thread-11] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown initiated...[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m Thread-11] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown completed.[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 12460 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 17 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 436 ms[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Starting...[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-4 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7edc71f2[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Start completed.[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
31. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:57 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 7 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 30 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 11 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists feed_comment
 {executed in 6 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists feed_favorite
 {executed in 10 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists main_code
 {executed in 6 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists sub_code
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists user
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists user_role
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. drop table if exists user_follow
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 12 msec}[0;39m
[2024-07-30 12:52:57 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 22 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 32 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 31 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 16 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 15 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
31. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 0 msec}[0;39m
[2024-07-30 12:52:58 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:52:58 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:52:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:52:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:52:58 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6c127d1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@341f336, org.springframework.security.web.context.SecurityContextHolderFilter@15ab6302, org.springframework.security.web.header.HeaderWriterFilter@2bbe7b5e, org.springframework.web.filter.CorsFilter@5448604c, org.springframework.security.web.authentication.logout.LogoutFilter@5c40b75a, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@163a0a10, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7fdc9b5c, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@311afe79, com.green.greengram.security.jwt.JwtAuthenticationFilter@2080e732, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c0509de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e06f392, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b5a331f, org.springframework.security.web.session.SessionManagementFilter@33f6666c, org.springframework.security.web.access.ExceptionTranslationFilter@44070af9, org.springframework.security.web.access.intercept.AuthorizationFilter@5cfcd3b9][0;39m
[2024-07-30 12:52:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:52:59 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:52:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:52:59 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.01 seconds (process running for 139.934)[0;39m
[2024-07-30 12:52:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.d34b46c8.js[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 14 msec}[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:53:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:53:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:53:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:53:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:01 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:53:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:53:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
31. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:53:07.952','asdf','07/30/2024 12:53:07.952',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
31. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:53:07.952','asdf','07/30/2024 12:53:07.952',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mSaved file to: feed/3/7181ba30-057a-4915-bc70-f95e39e20c9c.png[0;39m
[2024-07-30 12:53:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
31. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:53:07.955',3,'7181ba30-057a-4915-bc70-f95e39e20c9c.png')
 {executed in 1 msec}[0;39m
[2024-07-30 12:53:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
31. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:53:07.955',3,'7181ba30-057a-4915-bc70-f95e39e20c9c.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mSaved file to: feed/3/167ab98f-d9bc-47e0-9058-462498b719f4.png[0;39m
[2024-07-30 12:53:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
31. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:53:07.958',3,'167ab98f-d9bc-47e0-9058-462498b719f4.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
31. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:53:07.958',3,'167ab98f-d9bc-47e0-9058-462498b719f4.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=7181ba30-057a-4915-bc70-f95e39e20c9c.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=167ab98f-d9bc-47e0-9058-462498b719f4.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/7181ba30-057a-4915-bc70-f95e39e20c9c.png[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/167ab98f-d9bc-47e0-9058-462498b719f4.png[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:53:07 [33mWARN [0;39m http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/167ab98f-d9bc-47e0-9058-462498b719f4.png.][0;39m
[2024-07-30 12:53:07 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:53:07 [33mWARN [0;39m http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource feed/3/7181ba30-057a-4915-bc70-f95e39e20c9c.png.][0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:53:07 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:06 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:54:06 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Shutdown initiated...[0;39m
[2024-07-30 12:54:06 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Shutdown completed.[0;39m
[2024-07-30 12:54:08 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-30 12:54:08 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.12 with PID 16136 (D:\2024-01\backEnd\GreengramJpa\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramJpa)[0;39m
[2024-07-30 12:54:08 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-30 12:54:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-30 12:54:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 47 ms. Found 7 JPA repository interfaces.[0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-30 12:54:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1609 ms[0;39m
[2024-07-30 12:54:10 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-30 12:54:10 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79c6745d[0;39m
[2024-07-30 12:54:10 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-30 12:54:10 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-07-30 12:54:10 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-07-30 12:54:10 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-07-30 12:54:10 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-07-30 12:54:10 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:11 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       drop 
       foreign key if exists FKcy2ouh4endkbaq0ocwqemqx1q
 {executed in 18 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKg554m92domilyknftfwsxeq17
 {executed in 20 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       drop 
       foreign key if exists FKc0e5dirjftdt7d718pc7jqm2
 {executed in 22 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKfk4yfdqi2gb88pun10xr0a9b8
 {executed in 19 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       drop 
       foreign key if exists FKbn7bebdjw066rbedub57qda3b
 {executed in 20 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       drop 
       foreign key if exists FKfv312s43a9pjn2pcn8j09nvv3
 {executed in 19 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       drop 
       foreign key if exists FKey7m0oa3tllpg49nuo8snbmn8
 {executed in 17 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK6u2fa06k0nngn9m62ubv0hyq2
 {executed in 14 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       drop 
       foreign key if exists FK859n2jvi8ivhui0rl0esws6o
 {executed in 18 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FK602cn3xgrgd5ch8lcdanddqv5
 {executed in 23 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       drop 
       foreign key if exists FKi651t243ra5g8sdcsvracrp84
 {executed in 17 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed
 {executed in 9 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_comment
 {executed in 8 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_favorite
 {executed in 8 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists feed_pics
 {executed in 7 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists main_code
 {executed in 9 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists sub_code
 {executed in 7 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user
 {executed in 9 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_role
 {executed in 7 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists user_follow
 {executed in 9 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed (
        created_at datetime(6) not null,
        feed_id bigint not null auto_increment,
        updated_at datetime(6) not null,
        writer_id bigint not null,
        location varchar(30),
        contents varchar(1000),
        primary key (feed_id)
    ) engine=InnoDB
 {executed in 7 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_comment (
        created_at datetime(6) not null,
        feed_comment_id bigint not null auto_increment,
        feed_id bigint not null,
        updated_at datetime(6) not null,
        user_id bigint not null,
        comment varchar(1000) not null,
        primary key (feed_comment_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_favorite (
        created_at datetime(6) not null,
        feed_favorite_id bigint not null auto_increment,
        feed_id bigint not null,
        user_id bigint not null,
        primary key (feed_favorite_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table feed_pics (
        created_at datetime(6) not null,
        feed_id bigint not null,
        feed_pic_id bigint not null auto_increment,
        pic varchar(70) not null,
        primary key (feed_pic_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table main_code (
        main_code_id bigint not null auto_increment,
        cd_name varchar(20) not null,
        description varchar(30),
        primary key (main_code_id)
    ) engine=InnoDB
 {executed in 9 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table sub_code (
        main_code_id bigint not null,
        sub_code_id bigint not null auto_increment,
        description varchar(30),
        val varchar(30) not null,
        primary key (sub_code_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user (
        provider_type tinyint default 4 not null check (provider_type between 0 and 4),
        created_at datetime(6) not null,
        updated_at datetime(6) not null,
        user_id bigint not null auto_increment,
        nm varchar(50) not null,
        uid varchar(50) not null,
        upw varchar(100) not null,
        pic varchar(200),
        primary key (user_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_role (
        role_cd bigint not null,
        user_id bigint not null,
        user_roles_id bigint not null auto_increment,
        role varchar(20) not null,
        primary key (user_roles_id)
    ) engine=InnoDB
 {executed in 8 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table user_follow (
        created_at datetime(6) not null,
        from_user_id bigint,
        to_user_id bigint,
        user_follow_id bigint not null auto_increment,
        primary key (user_follow_id)
    ) engine=InnoDB
 {executed in 10 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint UKpupdpvvkcr9e90altsoq9hlwg unique (feed_id, user_id)
 {executed in 17 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint UKjtwox9abqvpnip8aphq4we3vq unique (main_code_id, val)
 {executed in 16 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user 
       add constraint UKb87p6qocmykrbhvhbft82x423 unique (provider_type, uid)
 {executed in 17 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint UK4os7jqau8i155lej5drb6trt2 unique (user_id, role_cd)
 {executed in 16 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint UKrnkub2b0tqeh5asgubt9mbvt8 unique (from_user_id, to_user_id)
 {executed in 15 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed 
       add constraint FKcy2ouh4endkbaq0ocwqemqx1q 
       foreign key (writer_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKg554m92domilyknftfwsxeq17 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_comment 
       add constraint FKc0e5dirjftdt7d718pc7jqm2 
       foreign key (user_id) 
       references user (user_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKfk4yfdqi2gb88pun10xr0a9b8 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 22 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_favorite 
       add constraint FKbn7bebdjw066rbedub57qda3b 
       foreign key (user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists feed_pics 
       add constraint FKfv312s43a9pjn2pcn8j09nvv3 
       foreign key (feed_id) 
       references feed (feed_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists sub_code 
       add constraint FKey7m0oa3tllpg49nuo8snbmn8 
       foreign key (main_code_id) 
       references main_code (main_code_id)
 {executed in 29 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK6u2fa06k0nngn9m62ubv0hyq2 
       foreign key (role_cd) 
       references sub_code (sub_code_id)
 {executed in 27 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_role 
       add constraint FK859n2jvi8ivhui0rl0esws6o 
       foreign key (user_id) 
       references user (user_id)
 {executed in 24 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FK602cn3xgrgd5ch8lcdanddqv5 
       foreign key (from_user_id) 
       references user (user_id)
 {executed in 21 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists user_follow 
       add constraint FKi651t243ra5g8sdcsvracrp84 
       foreign key (to_user_id) 
       references user (user_id)
 {executed in 25 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `main_code` (`main_code_id`, `cd_name`, `description`) VALUES (1, 'role', '권한')
 {executed in 1 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `sub_code` (`sub_code_id`, `main_code_id`, `val`, `description`) VALUES (1, 1, 'ROLE_USER', '일반 사용자'), (2, 1, 'ROLE_ADMIN', '관리자')
 {executed in 3 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user` (`user_id`,`provider_type`, `uid`, `upw`, `nm`, `pic`, `created_at`, `updated_at`) VALUES(1,4, 'mic1', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '일반사용자', 'a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg', '2024-05-3 18:00:47', '2024-07-15 10:14:51') ,(2,4, 'mic2', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '관리자', NULL, '2024-05-03 18:00:55', '2024-07-15 10:14:41'),(3,4, 'mic3', '$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm', '사용자_관리자', NULL, '2024-07-15 10:10:42', '2024-07-15 10:14:42')
 {executed in 2 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `user_role` (`user_id`, `role_cd`, `role`) VALUES(1, 1, 'ROLE_USER'), (2, 2, 'ROLE_ADMIN'), (3, 1, 'ROLE_USER'), (3, 2, 'ROLE_ADMIN')
 {executed in 2 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed` (`created_at`, `updated_at`, `writer_id`, `location`, `contents`) VALUES ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 1, 'asdf', 'asdf'), ('2024-07-25 11:16:37.000000', '2024-07-25 11:16:37.000000', 2, 'asdf', 'asdf')
 {executed in 3 msec}[0;39m
[2024-07-30 12:54:11 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. INSERT INTO `feed_comment` (`created_at`, `feed_id`, `updated_at`, `user_id`, `comment`) VALUES ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 1, '1번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '2번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '3번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '4번째'), ('2024-07-30 10:10:21.000000', 1, '2024-07-30 10:10:20.000000', 2, '5번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '1번째'), ('2024-07-30 10:10:21.000000', 2, '2024-07-30 10:10:20.000000', 3, '2번째')
 {executed in 2 msec}[0;39m
[2024-07-30 12:54:11 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:54:12 [32mINFO [0;39m restartedMain] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [36mHibernate is in classpath; If applicable, HQL parser will be used.[0;39m
[2024-07-30 12:54:12 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-07-30 12:54:12 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b708506, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5157b4e6, org.springframework.security.web.context.SecurityContextHolderFilter@b13d92d, org.springframework.security.web.header.HeaderWriterFilter@2578554a, org.springframework.web.filter.CorsFilter@3d12f623, org.springframework.security.web.authentication.logout.LogoutFilter@37162ac8, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@67632f66, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5986fa0d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@15ebba4b, com.green.greengram.security.jwt.JwtAuthenticationFilter@c7f7b8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3efd337c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@589dc081, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8bd1d62, org.springframework.security.web.session.SessionManagementFilter@378b9ca2, org.springframework.security.web.access.ExceptionTranslationFilter@5f30184e, org.springframework.security.web.access.intercept.AuthorizationFilter@717e5581][0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 5.822 seconds (process running for 6.236)[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.d34b46c8.js[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:54:13 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 3 msec}[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|feed_id |user_id |nm    |pic                                      |created_at                 |contents |location |isfav |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
|2       |2       |관리자   |null                                     |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|1       |1       |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-07-25 11:16:37.000000 |asdf     |asdf     |0     |
|--------|--------|------|-----------------------------------------|---------------------------|---------|---------|------|
[0;39m
[2024-07-30 12:54:13 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 2 msec}[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:54:13 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|--------|----|--------|
|feed_comment_id |comment |created_at                 |nm      |pic |user_id |
|----------------|--------|---------------------------|--------|----|--------|
|6               |1번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|7               |2번째     |2024-07-30 10:10:21.000000 |사용자_관리자 |null|3       |
|----------------|--------|---------------------------|--------|----|--------|
[0;39m
[2024-07-30 12:54:13 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-07-30 12:54:13 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at                 |nm    |pic                                      |user_id |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
|1               |1번째     |2024-07-30 10:10:21.000000 |일반사용자 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |1       |
|2               |2번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|3               |3번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|4               |4번째     |2024-07-30 10:10:21.000000 |관리자   |null                                     |2       |
|----------------|--------|---------------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:13 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:54:13 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjIzMTEwNTAsImV4cCI6MTcyMjMxMjg1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.ZqM7ra-xgPiMMaqtIndt93IyRLa_kHjnhkr9xOnIi1B52F7C_WIdChmbSZbuXhQg3CuZ6Oumq_JmlythVDdvcw[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36muser: User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg)[0;39m
[2024-07-30 12:54:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:54:18.767','asdf','07/30/2024 12:54:18.767',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed (contents,created_at,location,updated_at,writer_id) values ('asdf','07/30/2024 12:54:18.767','asdf','07/30/2024 12:54:18.767',1)
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|3         |
|----------|
[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36mfeed: Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36mSaved file to: feed/3/0d4ca2f8-aa73-4c07-9bac-5cbdb613eab8.png[0;39m
[2024-07-30 12:54:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:54:18.784',3,'0d4ca2f8-aa73-4c07-9bac-5cbdb613eab8.png')
 {executed in 1 msec}[0;39m
[2024-07-30 12:54:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:54:18.784',3,'0d4ca2f8-aa73-4c07-9bac-5cbdb613eab8.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1         |
|----------|
[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36mSaved file to: feed/3/b0c3c98a-df55-431d-a8c8-7233bf8b5bd6.png[0;39m
[2024-07-30 12:54:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:54:18.787',3,'b0c3c98a-df55-431d-a8c8-7233bf8b5bd6.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_pics (created_at,feed_id,pic) values ('07/30/2024 12:54:18.787',3,'b0c3c98a-df55-431d-a8c8-7233bf8b5bd6.png')
 {executed in 0 msec}[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|2         |
|----------|
[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.feed.FeedServiceImpl] [36mfeedPics: [FeedPics(feedPicId=1, pic=0d4ca2f8-aa73-4c07-9bac-5cbdb613eab8.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf)), FeedPics(feedPicId=2, pic=b0c3c98a-df55-431d-a8c8-7233bf8b5bd6.png, feed=Feed(feedId=3, user=User(userId=1, providerType=LOCAL, uid=mic1, upw=$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm, nm=일반사용자, pic=a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg), contents=asdf, location=asdf))][0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/0d4ca2f8-aa73-4c07-9bac-5cbdb613eab8.png[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/3/b0c3c98a-df55-431d-a8c8-7233bf8b5bd6.png[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:18 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-30 12:54:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-30 12:54:27 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-07-30 12:54:27 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-30 12:54:27 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
