[2024-07-15 10:09:47 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-15 10:09:47 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.11 with PID 10116 (D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramSecurity)[0;39m
[2024-07-15 10:09:47 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-15 10:09:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-15 10:09:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1423 ms[0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@707be376[0;39m
[2024-07-15 10:09:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-15 10:09:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-15 10:09:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-15 10:09:49 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ab1fb07, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77aa7e6c, org.springframework.security.web.context.SecurityContextHolderFilter@28f7e09e, org.springframework.security.web.header.HeaderWriterFilter@7edb22b4, org.springframework.web.filter.CorsFilter@37104961, org.springframework.security.web.authentication.logout.LogoutFilter@2596f61a, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@7e594abd, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4e276862, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@2db21297, com.green.greengram.security.jwt.JwtAuthenticationFilter@59103de7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bb3fbde, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b0b1f41, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7daa84e0, org.springframework.security.web.session.SessionManagementFilter@51f5e0e1, org.springframework.security.web.access.ExceptionTranslationFilter@c225e78, org.springframework.security.web.access.intercept.AuthorizationFilter@1ed92ab1][0;39m
[2024-07-15 10:09:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-15 10:09:49 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 10:09:49 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-15 10:09:49 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 3.073 seconds (process running for 3.6)[0;39m
[2024-07-15 10:09:50 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-15 10:09:50 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-15 10:09:50 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-15 10:09:57 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-15 10:10:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA3NTAzODUsImV4cCI6MTcyMDc1MjE4NSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjIyLFwicm9sZVwiOlwiUk9MRV9VU0VSXCJ9In0.jBxhuK8PzaEL0uFpRi8pyi3ngheVCAqYQGH-ABkUIHBBPSdDtDxwxWG4c67_KlKde0hpj9VCnYa68fz8QCh5Mw[0;39m
[2024-07-15 10:10:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-15 10:10:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA3NTAzODUsImV4cCI6MTcyMDc1MjE4NSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjIyLFwicm9sZVwiOlwiUk9MRV9VU0VSXCJ9In0.jBxhuK8PzaEL0uFpRi8pyi3ngheVCAqYQGH-ABkUIHBBPSdDtDxwxWG4c67_KlKde0hpj9VCnYa68fz8QCh5Mw[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic, upw=1212, providerType=null)[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic, upw=1212, providerType=null)[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT user_id as userId
                , uid
                , upw
                , nm
                , pic
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM user
        WHERE uid = 'mic'
        AND provider_type = 'LOCAL'
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
                , uid
                , upw
                , nm
                , pic
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM user
        WHERE uid = 'mic'
        AND provider_type = 'LOCAL'
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|-----------|
|user_id |uid |upw                                                          |nm  |pic                                      |created_at          |updated_at |
|--------|----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|-----------|
|9       |mic |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |홍길동 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-05-03 18:00:47 |null       |
|--------|----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|-----------|
|user_id |uid |upw                                                          |nm  |pic                                      |created_at          |updated_at |
|--------|----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|-----------|
|9       |mic |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |홍길동 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-05-03 18:00:47 |null       |
|--------|----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/9/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMDU4MDEsImV4cCI6MTcyMTAwNzYwMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjksXCJyb2xlXCI6XCJST0xFX1VTRVJcIn0ifQ.QpzvTp9nmY05juU4viYypgiipnmm9ou3HahKnc5RQihHZYBWMSzOb7waqlhGAqIqu3b3etB8uSwFm6zwwcScdw[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 9

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|feed_id |user_id |nm    |pic                                       |created_at          |contents                           |location |isfav |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|46      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 11:05:47 |dfgh                               |dfgh     |0     |
|45      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:49:59 |asdasd                             |asdasd   |0     |
|44      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:05:12 |asd                                |asdasd   |0     |
|43      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-16 12:47:44 |ㅁㅁ                                 |ㅁㅁ       |0     |
|38      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-14 13:25:45 |a                                  |a        |0     |
|37      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-13 16:42:50 |a                                  |a        |0     |
|32      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-10 12:11:37 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|30      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 18:10:10 |ㅁㅁ                                 |ㅁㅁ       |0     |
|29      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 17:30:52 |히히                                 |대구시      |0     |
|28      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 15:04:51 |a                                  |a        |0     |
|27      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:46 |ㅁㄴㅇㄹ                               |ㄻㄴㅇ      |0     |
|26      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:20 |그린                                 |컴퍼       |0     |
|25      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:45:10 |aa                                 |aa       |0     |
|24      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:43:30 |aa                                 |aa       |0     |
|19      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:53:53 |보보보..봇치는 씹덕이 아니라고 생각해요             |도쿄       |0     |
|18      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:52:47 |봇치 글쓰는 애 오타쿠임 ㅋㅋ                   |대구시      |0     |
|17      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:51:10 |봇치더락 총집편 2024년 6월 7일 개봉
많은사랑 부탁드려요 |도쿄       |0     |
|16      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:51:03 |ㅋㅋ                                 |ㅋㅋ       |0     |
|15      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:50:07 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|14      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:48:33 |온세상이 봇치다..                         |도쿄       |0     |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 46
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5df4262e-0736-4f21-b576-089f2d66fb21.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 46
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 45
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ad66821-55a8-4207-8cd4-85ccb91187ea.png |
|398e1637-3af5-49e3-9154-3d150a99cd26.png |
|6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png |
|034cd1ee-574f-48a3-bab5-92d4ad7929f4.png |
|f329092f-25ef-41ef-8da5-34e7936c4fce.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 45
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 44
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56de0dbd-2ee7-4329-a072-4034d47557f8.ico |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 44
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 43
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|692ff94c-5302-4ea0-b6a4-bd9233e825ff.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 43
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|101             |gd      |2024-05-21 10:51:23 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|103             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|104             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|105             |ㅎㅇ      |2024-05-21 10:51:34 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1655528-d003-4317-971f-abdc247abed7.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|102             |ㅎㅇ      |2024-05-21 10:51:26 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cac06d31-20af-4f92-a488-f8923e6c68ad.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm  |pic                                      |user_id |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|106             |asdf    |2024-05-23 10:49:21 |홍길동 |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png |13      |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0de826a0-acca-471f-b81e-e91b523be8c7.png |
|bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg |
|0d76ced2-2a28-473b-8c2e-1be74437daec.jpg |
|724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg |
|70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dba4d116-228d-440d-b508-573688d18c00.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0077e40f-3fe2-495f-8476-921f535f0064.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cc7898b-5f7a-4630-b422-85aa3b8ac450.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 27
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp |
|------------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 26
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e44efaf1-7213-48ea-9827-569c95b0a94e.webp |
|------------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 25
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|1606507d-6fda-4208-81c6-907bb081f9d3.webp |
|------------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 24
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp |
|------------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 19
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00051f19-457d-48f7-8cf1-661bcdde01fd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 18
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68d3f9d0-ac64-4278-84e7-2339d4947efd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6b5753dc-bf33-4d70-81be-5a45942195fb.png |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58425896-1f48-4825-89c2-a981554eec39.webp |
|------------------------------------------|
[0;39m
[2024-07-15 10:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/46/5df4262e-0736-4f21-b576-089f2d66fb21.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/8/b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/9ad66821-55a8-4207-8cd4-85ccb91187ea.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/398e1637-3af5-49e3-9154-3d150a99cd26.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/034cd1ee-574f-48a3-bab5-92d4ad7929f4.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/f329092f-25ef-41ef-8da5-34e7936c4fce.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/44/56de0dbd-2ee7-4329-a072-4034d47557f8.ico[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/43/692ff94c-5302-4ea0-b6a4-bd9233e825ff.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/18/5bbd3848-326b-42e4-8746-ee160901df02.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/38/b1655528-d003-4317-971f-abdc247abed7.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/13/70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/37/cac06d31-20af-4f92-a488-f8923e6c68ad.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0de826a0-acca-471f-b81e-e91b523be8c7.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0d76ced2-2a28-473b-8c2e-1be74437daec.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/30/a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/28/0077e40f-3fe2-495f-8476-921f535f0064.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/29/dba4d116-228d-440d-b508-573688d18c00.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/27/4cc7898b-5f7a-4630-b422-85aa3b8ac450.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/26/40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/25/e44efaf1-7213-48ea-9827-569c95b0a94e.webp[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/24/1606507d-6fda-4208-81c6-907bb081f9d3.webp[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/12/1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/19/a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/17/68d3f9d0-ac64-4278-84e7-2339d4947efd.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/18/00051f19-457d-48f7-8cf1-661bcdde01fd.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/16/6b5753dc-bf33-4d70-81be-5a45942195fb.png[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/15/2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/14/58425896-1f48-4825-89c2-a981554eec39.webp[0;39m
[2024-07-15 10:10:01 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 10:48:31 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-15 10:48:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.11 with PID 12860 (D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramSecurity)[0;39m
[2024-07-15 10:48:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-15 10:48:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-15 10:48:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1220 ms[0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5322f530[0;39m
[2024-07-15 10:48:32 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@46dd43f4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@196515b, org.springframework.security.web.context.SecurityContextHolderFilter@2abf1c1f, org.springframework.security.web.header.HeaderWriterFilter@35db41b1, org.springframework.web.filter.CorsFilter@1795c529, org.springframework.security.web.authentication.logout.LogoutFilter@2d4b7ab6, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@60e90055, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@27be416d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1bbb86e2, com.green.greengram.security.jwt.JwtAuthenticationFilter@6578a0ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41e7f076, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2623efc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2709a9e8, org.springframework.security.web.session.SessionManagementFilter@51bbc727, org.springframework.security.web.access.ExceptionTranslationFilter@3f25bb5c, org.springframework.security.web.access.intercept.AuthorizationFilter@458d787b][0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.608 seconds (process running for 3.003)[0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-15 10:48:33 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-07-15 10:48:35 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-15 10:48:35 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-15 12:32:09 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-15 12:32:09 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.11 with PID 13268 (D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramSecurity)[0;39m
[2024-07-15 12:32:09 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-15 12:32:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-15 12:32:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-15 12:32:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-15 12:32:10 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 12:32:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-15 12:32:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-15 12:32:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-15 12:32:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1212 ms[0;39m
[2024-07-15 12:32:10 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5183bc87[0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7093cae3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4266f228, org.springframework.security.web.context.SecurityContextHolderFilter@b6bbfed, org.springframework.security.web.header.HeaderWriterFilter@2a51d873, org.springframework.web.filter.CorsFilter@683e4d23, org.springframework.security.web.authentication.logout.LogoutFilter@7eb6dc00, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@596d2e12, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@9324724, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@474eb128, com.green.greengram.security.jwt.JwtAuthenticationFilter@1d290dd1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74af133, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@676e9cf4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68bd1bf6, org.springframework.security.web.session.SessionManagementFilter@5e341fcf, org.springframework.security.web.access.ExceptionTranslationFilter@528a5c11, org.springframework.security.web.access.intercept.AuthorizationFilter@40ee9eec][0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-07-15 12:32:11 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarted GreengramApplication in 2.63 seconds (process running for 3.018)[0;39m
[2024-07-15 12:32:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-07-15 12:32:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-07-15 12:32:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.164] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 13 ms[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMDU4MDEsImV4cCI6MTcyMTAwNzYwMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjksXCJyb2xlXCI6XCJST0xFX1VTRVJcIn0ifQ.QpzvTp9nmY05juU4viYypgiipnmm9ou3HahKnc5RQihHZYBWMSzOb7waqlhGAqIqu3b3etB8uSwFm6zwwcScdw[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic1, upw=1212, providerType=null)[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId
                , A.uid AS uid
                , A.upw AS upw
                , A.nm AS nm
                , A.pic AS pic
                , A.created_at AS createdAt
                , A.updated_at AS updatedAt
                , B.role AS role
        FROM user A
        LEFT JOIN user_roles B
        ON A.user_id = B.user_id
        WHERE A.uid = 'mic1'
        AND A.provider_type = 'LOCAL'
 {executed in 2 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|--------------------|----------|
|user_id |uid  |upw                                                          |nm  |pic                                      |created_at          |updated_at          |role      |
|--------|-----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|--------------------|----------|
|1       |mic1 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |홍길동 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-05-03 18:00:47 |2024-07-15 10:14:51 |ROLE_USER |
|--------|-----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|--------------------|----------|
[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQzNDksImV4cCI6MTcyMTAxNjE0OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.miHveVh9G2naBZvytk_-xlZ0L15zOb_lEpZzb_PZ2cji_y1ci2YjUhp18oMJc-vZJ_niEvDqS0iStDd93qZGrQ[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [33mWARN [0;39m http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|feed_id |user_id |nm    |pic                                       |created_at          |contents                           |location |isfav |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|46      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 11:05:47 |dfgh                               |dfgh     |0     |
|45      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:49:59 |asdasd                             |asdasd   |0     |
|44      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:05:12 |asd                                |asdasd   |0     |
|43      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-16 12:47:44 |ㅁㅁ                                 |ㅁㅁ       |0     |
|38      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-14 13:25:45 |a                                  |a        |0     |
|37      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-13 16:42:50 |a                                  |a        |0     |
|32      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-10 12:11:37 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|30      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 18:10:10 |ㅁㅁ                                 |ㅁㅁ       |0     |
|29      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 17:30:52 |히히                                 |대구시      |0     |
|28      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 15:04:51 |a                                  |a        |0     |
|27      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:46 |ㅁㄴㅇㄹ                               |ㄻㄴㅇ      |0     |
|26      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:20 |그린                                 |컴퍼       |0     |
|25      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:45:10 |aa                                 |aa       |0     |
|24      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:43:30 |aa                                 |aa       |0     |
|19      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:53:53 |보보보..봇치는 씹덕이 아니라고 생각해요             |도쿄       |0     |
|18      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:52:47 |봇치 글쓰는 애 오타쿠임 ㅋㅋ                   |대구시      |0     |
|17      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:51:10 |봇치더락 총집편 2024년 6월 7일 개봉
많은사랑 부탁드려요 |도쿄       |0     |
|16      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:51:03 |ㅋㅋ                                 |ㅋㅋ       |0     |
|15      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:50:07 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|14      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:48:33 |온세상이 봇치다..                         |도쿄       |0     |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 46
 {executed in 1 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5df4262e-0736-4f21-b576-089f2d66fb21.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 46
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 45
 {executed in 1 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ad66821-55a8-4207-8cd4-85ccb91187ea.png |
|398e1637-3af5-49e3-9154-3d150a99cd26.png |
|6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png |
|034cd1ee-574f-48a3-bab5-92d4ad7929f4.png |
|f329092f-25ef-41ef-8da5-34e7936c4fce.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 45
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 44
 {executed in 2 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56de0dbd-2ee7-4329-a072-4034d47557f8.ico |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 44
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 43
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|692ff94c-5302-4ea0-b6a4-bd9233e825ff.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 43
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|101             |gd      |2024-05-21 10:51:23 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|103             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|104             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|105             |ㅎㅇ      |2024-05-21 10:51:34 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1655528-d003-4317-971f-abdc247abed7.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|102             |ㅎㅇ      |2024-05-21 10:51:26 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cac06d31-20af-4f92-a488-f8923e6c68ad.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm  |pic                                      |user_id |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|106             |asdf    |2024-05-23 10:49:21 |홍길동 |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png |13      |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0de826a0-acca-471f-b81e-e91b523be8c7.png |
|bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg |
|0d76ced2-2a28-473b-8c2e-1be74437daec.jpg |
|724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg |
|70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dba4d116-228d-440d-b508-573688d18c00.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0077e40f-3fe2-495f-8476-921f535f0064.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cc7898b-5f7a-4630-b422-85aa3b8ac450.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 27
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 26
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e44efaf1-7213-48ea-9827-569c95b0a94e.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 25
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|1606507d-6fda-4208-81c6-907bb081f9d3.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 24
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 19
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 1 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00051f19-457d-48f7-8cf1-661bcdde01fd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 18
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68d3f9d0-ac64-4278-84e7-2339d4947efd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6b5753dc-bf33-4d70-81be-5a45942195fb.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58425896-1f48-4825-89c2-a981554eec39.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:32:29 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/8/b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/46/5df4262e-0736-4f21-b576-089f2d66fb21.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/9ad66821-55a8-4207-8cd4-85ccb91187ea.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/398e1637-3af5-49e3-9154-3d150a99cd26.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/034cd1ee-574f-48a3-bab5-92d4ad7929f4.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/44/56de0dbd-2ee7-4329-a072-4034d47557f8.ico[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/f329092f-25ef-41ef-8da5-34e7936c4fce.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/18/5bbd3848-326b-42e4-8746-ee160901df02.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/43/692ff94c-5302-4ea0-b6a4-bd9233e825ff.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/38/b1655528-d003-4317-971f-abdc247abed7.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0de826a0-acca-471f-b81e-e91b523be8c7.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/13/70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/37/cac06d31-20af-4f92-a488-f8923e6c68ad.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0d76ced2-2a28-473b-8c2e-1be74437daec.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/30/a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/28/0077e40f-3fe2-495f-8476-921f535f0064.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/29/dba4d116-228d-440d-b508-573688d18c00.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/27/4cc7898b-5f7a-4630-b422-85aa3b8ac450.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/26/40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/25/e44efaf1-7213-48ea-9827-569c95b0a94e.webp[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/24/1606507d-6fda-4208-81c6-907bb081f9d3.webp[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/12/1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/19/a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/18/00051f19-457d-48f7-8cf1-661bcdde01fd.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/17/68d3f9d0-ac64-4278-84e7-2339d4947efd.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/16/6b5753dc-bf33-4d70-81be-5a45942195fb.png[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/15/2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/14/58425896-1f48-4825-89c2-a981554eec39.webp[0;39m
[2024-07-15 12:32:29 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQzNDksImV4cCI6MTcyMTAxNjE0OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.miHveVh9G2naBZvytk_-xlZ0L15zOb_lEpZzb_PZ2cji_y1ci2YjUhp18oMJc-vZJ_niEvDqS0iStDd93qZGrQ[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic2, upw=1212, providerType=null)[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId
                , A.uid AS uid
                , A.upw AS upw
                , A.nm AS nm
                , A.pic AS pic
                , A.created_at AS createdAt
                , A.updated_at AS updatedAt
                , B.role AS role
        FROM user A
        LEFT JOIN user_roles B
        ON A.user_id = B.user_id
        WHERE A.uid = 'mic2'
        AND A.provider_type = 'LOCAL'
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm  |pic |created_at          |updated_at          |role       |
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
|2       |mic2 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |홍길동 |null|2024-05-03 18:00:55 |2024-07-15 10:14:41 |ROLE_ADMIN |
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQzNDksImV4cCI6MTcyMTAxNjE0OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.miHveVh9G2naBZvytk_-xlZ0L15zOb_lEpZzb_PZ2cji_y1ci2YjUhp18oMJc-vZJ_niEvDqS0iStDd93qZGrQ[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic2, upw=1212, providerType=null)[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId
                , A.uid AS uid
                , A.upw AS upw
                , A.nm AS nm
                , A.pic AS pic
                , A.created_at AS createdAt
                , A.updated_at AS updatedAt
                , B.role AS role
        FROM user A
        LEFT JOIN user_roles B
        ON A.user_id = B.user_id
        WHERE A.uid = 'mic2'
        AND A.provider_type = 'LOCAL'
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm  |pic |created_at          |updated_at          |role       |
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
|2       |mic2 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |홍길동 |null|2024-05-03 18:00:55 |2024-07-15 10:14:41 |ROLE_ADMIN |
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQzODAsImV4cCI6MTcyMTAxNjE4MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjIsXCJyb2xlc1wiOltcIlJPTEVfQURNSU5cIl19In0.OVV5WhCKBaKI-dtmeq0e46oFxkZNC-lx3evx5bt_CLMfsbh9WwLTZ9H2rskBei6-qf3Uo9g1mLv3LmsrDr3WlQ[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|feed_id |user_id |nm    |pic                                       |created_at          |contents                           |location |isfav |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|46      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 11:05:47 |dfgh                               |dfgh     |0     |
|45      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:49:59 |asdasd                             |asdasd   |0     |
|44      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:05:12 |asd                                |asdasd   |0     |
|43      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-16 12:47:44 |ㅁㅁ                                 |ㅁㅁ       |0     |
|38      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-14 13:25:45 |a                                  |a        |0     |
|37      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-13 16:42:50 |a                                  |a        |0     |
|32      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-10 12:11:37 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|30      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 18:10:10 |ㅁㅁ                                 |ㅁㅁ       |0     |
|29      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 17:30:52 |히히                                 |대구시      |0     |
|28      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 15:04:51 |a                                  |a        |0     |
|27      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:46 |ㅁㄴㅇㄹ                               |ㄻㄴㅇ      |0     |
|26      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:20 |그린                                 |컴퍼       |0     |
|25      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:45:10 |aa                                 |aa       |0     |
|24      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:43:30 |aa                                 |aa       |0     |
|19      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:53:53 |보보보..봇치는 씹덕이 아니라고 생각해요             |도쿄       |0     |
|18      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:52:47 |봇치 글쓰는 애 오타쿠임 ㅋㅋ                   |대구시      |0     |
|17      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:51:10 |봇치더락 총집편 2024년 6월 7일 개봉
많은사랑 부탁드려요 |도쿄       |0     |
|16      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:51:03 |ㅋㅋ                                 |ㅋㅋ       |0     |
|15      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:50:07 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|14      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:48:33 |온세상이 봇치다..                         |도쿄       |0     |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 46
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5df4262e-0736-4f21-b576-089f2d66fb21.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 46
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 45
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ad66821-55a8-4207-8cd4-85ccb91187ea.png |
|398e1637-3af5-49e3-9154-3d150a99cd26.png |
|6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png |
|034cd1ee-574f-48a3-bab5-92d4ad7929f4.png |
|f329092f-25ef-41ef-8da5-34e7936c4fce.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 45
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 44
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56de0dbd-2ee7-4329-a072-4034d47557f8.ico |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 44
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 43
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|692ff94c-5302-4ea0-b6a4-bd9233e825ff.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 43
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|101             |gd      |2024-05-21 10:51:23 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|103             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|104             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|105             |ㅎㅇ      |2024-05-21 10:51:34 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1655528-d003-4317-971f-abdc247abed7.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|102             |ㅎㅇ      |2024-05-21 10:51:26 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cac06d31-20af-4f92-a488-f8923e6c68ad.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm  |pic                                      |user_id |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|106             |asdf    |2024-05-23 10:49:21 |홍길동 |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png |13      |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0de826a0-acca-471f-b81e-e91b523be8c7.png |
|bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg |
|0d76ced2-2a28-473b-8c2e-1be74437daec.jpg |
|724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg |
|70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dba4d116-228d-440d-b508-573688d18c00.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0077e40f-3fe2-495f-8476-921f535f0064.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cc7898b-5f7a-4630-b422-85aa3b8ac450.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 27
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 26
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e44efaf1-7213-48ea-9827-569c95b0a94e.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 25
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|1606507d-6fda-4208-81c6-907bb081f9d3.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 24
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 19
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00051f19-457d-48f7-8cf1-661bcdde01fd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 18
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68d3f9d0-ac64-4278-84e7-2339d4947efd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6b5753dc-bf33-4d70-81be-5a45942195fb.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58425896-1f48-4825-89c2-a981554eec39.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/8/b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/46/5df4262e-0736-4f21-b576-089f2d66fb21.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/9ad66821-55a8-4207-8cd4-85ccb91187ea.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/398e1637-3af5-49e3-9154-3d150a99cd26.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/034cd1ee-574f-48a3-bab5-92d4ad7929f4.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/f329092f-25ef-41ef-8da5-34e7936c4fce.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/44/56de0dbd-2ee7-4329-a072-4034d47557f8.ico[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/18/5bbd3848-326b-42e4-8746-ee160901df02.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/43/692ff94c-5302-4ea0-b6a4-bd9233e825ff.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/38/b1655528-d003-4317-971f-abdc247abed7.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/13/70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/37/cac06d31-20af-4f92-a488-f8923e6c68ad.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0de826a0-acca-471f-b81e-e91b523be8c7.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0d76ced2-2a28-473b-8c2e-1be74437daec.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/30/a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/29/dba4d116-228d-440d-b508-573688d18c00.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/28/0077e40f-3fe2-495f-8476-921f535f0064.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/27/4cc7898b-5f7a-4630-b422-85aa3b8ac450.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/26/40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/25/e44efaf1-7213-48ea-9827-569c95b0a94e.webp[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/24/1606507d-6fda-4208-81c6-907bb081f9d3.webp[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/12/1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/19/a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/18/00051f19-457d-48f7-8cf1-661bcdde01fd.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/17/68d3f9d0-ac64-4278-84e7-2339d4947efd.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/16/6b5753dc-bf33-4d70-81be-5a45942195fb.png[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/15/2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/14/58425896-1f48-4825-89c2-a981554eec39.webp[0;39m
[2024-07-15 12:33:00 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQzODAsImV4cCI6MTcyMTAxNjE4MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjIsXCJyb2xlc1wiOltcIlJPTEVfQURNSU5cIl19In0.OVV5WhCKBaKI-dtmeq0e46oFxkZNC-lx3evx5bt_CLMfsbh9WwLTZ9H2rskBei6-qf3Uo9g1mLv3LmsrDr3WlQ[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic3, upw=1212, providerType=null)[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId
                , A.uid AS uid
                , A.upw AS upw
                , A.nm AS nm
                , A.pic AS pic
                , A.created_at AS createdAt
                , A.updated_at AS updatedAt
                , B.role AS role
        FROM user A
        LEFT JOIN user_roles B
        ON A.user_id = B.user_id
        WHERE A.uid = 'mic3'
        AND A.provider_type = 'LOCAL'
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm  |pic |created_at          |updated_at          |role       |
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
|3       |mic3 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |강길동 |null|2024-07-15 10:10:42 |2024-07-15 10:14:42 |ROLE_USER  |
|3       |mic3 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |강길동 |null|2024-07-15 10:10:42 |2024-07-15 10:14:42 |ROLE_ADMIN |
|--------|-----|-------------------------------------------------------------|----|----|--------------------|--------------------|-----------|
[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQ0MDIsImV4cCI6MTcyMTAxNjIwMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.NtwDqIC586SHeWE70JMwwhJTVL0J68D97-wviWx-lOzPywiXnEWVpllRuoj1WmbFjmEfMt-KKuz369o0F5L_tg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|feed_id |user_id |nm    |pic                                       |created_at          |contents                           |location |isfav |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|46      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 11:05:47 |dfgh                               |dfgh     |0     |
|45      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:49:59 |asdasd                             |asdasd   |0     |
|44      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:05:12 |asd                                |asdasd   |0     |
|43      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-16 12:47:44 |ㅁㅁ                                 |ㅁㅁ       |0     |
|38      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-14 13:25:45 |a                                  |a        |0     |
|37      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-13 16:42:50 |a                                  |a        |0     |
|32      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-10 12:11:37 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|30      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 18:10:10 |ㅁㅁ                                 |ㅁㅁ       |0     |
|29      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 17:30:52 |히히                                 |대구시      |0     |
|28      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 15:04:51 |a                                  |a        |0     |
|27      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:46 |ㅁㄴㅇㄹ                               |ㄻㄴㅇ      |0     |
|26      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:20 |그린                                 |컴퍼       |0     |
|25      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:45:10 |aa                                 |aa       |0     |
|24      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:43:30 |aa                                 |aa       |0     |
|19      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:53:53 |보보보..봇치는 씹덕이 아니라고 생각해요             |도쿄       |0     |
|18      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:52:47 |봇치 글쓰는 애 오타쿠임 ㅋㅋ                   |대구시      |0     |
|17      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:51:10 |봇치더락 총집편 2024년 6월 7일 개봉
많은사랑 부탁드려요 |도쿄       |0     |
|16      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:51:03 |ㅋㅋ                                 |ㅋㅋ       |0     |
|15      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:50:07 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|14      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:48:33 |온세상이 봇치다..                         |도쿄       |0     |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 46
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5df4262e-0736-4f21-b576-089f2d66fb21.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 46
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 45
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ad66821-55a8-4207-8cd4-85ccb91187ea.png |
|398e1637-3af5-49e3-9154-3d150a99cd26.png |
|6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png |
|034cd1ee-574f-48a3-bab5-92d4ad7929f4.png |
|f329092f-25ef-41ef-8da5-34e7936c4fce.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 45
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 44
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56de0dbd-2ee7-4329-a072-4034d47557f8.ico |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 44
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 43
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|692ff94c-5302-4ea0-b6a4-bd9233e825ff.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 43
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|101             |gd      |2024-05-21 10:51:23 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|103             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|104             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|105             |ㅎㅇ      |2024-05-21 10:51:34 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1655528-d003-4317-971f-abdc247abed7.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|102             |ㅎㅇ      |2024-05-21 10:51:26 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cac06d31-20af-4f92-a488-f8923e6c68ad.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm  |pic                                      |user_id |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|106             |asdf    |2024-05-23 10:49:21 |홍길동 |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png |13      |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0de826a0-acca-471f-b81e-e91b523be8c7.png |
|bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg |
|0d76ced2-2a28-473b-8c2e-1be74437daec.jpg |
|724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg |
|70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        LIMIT 4
 {executed in 11 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dba4d116-228d-440d-b508-573688d18c00.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0077e40f-3fe2-495f-8476-921f535f0064.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cc7898b-5f7a-4630-b422-85aa3b8ac450.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 27
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 26
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e44efaf1-7213-48ea-9827-569c95b0a94e.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 25
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|1606507d-6fda-4208-81c6-907bb081f9d3.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 24
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 19
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00051f19-457d-48f7-8cf1-661bcdde01fd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 18
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68d3f9d0-ac64-4278-84e7-2339d4947efd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6b5753dc-bf33-4d70-81be-5a45942195fb.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58425896-1f48-4825-89c2-a981554eec39.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:33:22 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/8/b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/46/5df4262e-0736-4f21-b576-089f2d66fb21.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/9ad66821-55a8-4207-8cd4-85ccb91187ea.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/398e1637-3af5-49e3-9154-3d150a99cd26.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/034cd1ee-574f-48a3-bab5-92d4ad7929f4.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/f329092f-25ef-41ef-8da5-34e7936c4fce.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/44/56de0dbd-2ee7-4329-a072-4034d47557f8.ico[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/18/5bbd3848-326b-42e4-8746-ee160901df02.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/43/692ff94c-5302-4ea0-b6a4-bd9233e825ff.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/38/b1655528-d003-4317-971f-abdc247abed7.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/13/70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/37/cac06d31-20af-4f92-a488-f8923e6c68ad.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0de826a0-acca-471f-b81e-e91b523be8c7.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0d76ced2-2a28-473b-8c2e-1be74437daec.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/30/a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/29/dba4d116-228d-440d-b508-573688d18c00.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/28/0077e40f-3fe2-495f-8476-921f535f0064.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/26/40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/27/4cc7898b-5f7a-4630-b422-85aa3b8ac450.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/25/e44efaf1-7213-48ea-9827-569c95b0a94e.webp[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/24/1606507d-6fda-4208-81c6-907bb081f9d3.webp[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/12/1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/19/a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/18/00051f19-457d-48f7-8cf1-661bcdde01fd.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/17/68d3f9d0-ac64-4278-84e7-2339d4947efd.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/16/6b5753dc-bf33-4d70-81be-5a45942195fb.png[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/15/2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/14/58425896-1f48-4825-89c2-a981554eec39.webp[0;39m
[2024-07-15 12:33:22 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /feed[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /css/index.css[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/css/main.63fe0fa7.css[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /static/js/main.f9656fe8.js[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQ0MDIsImV4cCI6MTcyMTAxNjIwMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.NtwDqIC586SHeWE70JMwwhJTVL0J68D97-wviWx-lOzPywiXnEWVpllRuoj1WmbFjmEfMt-KKuz369o0F5L_tg[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|feed_id |user_id |nm    |pic                                       |created_at          |contents                           |location |isfav |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|46      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 11:05:47 |dfgh                               |dfgh     |0     |
|45      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:49:59 |asdasd                             |asdasd   |0     |
|44      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:05:12 |asd                                |asdasd   |0     |
|43      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-16 12:47:44 |ㅁㅁ                                 |ㅁㅁ       |0     |
|38      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-14 13:25:45 |a                                  |a        |0     |
|37      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-13 16:42:50 |a                                  |a        |0     |
|32      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-10 12:11:37 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|30      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 18:10:10 |ㅁㅁ                                 |ㅁㅁ       |0     |
|29      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 17:30:52 |히히                                 |대구시      |0     |
|28      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 15:04:51 |a                                  |a        |0     |
|27      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:46 |ㅁㄴㅇㄹ                               |ㄻㄴㅇ      |0     |
|26      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:20 |그린                                 |컴퍼       |0     |
|25      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:45:10 |aa                                 |aa       |0     |
|24      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:43:30 |aa                                 |aa       |0     |
|19      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:53:53 |보보보..봇치는 씹덕이 아니라고 생각해요             |도쿄       |0     |
|18      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:52:47 |봇치 글쓰는 애 오타쿠임 ㅋㅋ                   |대구시      |0     |
|17      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:51:10 |봇치더락 총집편 2024년 6월 7일 개봉
많은사랑 부탁드려요 |도쿄       |0     |
|16      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:51:03 |ㅋㅋ                                 |ㅋㅋ       |0     |
|15      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:50:07 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|14      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:48:33 |온세상이 봇치다..                         |도쿄       |0     |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 46
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5df4262e-0736-4f21-b576-089f2d66fb21.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 46
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 45
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /manifest.json[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ad66821-55a8-4207-8cd4-85ccb91187ea.png |
|398e1637-3af5-49e3-9154-3d150a99cd26.png |
|6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png |
|034cd1ee-574f-48a3-bab5-92d4ad7929f4.png |
|f329092f-25ef-41ef-8da5-34e7936c4fce.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /favicon.ico[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 45
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 44
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56de0dbd-2ee7-4329-a072-4034d47557f8.ico |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 44
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 43
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|692ff94c-5302-4ea0-b6a4-bd9233e825ff.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 43
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /logo192.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|101             |gd      |2024-05-21 10:51:23 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|103             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|104             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|105             |ㅎㅇ      |2024-05-21 10:51:34 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1655528-d003-4317-971f-abdc247abed7.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|102             |ㅎㅇ      |2024-05-21 10:51:26 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cac06d31-20af-4f92-a488-f8923e6c68ad.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm  |pic                                      |user_id |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|106             |asdf    |2024-05-23 10:49:21 |홍길동 |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png |13      |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0de826a0-acca-471f-b81e-e91b523be8c7.png |
|bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg |
|0d76ced2-2a28-473b-8c2e-1be74437daec.jpg |
|724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg |
|70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dba4d116-228d-440d-b508-573688d18c00.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0077e40f-3fe2-495f-8476-921f535f0064.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cc7898b-5f7a-4630-b422-85aa3b8ac450.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 27
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 26
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e44efaf1-7213-48ea-9827-569c95b0a94e.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 25
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|1606507d-6fda-4208-81c6-907bb081f9d3.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 24
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 19
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00051f19-457d-48f7-8cf1-661bcdde01fd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 18
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68d3f9d0-ac64-4278-84e7-2339d4947efd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6b5753dc-bf33-4d70-81be-5a45942195fb.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58425896-1f48-4825-89c2-a981554eec39.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/8/b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/46/5df4262e-0736-4f21-b576-089f2d66fb21.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/9ad66821-55a8-4207-8cd4-85ccb91187ea.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/398e1637-3af5-49e3-9154-3d150a99cd26.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/034cd1ee-574f-48a3-bab5-92d4ad7929f4.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/f329092f-25ef-41ef-8da5-34e7936c4fce.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/44/56de0dbd-2ee7-4329-a072-4034d47557f8.ico[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/18/5bbd3848-326b-42e4-8746-ee160901df02.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/43/692ff94c-5302-4ea0-b6a4-bd9233e825ff.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/38/b1655528-d003-4317-971f-abdc247abed7.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/13/70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0de826a0-acca-471f-b81e-e91b523be8c7.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/37/cac06d31-20af-4f92-a488-f8923e6c68ad.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0d76ced2-2a28-473b-8c2e-1be74437daec.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/28/0077e40f-3fe2-495f-8476-921f535f0064.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/30/a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/29/dba4d116-228d-440d-b508-573688d18c00.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/27/4cc7898b-5f7a-4630-b422-85aa3b8ac450.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/26/40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/25/e44efaf1-7213-48ea-9827-569c95b0a94e.webp[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/24/1606507d-6fda-4208-81c6-907bb081f9d3.webp[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/12/1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/19/a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/18/00051f19-457d-48f7-8cf1-661bcdde01fd.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/17/68d3f9d0-ac64-4278-84e7-2339d4947efd.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/16/6b5753dc-bf33-4d70-81be-5a45942195fb.png[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/14/58425896-1f48-4825-89c2-a981554eec39.webp[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/15/2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:31 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/user/sign-in[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQ0MDIsImV4cCI6MTcyMTAxNjIwMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.NtwDqIC586SHeWE70JMwwhJTVL0J68D97-wviWx-lOzPywiXnEWVpllRuoj1WmbFjmEfMt-KKuz369o0F5L_tg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.user.UserControllerImpl] [36mp; SignInPostReq(uid=mic1, upw=1212, providerType=null)[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId
                , A.uid AS uid
                , A.upw AS upw
                , A.nm AS nm
                , A.pic AS pic
                , A.created_at AS createdAt
                , A.updated_at AS updatedAt
                , B.role AS role
        FROM user A
        LEFT JOIN user_roles B
        ON A.user_id = B.user_id
        WHERE A.uid = 'mic1'
        AND A.provider_type = 'LOCAL'
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|--------------------|----------|
|user_id |uid  |upw                                                          |nm  |pic                                      |created_at          |updated_at          |role      |
|--------|-----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|--------------------|----------|
|1       |mic1 |$2a$10$gSmS4Bw0wi35PURGxKeq0ua3V0xI20f5NrxelSkSmLXFaPMENt8Qm |홍길동 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-05-03 18:00:47 |2024-07-15 10:14:51 |ROLE_USER |
|--------|-----|-------------------------------------------------------------|----|-----------------------------------------|--------------------|--------------------|----------|
[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/logo.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /api/feed[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjEwMTQ0OTMsImV4cCI6MTcyMTAxNjI5Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiXX0ifQ.4qR9V8Mhra79I_-EZDBF1IY_BKQduQwA5OeIxq1l3oAYa_jMEdrGn5dAhMUFcEg9pFM2ASpj8pdbVZQu_Ws-oQ[0;39m
[2024-07-15 12:34:53 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg.][0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.created_at AS createdAt,
                A.contents,
                A.location,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        INNER JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND c.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /fimg/defaultProfileImg.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|feed_id |user_id |nm    |pic                                       |created_at          |contents                           |location |isfav |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
|46      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 11:05:47 |dfgh                               |dfgh     |0     |
|45      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:49:59 |asdasd                             |asdasd   |0     |
|44      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-06-27 10:05:12 |asd                                |asdasd   |0     |
|43      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-16 12:47:44 |ㅁㅁ                                 |ㅁㅁ       |0     |
|38      |18      |hi    |5bbd3848-326b-42e4-8746-ee160901df02.jpg  |2024-05-14 13:25:45 |a                                  |a        |0     |
|37      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-13 16:42:50 |a                                  |a        |0     |
|32      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-10 12:11:37 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|30      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 18:10:10 |ㅁㅁ                                 |ㅁㅁ       |0     |
|29      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-09 17:30:52 |히히                                 |대구시      |0     |
|28      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 15:04:51 |a                                  |a        |0     |
|27      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:46 |ㅁㄴㅇㄹ                               |ㄻㄴㅇ      |0     |
|26      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:54:20 |그린                                 |컴퍼       |0     |
|25      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:45:10 |aa                                 |aa       |0     |
|24      |13      |홍길동   |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png  |2024-05-08 14:43:30 |aa                                 |aa       |0     |
|19      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:53:53 |보보보..봇치는 씹덕이 아니라고 생각해요             |도쿄       |0     |
|18      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:52:47 |봇치 글쓰는 애 오타쿠임 ㅋㅋ                   |대구시      |0     |
|17      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:51:10 |봇치더락 총집편 2024년 6월 7일 개봉
많은사랑 부탁드려요 |도쿄       |0     |
|16      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:51:03 |ㅋㅋ                                 |ㅋㅋ       |0     |
|15      |8       |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg  |2024-05-07 16:50:07 |ㅁㄴㅇ                                |ㅁㄴㅇ      |0     |
|14      |12      |재문    |1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp |2024-05-07 16:48:33 |온세상이 봇치다..                         |도쿄       |0     |
|--------|--------|------|------------------------------------------|--------------------|-----------------------------------|---------|------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 46
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5df4262e-0736-4f21-b576-089f2d66fb21.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 46
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 45
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ad66821-55a8-4207-8cd4-85ccb91187ea.png |
|398e1637-3af5-49e3-9154-3d150a99cd26.png |
|6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png |
|034cd1ee-574f-48a3-bab5-92d4ad7929f4.png |
|f329092f-25ef-41ef-8da5-34e7936c4fce.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 45
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 44
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56de0dbd-2ee7-4329-a072-4034d47557f8.ico |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 44
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 43
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|692ff94c-5302-4ea0-b6a4-bd9233e825ff.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 43
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|101             |gd      |2024-05-21 10:51:23 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|103             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|104             |ㅎㅇ      |2024-05-21 10:51:33 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|105             |ㅎㅇ      |2024-05-21 10:51:34 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1655528-d003-4317-971f-abdc247abed7.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm    |pic                                      |user_id |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
|102             |ㅎㅇ      |2024-05-21 10:51:26 |유사한국인 |b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg |8       |
|----------------|--------|--------------------|------|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cac06d31-20af-4f92-a488-f8923e6c68ad.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|feed_comment_id |comment |created_at          |nm  |pic                                      |user_id |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
|106             |asdf    |2024-05-23 10:49:21 |홍길동 |70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png |13      |
|----------------|--------|--------------------|----|-----------------------------------------|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0de826a0-acca-471f-b81e-e91b523be8c7.png |
|bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg |
|0d76ced2-2a28-473b-8c2e-1be74437daec.jpg |
|724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg |
|70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dba4d116-228d-440d-b508-573688d18c00.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0077e40f-3fe2-495f-8476-921f535f0064.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cc7898b-5f7a-4630-b422-85aa3b8ac450.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 27
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 26
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e44efaf1-7213-48ea-9827-569c95b0a94e.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 25
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|1606507d-6fda-4208-81c6-907bb081f9d3.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 24
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 19
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00051f19-457d-48f7-8cf1-661bcdde01fd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 18
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68d3f9d0-ac64-4278-84e7-2339d4947efd.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6b5753dc-bf33-4d70-81be-5a45942195fb.png |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg |
|-----------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58425896-1f48-4825-89c2-a981554eec39.webp |
|------------------------------------------|
[0;39m
[2024-07-15 12:34:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.comment, A.created_at AS createdAt,
               B.nm AS writerNm, B.pic AS writerPic, B.user_id AS writerId
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|---|----|--------|
|feed_comment_id |comment |created_at |nm |pic |user_id |
|----------------|--------|-----------|---|----|--------|
|----------------|--------|-----------|---|----|--------|
[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/8/b8c01735-c2c4-437d-ba0f-46bb318237dc.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/46/5df4262e-0736-4f21-b576-089f2d66fb21.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/9ad66821-55a8-4207-8cd4-85ccb91187ea.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/398e1637-3af5-49e3-9154-3d150a99cd26.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/6d13d9bf-b11a-41e5-9c67-9877ffeaa6d9.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/034cd1ee-574f-48a3-bab5-92d4ad7929f4.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/45/f329092f-25ef-41ef-8da5-34e7936c4fce.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/44/56de0dbd-2ee7-4329-a072-4034d47557f8.ico[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/18/5bbd3848-326b-42e4-8746-ee160901df02.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/43/692ff94c-5302-4ea0-b6a4-bd9233e825ff.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/38/b1655528-d003-4317-971f-abdc247abed7.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/13/70acbe3c-7ecc-4e29-8749-c27cd811e0d4.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/37/cac06d31-20af-4f92-a488-f8923e6c68ad.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0de826a0-acca-471f-b81e-e91b523be8c7.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/bdcd8370-237b-4c5c-ad17-4d3687e3bbc4.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/0d76ced2-2a28-473b-8c2e-1be74437daec.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/724cd9fb-a9ac-4ef6-9ad0-346b696ffe8c.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/32/70b9c3bd-a8ab-417f-b1cc-7e972daee7fc.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/30/a2c9c133-c92f-4384-9e4d-3be809145a4c.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/29/dba4d116-228d-440d-b508-573688d18c00.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/27/4cc7898b-5f7a-4630-b422-85aa3b8ac450.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/28/0077e40f-3fe2-495f-8476-921f535f0064.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/26/40eeb99a-102f-478d-b0b8-e8f39e75dbbe.webp[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/25/e44efaf1-7213-48ea-9827-569c95b0a94e.webp[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/24/1606507d-6fda-4208-81c6-907bb081f9d3.webp[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/user/12/1f75390e-6d9b-47ce-841b-1bdf0dec7d6a.webp[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/19/a1530b02-6725-4ad4-b4b9-55d19c80e08f.webp[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/18/00051f19-457d-48f7-8cf1-661bcdde01fd.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/17/68d3f9d0-ac64-4278-84e7-2339d4947efd.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/16/6b5753dc-bf33-4d70-81be-5a45942195fb.png[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/15/2c9bf7b3-8943-4e36-b0b4-deb34f43f202.jpg[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/feed/14/58425896-1f48-4825-89c2-a981554eec39.webp[0;39m
[2024-07-15 12:34:53 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:37:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter] [36mRequest URI: /pic/2nd/student/undefined/47872175-b41f-4080-bcf9-dc72604c46d5.png[0;39m
[2024-07-15 12:37:07 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengram.security.jwt.JwtAuthenticationFilter] [36mJwtAuthenticationFilter-Token: null[0;39m
[2024-07-15 12:37:07 [33mWARN [0;39m http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [36mResolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource 2nd/student/undefined/47872175-b41f-4080-bcf9-dc72604c46d5.png.][0;39m
[2024-07-15 12:40:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-15 12:40:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-15 15:24:34 INFO  background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-07-15 15:24:34 INFO  Test worker] [com.green.greengram.user.UserMapperTest] Starting UserMapperTest using Java 17.0.11 with PID 8628 (started by Administrator in D:\2024-01\backEnd\GreengramSecurity)
[2024-07-15 15:24:34 INFO  Test worker] [com.green.greengram.user.UserMapperTest] The following 1 profile is active: "tdd"
[2024-07-15 15:24:35 INFO  Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-07-15 15:24:35 WARN  Test worker] [org.springframework.context.annotation.AnnotationConfigApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute database script
[2024-07-15 15:24:35 INFO  Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-07-15 15:24:35 ERROR Test worker] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute database script
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:67)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 109 common frames omitted
Caused by: java.lang.RuntimeException: Driver net.sf.log4jdbc.sql.jdbcapi.DriverSpy claims to not accept jdbcUrl, D:\download\greengram_tdd\
	at com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:110)
	at com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:326)
	at com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:112)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:93)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	... 117 common frames omitted
[2024-07-15 15:24:35 WARN  Test worker] [org.springframework.test.context.TestContextManager] Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.green.greengram.user.UserMapperTest@61037caf]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@7926352f testClass = com.green.greengram.user.UserMapperTest, locations = [], classes = [com.green.greengram.GreengramApplication], contextInitializerClasses = [], activeProfiles = ["tdd"], propertySourceDescriptors = [], propertySourceProperties = ["org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4a11eb84, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@721685ee, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4bc28c33, [ImportsContextCustomizer@5bc63e20 key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@60641ec8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4a891c97, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@17ee3732], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute database script
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:67)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 109 common frames omitted
Caused by: java.lang.RuntimeException: Driver net.sf.log4jdbc.sql.jdbcapi.DriverSpy claims to not accept jdbcUrl, D:\download\greengram_tdd\
	at com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:110)
	at com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:326)
	at com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:112)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:93)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	... 117 common frames omitted
[2024-07-15 15:24:49 INFO  background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-07-15 15:24:49 INFO  Test worker] [com.green.greengram.user.UserMapperTest] Starting UserMapperTest using Java 17.0.11 with PID 17600 (started by Administrator in D:\2024-01\backEnd\GreengramSecurity)
[2024-07-15 15:24:49 INFO  Test worker] [com.green.greengram.user.UserMapperTest] No active profile set, falling back to 1 default profile: "default"
[2024-07-15 15:24:49 INFO  Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-07-15 15:24:50 INFO  Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c81cd82
[2024-07-15 15:24:50 INFO  Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-07-15 15:24:50 INFO  Test worker] [com.green.greengram.user.UserMapperTest] Started UserMapperTest in 1.089 seconds (process running for 1.935)
[2024-07-15 15:24:50 DEBUG Test worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm
                , A.pic
                , A.created_at AS createdAt
                , B.feedCnt
                , B.favCnt
                , C.following
                , C.follower
                , C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id
                    , COUNT(DISTINCT A.feed_id) AS feedCnt
                    , COUNT(B.feed_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 1
        ) B
        INNER JOIN (
            SELECT
                SUM(if(from_user_id = 1 , 1 , 0 )) AS `following`,
                SUM(if(to_user_id = 1 , 1 , 0 )) AS `follower`,
                IFNULL(
                   SUM(
                        if(from_user_id = 0 AND to_user_id = 1 , 1 , 0)
                        +
                        if(from_user_id = 1 AND to_user_id = 0 , 2 , 0)
                       )
                , 0) AS `followState`
                FROM user_follow
        ) C
        WHERE A.user_id = 1
 {executed in 0 msec}
[2024-07-15 15:24:50 INFO  Test worker] [jdbc.resultsettable] 
|----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm  |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|홍길동 |a4983740-8a6d-4692-9e17-8b45e1b6f8e4.jpg |2024-05-03 18:00:47 |7       |1      |0         |1        |0           |
|----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|

[2024-07-15 15:24:50 INFO  SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-07-15 15:24:50 INFO  SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-07-15 15:25:07 INFO  background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-07-15 15:25:07 INFO  Test worker] [com.green.greengram.user.UserMapperTest] Starting UserMapperTest using Java 17.0.11 with PID 24492 (started by Administrator in D:\2024-01\backEnd\GreengramSecurity)
[2024-07-15 15:25:07 INFO  Test worker] [com.green.greengram.user.UserMapperTest] The following 1 profile is active: "tdd"
[2024-07-15 15:25:08 INFO  Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-07-15 15:25:08 WARN  Test worker] [org.springframework.web.context.support.GenericWebApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentControllerImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-07-15 15:25:08 INFO  Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-07-15 15:25:08 ERROR Test worker] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentControllerImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 110 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 124 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute database script
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 138 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:67)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 147 common frames omitted
Caused by: java.lang.RuntimeException: Driver net.sf.log4jdbc.sql.jdbcapi.DriverSpy claims to not accept jdbcUrl, D:\download\greengram_tdd\
	at com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:110)
	at com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:326)
	at com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:112)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:93)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	... 155 common frames omitted
[2024-07-15 15:25:08 WARN  Test worker] [org.springframework.test.context.TestContextManager] Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.green.greengram.user.UserMapperTest@66b6873f]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@4b32465 testClass = com.green.greengram.user.UserMapperTest, locations = [], classes = [com.green.greengram.GreengramApplication], contextInitializerClasses = [], activeProfiles = ["tdd"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e31139b8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b9df8a, [ImportsContextCustomizer@146f3d22 key = [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4795ded0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@42f33b5d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@f001896, org.springframework.boot.test.context.SpringBootTestAnnotation@3f347d28], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentControllerImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentServiceImpl' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 110 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main\com\green\greengram\feedcomment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 124 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute database script
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 138 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:67)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 147 common frames omitted
Caused by: java.lang.RuntimeException: Driver net.sf.log4jdbc.sql.jdbcapi.DriverSpy claims to not accept jdbcUrl, D:\download\greengram_tdd\
	at com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:110)
	at com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:326)
	at com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:112)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:93)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	... 155 common frames omitted
[2024-07-15 15:47:28 [32mINFO [0;39m background-preinit] [org.hibernate.validator.internal.util.Version] [36mHV000001: Hibernate Validator 8.0.1.Final[0;39m
[2024-07-15 15:47:28 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mStarting GreengramApplication using Java 17.0.11 with PID 23512 (D:\2024-01\backEnd\GreengramSecurity\build\classes\java\main started by Administrator in D:\2024-01\backEnd\GreengramSecurity)[0;39m
[2024-07-15 15:47:28 [32mINFO [0;39m restartedMain] [com.green.greengram.GreengramApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-07-15 15:47:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-07-15 15:47:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-07-15 15:47:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-07-15 15:47:29 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 15:47:29 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-07-15 15:47:29 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-07-15 15:47:29 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-07-15 15:47:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1197 ms[0;39m
[2024-07-15 15:47:29 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@38017069[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 13 endpoint(s) beneath base path '/actuator'[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [org.springframework.security.web.DefaultSecurityFilterChain] [36mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1c7b71e3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2995684c, org.springframework.security.web.context.SecurityContextHolderFilter@2561de1d, org.springframework.security.web.header.HeaderWriterFilter@28f7e09e, org.springframework.web.filter.CorsFilter@b1741a, org.springframework.security.web.authentication.logout.LogoutFilter@1bea6512, com.green.greengram.security.oauth2.OAuth2AuthenticationCheckRedirectUriFilter@4f9fdb0f, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@39ae7bd8, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@37104961, com.green.greengram.security.jwt.JwtAuthenticationFilter@4d4d582e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@528a5c11, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1eb6f65, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9324724, org.springframework.security.web.session.SessionManagementFilter@bb3fbde, org.springframework.security.web.access.ExceptionTranslationFilter@15090383, org.springframework.security.web.access.intercept.AuthorizationFilter@3b09886d][0;39m
[2024-07-15 15:47:30 [33mWARN [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mUnable to start LiveReload server[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-07-15 15:47:30 [33mWARN [0;39m restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] [36mException encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-07-15 15:47:30 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [36m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m
[2024-07-15 15:47:30 [31mERROR[0;39m restartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] [36m

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.
[0;39m
